
    TTTTTTTTTT  AAAAAAAAAA   BBBBBBB      LLLL        OOOOOOOOOO
    TTTTTTTTTT  AAA    AAA   BBBBBBBBB    LLLL        OOOOOOOOOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBBBBBB      LLLL        OOO    OOO
       TTT      AAAAAAAAAA   BBB  BBB     LLLL        OOO    OOO
       TTT      AAA    AAA   BBB    BBB   LLLL        OOO    OOO
       TTT      AAA    AAA   BBBBBBBBB    LLLLLLLLL   OOOOOOOOOO
       TTT      AAA    AAA   BBBBBBB      LLLLLLLLL   OOOOOOOOOO

 <TABLO  Version 7.0   August 2018>                                    





                     GEMPACK SOFTWARE
     << COPYRIGHT 1987-2018:  The Impact Project and KPSOFT >>
   
   

    +++  INFORMATION ABOUT THIS PRINT FILE  +++
   

 ! This file was created at 13:51:36 on 09-SEP-2020 by the program
 !  <TABLO  Version 7.0   August 2018>
 ! which accesses some of the routines in the GEMPACK software release
 !  <GEMPACK Release 12.1.003   January 2020>
 
 !     -------------------------------------------------------                
 !    !            GEMPACK Software System Licence            !               
 !    !  Source Code Licence for the GEMPACK Software System  !               
 !    !                 Licence No.  GFM-0094                 !               
 !    !          Licence for Release 12.1 of GEMPACK          !               
 !    !               Centre of Policy Studies                !               
 !    !            Victoria University, Melbourne             !               
 !     -------------------------------------------------------                
    

    +++  END OF INFORMATION ABOUT THIS PRINT FILE  +++

 ======================================================
           TABLO PORTABLE   
 ++> TABLO OPTIONS   ( --> indicates those in effect )
 ======================================================



      -----------                   ----------
  --> F1 CHECK                      L1 CHECK
      F2 CONDENSATION               L2 CONDENSATION
      F3 CODE GENERATION        --> L3 CODE GENERATION
      Mode
      ----
      INTERACTIVE
      BATCH
  --> UNSPECIFIED


 ==================================================
 ++> TABLO Input file is 'gtapu.tab'
 ++> This Information file is 'gtapu'
 ==================================================



 ******************************************************************************
 -1-
 -->                     Starting CHECK stage

 ******************************************************************************


      1   !<
      2       ==================================
      3       Global Trade Analysis Project
      4       The GTAP Modeling Framework
      5       GTAP Version 6.2
      6       September 2003
      7       ==================================
      8    
      9       For documentation see:
     10       (a) Hertel, T.W. and M.E. Tsigas, "Structure of the Standard GTAP Model",
     11       Chapter 2 in T.W. Hertel (editor) "Global Trade Analysis: Modeling and
     12       Applications", Cambridge University Press, 1997.
     13    
     14       (b) R.A. McDougall, "A New Regional Household Demand System for GTAP",
     15       GTAP Technical Paper #20, Center for Global Trade Analysis, Purdue
     16       University
     17    
     18       (c) Hertel T.W., K. Itakura and R.A. McDougall, "GTAP.TAB: The Standard
     19       GTAP Model" (yet to be drafted), GTAP Technical Paper, Center for Global
     20       Trade Analysis, Purdue University,
     21       http://www.agecon.purdue.edu/gtap/techpapr/.  This technical paper
     22       documents all of the changes since the GTAP book TAB file.
     23    
     24       --------------------
     25       HISTORY of this file
     26       --------------------
     27    
     28       Version 6.2 fixes bugs and provides minor enhancements:
     29           - EV_ALT, CNTdpar fix
     30           - SX_IR fix
     31           - new treatment of export and import tariffs
     32           - original levels defined for power-of-tax variables
     33           - CNTalleffir range extended from TRAD_COMM to DEMD_COMM
     34           - INCOME formula, quantity index equations more AnalyzeGE-friendly
     35    
     36       Version 6.1 fixes bugs in 6.0:
     37           - Computation of tax receipts ratio is now separately done for total
     38             tax and indirect tax (equation DTAXRATIO and DINDTAXRATIO).
     39           - Computation of DTBALR, the ratio of the trade balance to regional
     40             income, has been corrected (equation DTBALRATIO).
     41           - Computation of EV_ALT, the summary variable for EV, has been
     42             corrected (equation EV_DECOMPOSITION).
     43       Also the notation has been changed for the tax-income ratio variables:
     44           TGCR -> del_taxrgc,    TPCR -> del_taxrpc,    TIUR -> del_taxriu,
     45           TFUR -> del_taxrfu,    TOUTR -> del_taxrout,  TEXPR -> del_taxrexp,
     46           TIMPR -> del_taxrimp,  TINCR -> del_taxrinc,  DTAXR -> del_ttaxr.
     47    
     48       Version 6.0 replaces version 5.0 used in the August 2000 short course, but
     49       never formally released.  The subsequent changes have been quite
     50       significant (primarily focused on final demand and welfare decomposition),
     51       so we decided to give it a new version number.  This also prevents
     52       confusion with the soon to be released version 5.0 GTAP data set.
     53    
     54       The differences with the previous publicly released version of GTAP.TAB,
     55       Version 4.1, dated November 1998, are numerous.  One goal of this version
     56       is to reorganize the TAB file which had not be redesigned since its
     57       inception.  In addition, there is a long list of substantive changes that
     58       have been made between Version 4.1 and 6.0.  These include:
     59    
     60           - provision for multiple margins sectors (to accommodate post version
     61             5 GTAP data)
     62           - introduction of the new theory of final demand following McDougall's
     63             GTAP Technical Paper #20
     64           - modification of the welfare decomposition following McDougall's
     65             Technical Paper #20
     66           - correction to the treatment of technical change, ao, in the presence
     67             of ESUBT > 0 (affects equations VADEMAND and INTDEMAND)
     68           - addition of import-augmenting "technical change" in the Armington
     69             nest: ams which can be used to lower the effective price of imported
     70             products
     71           - specification of Baldwin-type capital accmulation effects following
     72             Francois' Technical Paper #7
     73           - introduction of uniform consumption tax instrument, tp(r)
     74    
     75       ----------------------------------
     76       Overview of the GTAP.TAB Structure
     77       ----------------------------------
     78       Preliminaries:
     79           FILES
     80           SETS
     81           READ statements of Base Data
     82           Common VARIABLES
     83           Common COEFFICIENTS
     84    
     85       Modules:
     86           1.  Government Consumption
     87           2.  Private Consumption
     88           3.  Firms
     89           4.  Investment, Global Bank, and Savings
     90           5.  International Trade
     91           6.  International Transport Services
     92           7.  Regional Household
     93           8.  Equilibrium Conditions
     94    
     95       Appendices:
     96           A.  Summary Indices
     97           B.  Equivalent Variation
     98           C.  Welfare Decomposition
     99           D.  Terms of Trade Decomposition
    100   >!
    101    
    102   !<
    103       -----
    104       FILES
    105       -----
    106   >!
    107    
    108   File
    109       GTAPSETS # file with set specification #;
    110   File
    111       GTAPDATA # file containing all base data #;
    112   File
    113       GTAPPARM # file containing behavioral parameters #;
    114    
    115   !<
    116       ----
    117       SETS
    118       ----
    119    
    120       Sets define relevant groupings of entities over which we will be
    121       performing operations in the model.  SUBSETS are defined in order to
    122       facilitate summation over only a portion of a given group, e.g., tradeable
    123       commodities.  Users with access to GEMPACK can increase the maximum set
    124       sizes to permit larger aggregations, provided you have sufficient RAM for
    125       implementing them The standard model (10x10 aggregation with decomposition
    126       code) is designed to run with 16 Mb of RAM.
    127    
    128       Aide-Memoire for Sets
    129       ---------------------
    130    
    131       |--------------------------------------|
    132       |         DEMD_COMM                    |
    133       |----------------------------------------------------|
    134       | ENDW_COMM |       TRAD_COMM          |  CGDS_COMM  |
    135       |----------------------------------------------------|
    136       |        NSAV_COMM                                   |
    137       |----------------------------------------------------|
    138                   |                     PROD_COMM          |
    139                   |----------------------------------------|
    140    
    141       For Endowments,
    142       |-------------------------|
    143       | ENDW_COMM               |
    144       |-------------------------|
    145       | ENDWM_COMM | ENDWS_COMM |
    146       |-------------------------|
    147   >!
    148    
    149   Coefficient
    150       VERNUM # version of GTAP data #;
    151   Read
    152       VERNUM from file GTAPDATA header "DVER";
    153   Update (change)
    154       VERNUM = 0.0; ! force it to be copied to update file !
    155    
    156   Set
    157       REG # regions in the model #
    158       maximum size 10 read elements from file GTAPSETS header "H1";
    159   Set
    160       TRAD_COMM # traded commodities #
    161       maximum size 10 read elements from file GTAPSETS header "H2";
    162   Set
    163       MARG_COMM # margin commodities #
    164       maximum size 10 read elements from file GTAPSETS header "MARG";
    165   Subset
    166       MARG_COMM is subset of TRAD_COMM;
    167   Set
    168       NMRG_COMM # non-margin commodities # = TRAD_COMM - MARG_COMM;
    169   Set
    170       CGDS_COMM # capital goods commodities #
    171       maximum size 1 read elements from file GTAPSETS header "H9";
    172   Set
    173       ENDW_COMM # endowment commodities #
    174       maximum size 5 read elements from file GTAPSETS header "H6";
    175   Set
    176       PROD_COMM # produced commodities # = TRAD_COMM union CGDS_COMM;
    177   Set
    178       DEMD_COMM # demanded commodities # = ENDW_COMM union TRAD_COMM;
    179   Set
    180       NSAV_COMM # non-savings commodities # = DEMD_COMM union CGDS_COMM;
    181   Subset
    182       PROD_COMM is subset of NSAV_COMM;
    183    
    184   !<
    185       Check for non-overlapping sets (users can't use the same name for elements
    186       of ENDW_COMM, TRAD_COMM or CGDS_COMM).
    187   >!
    188    
    189   Coefficient
    190       SIZE_TRAD # size of TRAD_COMM set #;
    191   Formula
    192       SIZE_TRAD = sum(i,TRAD_COMM, 1);
    193   Coefficient
    194       SIZE_ENDW # size of ENDW_COMM set #;
    195   Formula
    196       SIZE_ENDW = sum(i,ENDW_COMM, 1);
    197   Coefficient
    198       SIZE_DEMD # size of DEMD_COMM set #;
    199   Formula
    200       SIZE_DEMD = sum(i,DEMD_COMM, 1);
    201   Assertion (initial)
    202       SIZE_DEMD = SIZE_TRAD + SIZE_ENDW;
    203    
    204   Coefficient
    205       SIZE_CGDS # size of CGDS_COMM set #;
    206   Formula
    207       SIZE_CGDS = sum(i,CGDS_COMM, 1);
    208   Coefficient
    209       SIZE_PROD # size of PROD_COMM set #;
    210   Formula
    211       SIZE_PROD = sum(i,PROD_COMM, 1);
    212   Assertion (initial)
    213       SIZE_PROD = SIZE_TRAD + SIZE_CGDS;
    214    
    215   !<
    216       The sluggish endowments are now defined dynamically, based on the variable
    217       SLUG.  SLUG is a binary variable that is zero for mobile endowments and
    218       one for sluggish endowments.  We must define and read in this variable
    219       before proceeding further.
    220   >!
    221   Coefficient (integer,parameter) (all,i,ENDW_COMM)
    222       SLUG(i) # sluggish primary factor endowments #;
    223   Read
    224       SLUG from file GTAPPARM header "SLUG";
    225    
    226   Set
    227       ENDWS_COMM
    228       # sluggish endowment commodities # = (all,i,ENDW_COMM: SLUG(i)>0);
    229   Set
    230       ENDWM_COMM
    231       # mobile endowment commodities # = ENDW_COMM - ENDWS_COMM;
    232   Set
    233       ENDWC_COMM # capital endowment commodity # (capital);
    234   !<
    235       This single element set is defined for the sake of convenience.
    236   >!
    237   Subset
    238       ENDWC_COMM is subset of ENDW_COMM;
    239    
    240   !<
    241       ----------------------------
    242       READ Statements of Base Data
    243       ----------------------------
    244    
    245       We read in here almost all the base data, and define variables and
    246       coefficients associated with them.  A few data arrays used each in a
    247       single module are read in those modules: VKB, VTMFSD, and DPARSUM.
    248    
    249       The READ statements are divided into six sections:
    250    
    251       Saving
    252       Government Consumption
    253       Private Consumption
    254       Firms
    255       Global Bank
    256       International Trade and Transport
    257    
    258       Since these are invariant for each solution of the model, they are termed
    259       coefficients.  Coefficients are assigned upper case to distinguish them
    260       from variables.  (This is purely cosmetic, as GEMPACK is not
    261       case-sensitive.) Variables in GEMPACK are assigned lower case labels to
    262       denote the fact that they are percentage changes.  In some cases, original
    263       levels values for selected variables are defined to permit the user to
    264       compare post-simulation levels values across several simulations.
    265    
    266       The updating command indicates how the new level of the coefficient will
    267       be computed based on the previous solution of the linearized equations.
    268       Note that the notation used in the update commands is a shorthand for
    269       total differentials of these coefficient values.  Thus, w * v indicates
    270       that we want to take the total differential of W * V, plug in the
    271       calculated values of w and v, and add this to the base level in order to
    272       obtain a revised value for this product.
    273   >!
    274    
    275   !<
    276       Saving
    277       ------
    278   >!
    279    
    280   Variable (all,r,REG)
    281       psave(r) # price of savings in region r #;
    282   Variable (all,r,REG)
    283       qsave(r) # regional demand for NET savings #;
    284   Coefficient (all,r,REG)
    285       SAVE(r) # expenditure on NET savings in region r valued at agent's prices #;
    286   Update (all,r,REG)
    287       SAVE(r) = psave(r) * qsave(r);
    288   Read
    289       SAVE from file GTAPDATA header "SAVE";
    290    
    291   !<
    292       Government Consumption
    293       ----------------------
    294   >!
    295    
    296   Variable (all,i,TRAD_COMM)(all,s,REG)
    297       pgd(i,s) # price of domestic i in government consumption in s #;
    298   Variable (orig_level=VDGM)(all,i,TRAD_COMM)(all,s,REG)
    299       qgd(i,s) # government hhld demand for domestic i in region s #;
    300   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    301       VDGA(i,r) # government consumption expenditure on domestic i in r #;
    302   Update (all,i,TRAD_COMM)(all,r,REG)
    303       VDGA(i,r) = pgd(i,r) * qgd(i,r);
    304   Read
    305       VDGA from file GTAPDATA header "VDGA";
    306    
    307   Variable (orig_level=1.0)(all,i,NSAV_COMM)(all,r,REG)
    308       pm(i,r) # market price of commodity i in region r #;
    309   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    310       VDGM(i,r) # government consumption expenditure on domestic i in r #;
    311   Update (all,i,TRAD_COMM)(all,r,REG)
    312       VDGM(i,r) = pm(i,r) * qgd(i,r);
    313   Read
    314       VDGM from file GTAPDATA header "VDGM";
    315    
    316   Variable (all,i,TRAD_COMM)(all,s,REG)
    317       pgm(i,s) # price of imports of i in government consumption in s #;
    318   Variable (orig_level=VIGM)(all,i,TRAD_COMM)(all,s,REG)
    319       qgm(i,s) # government hhld demand for imports of i in region s #;
    320   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    321       VIGA(i,r) # government consumption expenditure on imported i #;
    322   Update (all,i,TRAD_COMM)(all,r,REG)
    323       VIGA(i,r) = pgm(i,r) * qgm(i,r);
    324   Read
    325       VIGA from file GTAPDATA header "VIGA";
    326    
    327   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
    328       pim(i,r) # market price of composite import i in region r #;
    329   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    330       VIGM(i,r) # gov't consumption expenditure on i in r #;
    331   Update (all,i,TRAD_COMM)(all,r,REG)
    332       VIGM(i,r) = pim(i,r) * qgm(i,r);
    333   Read
    334       VIGM from file GTAPDATA header "VIGM";
    335    
    336   !<
    337       Private Consumption
    338       -------------------
    339   >!
    340    
    341   Variable (all,i,TRAD_COMM)(all,s,REG)
    342       ppd(i,s) # price of domestic i to private households in s #;
    343   Variable (orig_level=VDPM)(all,i,TRAD_COMM)(all,s,REG)
    344       qpd(i,s) # private hhld demand for domestic i in region s #;
    345   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    346       VDPA(i,r) # private consumption expenditure on domestic i in r #;
    347   Update (all,i,TRAD_COMM)(all,r,REG)
    348       VDPA(i,r) = ppd(i,r) * qpd(i,r);
    349   Read
    350       VDPA from file GTAPDATA header "VDPA";
    351    
    352   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    353       VDPM(i,r) # private consumption expenditure on domestic i in r #;
    354   Update (all,i,TRAD_COMM)(all,r,REG)
    355       VDPM(i,r) = pm(i,r) * qpd(i,r);
    356   Read
    357       VDPM from file GTAPDATA header "VDPM";
    358    
    359   Variable (all,i,TRAD_COMM)(all,s,REG)
    360       ppm(i,s) # price of imports of i by private households in s #;
    361   Variable (orig_level=VIPM)(all,i,TRAD_COMM)(all,s,REG)
    362       qpm(i,s) # private hhld demand for imports of i in region s #;
    363   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    364       VIPA(i,r) # private consumption expenditure on imported i in r #;
    365   Update (all,i,TRAD_COMM)(all,r,REG)
    366       VIPA(i,r) = ppm(i,r) * qpm(i,r);
    367   Read
    368       VIPA from file GTAPDATA header "VIPA";
    369    
    370   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)
    371       VIPM(i,r) # private consumption expenditure on i in r #;
    372   Update (all,i,TRAD_COMM)(all,r,REG)
    373       VIPM(i,r)= pim(i,r) * qpm(i,r);
    374   Read
    375       VIPM from file GTAPDATA header "VIPM";
    376    
    377   !<
    378       Firms
    379       -----
    380   >!
    381    
    382   Variable (all,i,NSAV_COMM)(all,r,REG)
    383       ps(i,r) # supply price of commodity i in region r #;
    384   Variable (orig_level=VOM)(all,i,NSAV_COMM)(all,r,REG)
    385       qo(i,r) # industry output of commodity i in region r #;
    386   Coefficient (ge 0)(all,i,ENDW_COMM)(all,r,REG)
    387       EVOA(i,r) # value of commodity i output in region r #;
    388   Update (all,i,ENDW_COMM)(all,r,REG)
    389       EVOA(i,r) = ps(i,r) * qo(i,r);
    390   Read
    391       EVOA from file GTAPDATA header "EVOA";
    392    
    393   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    394       pfe(i,j,r) # firms' price for endowment commodity i in ind. j, region r #;
    395   Variable (orig_level=VFM)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    396       qfe(i,j,r)  # demand for endowment i for use in ind. j in region r #;
    397   Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    398       EVFA(i,j,r) # producer expenditure on i by j in r at agent's prices #;
    399   Update (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    400       EVFA(i,j,r) = pfe(i,j,r) * qfe(i,j,r);
    401   Read
    402       EVFA from file GTAPDATA header "EVFA";
    403    
    404   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    405       pfd(i,j,s) # price index for domestic purchases of i by j in region s #;
    406   Variable (orig_level=VDFM)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    407       qfd(i,j,s)  # domestic good i demanded by industry j in region s #;
    408   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    409       VDFA(i,j,r) # purchases of domestic i for use by j in region r #;
    410   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    411       VDFA(i,j,r) = pfd(i,j,r) * qfd(i,j,r);
    412   Read
    413       VDFA from file GTAPDATA header "VDFA";
    414    
    415   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    416       pfm(i,j,s) # price index for imports of i by j in region s #;
    417   Variable (orig_level=VIFM)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    418       qfm(i,j,s) # demand for i by industry j in region s #;
    419   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    420       VIFA(i,j,r) # purchases of imported i for use by j in region r #;
    421   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    422       VIFA(i,j,r) = pfm(i,j,r) * qfm(i,j,r);
    423   Read
    424       VIFA from file GTAPDATA header "VIFA";
    425    
    426   Variable (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    427       pmes(i,j,r) # market price of sluggish endowment i used by j in r #;
    428   Coefficient (ge 0)(all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    429       VFM(i,j,r) # producer expenditure on i by j in r valued at mkt prices #;
    430   Update (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
    431       VFM(i,j,r) = pm(i,r) * qfe(i,j,r);
    432   Update (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    433       VFM(i,j,r) = pmes(i,j,r) * qfe(i,j,r);
    434   Read
    435       VFM from file GTAPDATA header "VFM";
    436    
    437   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    438       VIFM(i,j,r) # purchases of imports i for use by j in region r #;
    439   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    440       VIFM(i,j,r) = pim(i,r) * qfm(i,j,r);
    441   Read
    442       VIFM from file GTAPDATA header "VIFM";
    443    
    444   Coefficient (ge 0)(all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    445       VDFM(i,j,r) # purchases of domestic i for use by j in region r #;
    446   Update (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    447       VDFM(i,j,r) = pm(i,r) * qfd(i,j,r);
    448   Read
    449       VDFM from file GTAPDATA header "VDFM";
    450    
    451   !<
    452       Global Bank
    453       -----------
    454   >!
    455    
    456   Variable (all,r,REG)
    457       kb(r) # beginning-of-period capital stock in r #;
    458   Variable (all,r,REG)
    459       pcgds(r) # price of investment goods = ps("cgds",r) #;
    460   Coefficient (ge 0)(all,r,REG)
    461       VDEP(r) # value of capital depeciation in r (exogenous) #;
    462   Update (all,r,REG)
    463       VDEP(r) = kb(r) * pcgds(r);
    464   Read
    465       VDEP from file GTAPDATA header "VDEP";
    466   !<
    467       Value of capital depreciation is used to compute the (exogenous)
    468       depreciation rate and therefore does not appear in update.
    469   >!
    470    
    471   !<
    472       International Trade and Transport
    473       ---------------------------------
    474   >!
    475    
    476   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    477       pms(i,r,s) # domestic price for good i supplied from r to region s #;
    478   Variable (orig_level=VXMD)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    479       qxs(i,r,s) # export sales of commodity i from r to region s #;
    480   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    481       VIMS(i,r,s) # imports of i from r to s valued at domestic mkt prices #;
    482   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    483       VIMS(i,r,s) = pms(i,r,s) * qxs(i,r,s);
    484   Read
    485       VIMS from file GTAPDATA header "VIMS";
    486    
    487   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    488       pcif(i,r,s) # CIF world price of commodity i supplied from r to s #;
    489   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    490       VIWS(i,r,s) # imports of i from r to s valued CIF (tradeables only) #;
    491   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    492       VIWS(i,r,s) = pcif(i,r,s) * qxs(i,r,s);
    493   Read
    494       VIWS from file GTAPDATA header "VIWS";
    495    
    496   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    497       pfob(i,r,s) # FOB world price of commodity i supplied from r to s #;
    498   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    499       VXWD(i,r,s) # exports of i from r to s valued FOB (tradeables only) #;
    500   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    501       VXWD(i,r,s) = pfob(i,r,s) * qxs(i,r,s);
    502   Read
    503       VXWD from file GTAPDATA header "VXWD";
    504    
    505   Coefficient (ge 0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    506       VXMD(i,r,s)
    507       # exports of i from r to s valued at mkt prices (tradeables only) #;
    508   Update (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    509       VXMD(i,r,s) = pm(i,r) * qxs(i,r,s);
    510   Read
    511       VXMD from file GTAPDATA header "VXMD";
    512    
    513   Variable (orig_level=VST)(all,m,MARG_COMM)(all,r,REG)
    514       qst(m,r) # sales of m from r to international transport #;
    515   Coefficient (ge 0)(all,m,MARG_COMM)(all,r,REG)
    516       VST(m,r)
    517       # exprts of m from r for int'l trnsport valued at mkt p (tradeables only) #;
    518   Update (all,m,MARG_COMM)(all,r,REG)
    519       VST(m,r) = pm(m,r) * qst(m,r);
    520   Read
    521       VST from file GTAPDATA header "VST";
    522    
    523   !<
    524       ----------------
    525       Common VARIABLES
    526       ----------------
    527    
    528       Common variables are defined as variables which are used in more than one
    529       module.  For example, the variable y(r) is used in the Goverment
    530       Consumption, Private Consumption, Firms, Regional Household and
    531       Investment, Global Bank and Savings modules.  Appendices, e.g., Summary
    532       Indices, are not included in this definition.
    533   >!
    534    
    535   Variable (all,r,REG)
    536       y(r) # regional household income in region r #;
    537   Variable (all,r,REG)
    538       pop(r) # regional population #;
    539   Variable (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
    540       qoes(i,j,r) # supply of sluggish endowment i used by j in r #;
    541   Variable (all,i,ENDW_COMM)(all,r,REG)
    542       endwslack(i,r) # slack variable in endowment market clearing condition #;
    543   !<
    544       This is exogenous, unless the user wishes to employ a partial equilibrium
    545       closure in which the price of one or more of the primary factors is fixed.
    546   >!
    547    
    548   Variable (all,r,REG)
    549       pgov(r) # price index for gov't hhld expenditure in region r #;
    550   Variable (all,r,REG)
    551       yg(r)
    552       # regional government consumption expenditure in region r #;
    553   Variable (all,r,REG)
    554       ug(r) # per capita utility from gov't expend. in region r #;
    555   Variable (all,r,REG)
    556       ppriv(r)
    557       # price index for private consumption expenditure in region r #;
    558   Variable (all,r,REG)
    559       uepriv(r)
    560       # elasticity of cost wrt utility from private consumption #;
    561   Variable (all,r,REG)
    562       yp(r) # regional private consumption expenditure in region r #;
    563   Variable (all,r,REG)
    564       up(r) # per capita utility from private expend. in region r #;
    565   Variable (all,i,NSAV_COMM)(all,r,REG)
    566       to(i,r) # output (or income) tax in region r #;
    567   !<
    568       Note:  It is important that the user NOT shock the tax on capital goods
    569       output, as this will cause an inconsistency in the update relationship for
    570       VOM(cgds).
    571   >!
    572   Variable (orig_level=VIM)(all,i,TRAD_COMM)(all,s,REG)
    573       qim(i,s) # aggregate imports of i in region s, market price weights #;
    574   Variable
    575       globalcgds # global supply of capital goods for NET investment #;
    576   Variable
    577       pcgdswld # world average price of capital goods (net investment weights) #;
    578    
    579   !<
    580       The following variables could be dropped when converting to levels
    581       equation for income.  They are only needed for the linearized equation.
    582       The idea here is to look at the ratio of taxes to income in order to
    583       preserve homogeneity in prices.  (We could also look at changes in tax
    584       revenue, but then a uniform price increase would change this variable.)
    585       Obviously a simple percentage change variable doesn't work, since many
    586       taxes are initially zero.  The basic logic of this approach is as follows:
    587    
    588       Let R be the ratio of taxes to income: R = T/Y, then:
    589           dR = d(T/Y) = R(t - y)/100
    590       multiply through by Y to get:
    591           YdR = dT - Ty/100
    592       This ratio change is computed for each tax type and for total taxes.  Then
    593       the change in tax revenue itself may be computed as:
    594           dT = YdR + Ty/100
    595       in order to determine regional income.
    596   >!
    597    
    598   Variable (change) (all,r,REG)
    599       del_taxrgc(r) # change in ratio of government consumption tax to INCOME #;
    600   Variable (change) (all,r,REG)
    601       del_taxrpc(r) # change in ratio of private consumption tax to INCOME #;
    602   Variable (change) (all,r,REG)
    603       del_taxriu(r) # change in ratio of tax on intermediate usage to INCOME #;
    604   Variable (change) (all,r,REG)
    605       del_taxrfu(r) # change in ratio of tax on primary factor usage to INCOME #;
    606   Variable (change) (all,r,REG)
    607       del_taxrout(r) # change in ratio of output tax to INCOME #;
    608   Variable (change) (all,r,REG)
    609       del_taxrexp(r) # change in ratio of export tax to INCOME #;
    610   Variable (change) (all,r,REG)
    611       del_taxrimp(r) # change in ratio of import tax to INCOME #;
    612   Variable (change) (all,r,REG)
    613       del_taxrinc(r) # change in ratio of income tax to INCOME #;
    614    
    615   !<
    616       -------------------
    617       Common COEFFICIENTS
    618       -------------------
    619    
    620       Key Derivatives of the Base Data
    621       Regional Expenditure and Income
    622       Indirect Tax Receipts
    623       Miscellaneous Coefficients
    624    
    625       Common Coefficients are defined as coefficients which are used in more
    626       than one module.  For example, ESUBD(i) is used in the Goverment
    627       Household, Private Household, and Firms modules.
    628   >!
    629    
    630   !<
    631       Key Derivatives of the Base Data
    632       --------------------------------
    633   >!
    634    
    635   Coefficient (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
    636       VFA(i,j,r) # producer expenditure on i by j in r valued at agent's prices #;
    637   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    638       VFA(i,j,r) = EVFA(i,j,r);
    639   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
    640       VFA(i,j,s) = VDFA(i,j,s) + VIFA(i,j,s);
    641    
    642   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    643       VOA(i,r) # value of commodity i output in region r at agent's prices #;
    644   Formula (all,i,ENDW_COMM)(all,r,REG)
    645       VOA(i,r) = EVOA(i,r);
    646   Formula (all,i,PROD_COMM)(all,r,REG)
    647       VOA(i,r) = sum(j,DEMD_COMM, VFA(j,i,r));
    648    
    649   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    650       VDM(i,r) # domestic sales of i in r at mkt prices (tradeables only) #;
    651   Formula (all,i,TRAD_COMM)(all,r,REG)
    652       VDM(i,r) = VDPM(i,r) + VDGM(i,r) + sum(j,PROD_COMM, VDFM(i,j,r));
    653    
    654   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    655       VOM(i,r) # value of commodity i output in region r at market prices #;
    656   Formula (all,i,ENDW_COMM)(all,r,REG)
    657       VOM(i,r) = sum(j,PROD_COMM, VFM(i,j,r));
    658   Formula (all,m,MARG_COMM)(all,r,REG)
    659       VOM(m,r) = VDM(m,r) + sum(s,REG, VXMD(m,r,s)) + VST(m,r);
    660   Formula (all,i,NMRG_COMM)(all,r,REG)
    661       VOM(i,r) = VDM(i,r) + sum(s,REG, VXMD(i,r,s));
    662   Formula (all,h,CGDS_COMM)(all,r,REG)
    663       VOM(h,r) = VOA(h,r);
    664    
    665   !<
    666       Regional Expenditure and Income
    667       -------------------------------
    668    
    669       Regional income is allocated between private consumption expenditure,
    670       government consumption expenditure, and saving.
    671    
    672       Expenditure of Regional Household
    673       .................................
    674    
    675                  Regional household(h.h.)
    676                   Expenditure = Income
    677                            _/|\_
    678                          _/  |  \_
    679                        _/    |    \_
    680                      _/      |      \_
    681                    _/        |        \_
    682          Private h.h.        |        Government h.h.
    683          ( PRIVEXP )         |          ( GOVEXP )
    684             _/\_             |              _/\_
    685           _/    \_           |            _/    \_
    686          /        \          |           /        \
    687       Domestic  Imported   Savings    Domestic    Imported
    688        Goods     Goods     ( SAVE )    Goods       Goods
    689       ( VDPA )  ( VIPA )              ( VDGA )    ( VIGA )
    690    
    691       Note: The coefficients at the ends of branches are
    692             Base Data, e.g., VDPA, SAVE.
    693   >!
    694    
    695   ! government consumption expenditure, GOVEXP !
    696   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    697       VGA(i,r) # government consn expenditure on i in r at agent's prices #;
    698   Formula (all,i,TRAD_COMM)(all,s,REG)
    699       VGA(i,s) = VDGA(i,s) + VIGA(i,s);
    700   Coefficient (all,r,REG)
    701       GOVEXP(r) # government expenditure in region r #;
    702   Formula (all,r,REG)
    703       GOVEXP(r) = sum(i,TRAD_COMM, VGA(i,r));
    704    
    705   ! private consumption expenditure, PRIVEXP !
    706   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    707       VPA(i,r) # private hhld expenditure on i in r valued at agent's prices #;
    708   Formula (all,i,TRAD_COMM)(all,s,REG)
    709       VPA(i,s) = VDPA(i,s) + VIPA(i,s);
    710   Coefficient (all,r,REG)
    711       PRIVEXP(r) # private consumption expenditure in region r #;
    712   Formula (all,r,REG)
    713       PRIVEXP(r) = sum(i,TRAD_COMM, VPA(i,r));
    714    
    715   ! aggregate expenditure + saving = aggregate income !
    716   Coefficient (all,r,REG)
    717       INCOME(r) # level of expenditure, which equals NET income in region r #;
    718   Formula (all,r,REG)
    719       INCOME(r) = PRIVEXP(r) + GOVEXP(r) + SAVE(r);
    720    
    721   !<
    722       Indirect Tax Receipts
    723       ---------------------
    724   >!
    725    
    726   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    727       DGTAX(i,r) # tax on government consumption of domestic good i in region r #;
    728   Formula (all,i,TRAD_COMM)(all,r,REG)
    729       DGTAX(i,r) = VDGA(i,r) - VDGM(i,r);
    730   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    731       IGTAX(i,r) # tax on government consumption of imported good i in region r #;
    732   Formula (all,i,TRAD_COMM)(all,r,REG)
    733       IGTAX(i,r) = VIGA(i,r) - VIGM(i,r);
    734   Coefficient (all,r,REG)
    735       TGC(r) # government consumption tax payments in r #;
    736   Formula (all,r,REG)
    737       TGC(r) = sum(i,TRAD_COMM, DGTAX(i,r) + IGTAX(i,r));
    738    
    739   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    740       DPTAX(i,r) # tax on private consumption of domestic good i in region r #;
    741   Formula (all,i,TRAD_COMM)(all,r,REG)
    742       DPTAX(i,r) = VDPA(i,r) - VDPM(i,r);
    743   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    744       IPTAX(i,r) # tax on private consumption of imported good i in region r #;
    745   Formula (all,i,TRAD_COMM)(all,r,REG)
    746       IPTAX(i,r) = VIPA(i,r) - VIPM(i,r);
    747   Coefficient (all,r,REG)
    748       TPC(r) # private consumption tax payments in r #;
    749   Formula (all,r,REG)
    750       TPC(r) = sum(i,TRAD_COMM, DPTAX(i,r) + IPTAX(i,r));
    751    
    752   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    753       DFTAX(i,j,r) # tax on use of domestic intermediate good i by j in r #;
    754   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    755       DFTAX(i,j,r) = VDFA(i,j,r) - VDFM(i,j,r);
    756   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    757       IFTAX(i,j,r) # tax on use of imported intermediate good i by j in r #;
    758   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
    759       IFTAX(i,j,r) = VIFA(i,j,r) - VIFM(i,j,r);
    760   Coefficient (all,r,REG)
    761       TIU(r) # firms' tax payments on intermediate goods usage in r #;
    762   Formula (all,r,REG)
    763       TIU(r) = sum(i,TRAD_COMM, sum(j,PROD_COMM, DFTAX(i,j,r) + IFTAX(i,j,r)));
    764    
    765   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    766       ETAX(i,j,r) # tax on use of endowment good i by industry j in region r #;
    767   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
    768       ETAX(i,j,r) = VFA(i,j,r) - VFM(i,j,r);
    769   Coefficient (all,r,REG)
    770       TFU(r) # firms' tax payments on primary factor usage in r #;
    771   Formula (all,r,REG)
    772       TFU(r) = sum(i,ENDW_COMM, sum(j,PROD_COMM, ETAX(i,j,r)));
    773    
    774   Coefficient (all,i,NSAV_COMM)(all,r,REG)
    775       PTAX(i,r) # output tax on good i in region r #;
    776   Formula (all,i,NSAV_COMM)(all,r,REG)
    777       PTAX(i,r) = VOM(i,r) - VOA(i,r);
    778   Coefficient (all,r,REG)
    779       TOUT(r) # production tax payments in r #;
    780   Formula (all,r,REG)
    781       TOUT(r) = sum(i,PROD_COMM, PTAX(i,r));
    782    
    783   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    784       XTAXD(i,r,s) # tax on exports of good i from source r to destination s #;
    785   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    786       XTAXD(i,r,s) = VXWD(i,r,s) - VXMD(i,r,s);
    787   Coefficient (all,r,REG)
    788       TEX(r) # export tax payments in r #;
    789   Formula (all,r,REG)
    790       TEX(r) = sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s)));
    791    
    792   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    793       MTAX(i,r,s) # tax on imports of good i from source r in destination s #;
    794   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
    795       MTAX(i,r,s) = VIMS(i,r,s) - VIWS(i,r,s);
    796   Coefficient (all,r,REG)
    797       TIM(r) # import tax payments in r #;
    798   Formula (all,r,REG)
    799       TIM(r) = sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r)));
    800    
    801   !<
    802       Miscellaneous Coefficients
    803       --------------------------
    804   >!
    805    
    806   ! domestic/imported substitution elasticity !
    807   Coefficient (parameter)(all,i,TRAD_COMM)
    808       ESUBD(i)
    809       # region-generic el. of sub. domestic/imported for all agents #;
    810   Read
    811       ESUBD from file GTAPPARM header "ESBD";
    812    
    813   ! net global investment expenditure !
    814   Coefficient (all,r,REG)
    815       REGINV(r) # regional GROSS investment in r (value of "cgds" output) #;
    816   Formula (all,r,REG)
    817       REGINV(r) = sum(k,CGDS_COMM, VOA(k,r));
    818   Coefficient (all,r,REG)
    819       NETINV(r) # regional NET investment in region r #;
    820   Formula (all,r,REG)
    821       NETINV(r) = sum(k,CGDS_COMM, VOA(k,r)) - VDEP(r);
    822   Coefficient
    823       GLOBINV # global expenditures on net investment #;
    824   Formula
    825       GLOBINV = sum(r,REG, NETINV(r));
    826    
    827   ! elasticity of cost wrt utility from private consumption !
    828   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    829       CONSHR(i,r) # share of private hhld consumption devoted to good i in r #;
    830   Formula (all,i,TRAD_COMM)(all,r,REG)
    831       CONSHR(i,r) = VPA(i,r) / sum(k,TRAD_COMM, VPA(k,r));
    832   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
    833       INCPAR(i,r)
    834       # expansion parameter in the CDE minimum expenditure function #;
    835   Read
    836       INCPAR from file GTAPPARM header "INCP";
    837   Coefficient (all,r,REG)
    838       UELASPRIV(r)
    839       # elasticity of cost wrt utility from private consumption #;
    840   Formula (all,r,REG)
    841       UELASPRIV(r) = sum(i,TRAD_COMM, CONSHR(i,r) * INCPAR(i,r));
    842    
    843   !<
    844       =======
    845       Modules
    846       =======
    847    
    848       1. Government Consumption
    849       2. Private Consumption
    850       3. Firms
    851       4. Investment, Global Bank, and Savings
    852       5. International Trade
    853       6. International Transport Services
    854       7. Regional Household
    855       8. Equilibrium Conditions
    856   >!
    857    
    858   !<
    859       -------------------------
    860       1. Government Consumption
    861       -------------------------
    862    
    863       1-0. Module-Specific Variables
    864       1-1. Demands for Composite Goods
    865       1-2. Composite Tradeables
    866   >!
    867    
    868   !<
    869       1-0. Module-Specific Variables
    870       ------------------------------
    871    
    872       only used in this Government Consumption module
    873   >!
    874    
    875   Variable (all,i,TRAD_COMM)(all,r,REG)
    876       pg(i,r) # government consumption price for commodity i in region r #;
    877   Variable (all,i,TRAD_COMM)(all,r,REG)
    878       qg(i,r) # government hhld demand for commodity i in region r #;
    879    
    880   !<
    881       1-1. Demands for Composite Goods
    882       --------------------------------
    883   >!
    884    
    885   Equation GPRICEINDEX
    886   # definition of price index for aggregate gov't purchases (HT 40) #
    887   (all,r,REG)
    888       pgov(r) = sum(i,TRAD_COMM, [VGA(i,r) / GOVEXP(r)] * pg(i,r));
    889    
    890   Equation GOVDMNDS
    891   # government consumption demands for composite commodities (HT 41) #
    892   (all,i,TRAD_COMM)(all,r,REG)
    893       qg(i,r) - pop(r) = ug(r) - [pg(i,r) - pgov(r)];
    894    
    895   Equation GOVU
    896   # utility from government consumption in r #
    897   (all,r,REG)
    898       yg(r) - pop(r) = pgov(r) + ug(r);
    899    
    900   !<
    901       1-2. Composite Tradeables
    902       -------------------------
    903   >!
    904    
    905   Variable (all,i,TRAD_COMM)(all,r,REG)
    906       tgd(i,r) # tax on domestic i purchased by government hhld in r #;
    907    
    908   Variable (all,i,TRAD_COMM)(all,r,REG)
    909       tgm(i,r) # tax on imported i purchased by gov't hhld in r #;
    910    
    911   Equation GHHDPRICE
    912   # eq'n links domestic market and government consumption prices (HT 19) #
    913   (all,i,TRAD_COMM)(all,r,REG)
    914       pgd(i,r) = tgd(i,r) + pm(i,r);
    915    
    916   Equation GHHIPRICES
    917   # eq'n links domestic market and government consumption prices (HT 22) #
    918   (all,i,TRAD_COMM)(all,r,REG)
    919       pgm(i,r) = tgm(i,r) + pim(i,r);
    920    
    921   Coefficient (all,i,TRAD_COMM)(all,s,REG)
    922       GMSHR(i,s) # share of imports for gov't hhld at agent's prices #;
    923   Formula (all,i,TRAD_COMM)(all,s,REG)
    924       GMSHR(i,s) = VIGA(i,s) / VGA(i,s);
    925    
    926   Equation GCOMPRICE
    927   # government consumption price for composite commodities (HT 42) #
    928   (all,i,TRAD_COMM)(all,s,REG)
    929       pg(i,s) =  GMSHR(i,s) * pgm(i,s) + [1 - GMSHR(i,s)] * pgd(i,s);
    930    
    931   Equation GHHLDAGRIMP
    932   # government consumption demand for aggregate imports (HT 43) #
    933   (all,i,TRAD_COMM)(all,s,REG)
    934       qgm(i,s) = qg(i,s) + ESUBD(i) * [pg(i,s) - pgm(i,s)];
    935    
    936   Equation GHHLDDOM
    937   # government consumption demand for domestic goods (HT 44) #
    938   (all,i,TRAD_COMM)(all,s,REG)
    939       qgd(i,s) = qg(i,s) + ESUBD(i) * [pg(i,s) - pgd(i,s)];
    940    
    941   Equation TGCRATIO
    942   # change in ratio of government consumption tax payments to regional income #
    943   (all,r,REG)
    944       100.0 * INCOME(r) * del_taxrgc(r) + TGC(r) * y(r)
    945           = sum(i,TRAD_COMM,
    946               VDGA(i,r) * tgd(i,r) + DGTAX(i,r) * [pm(i,r) + qgd(i,r)])
    947           + sum(i,TRAD_COMM,
    948               VIGA(i,r) * tgm(i,r) + IGTAX(i,r) * [pim(i,r) + qgm(i,r)]);
    949    
    950   !<
    951       -----------------------------
    952       2. Private Consumption Module
    953       -----------------------------
    954    
    955       2-0. Module-Specific Variables
    956       2-1. Utility from Private Consumption
    957       2-2. Allen Partials, Price and Income Elasticities, Composite Demand
    958       2-3. Composite Tradeables
    959   >!
    960    
    961   !<
    962       2-0. Module-Specific Variables
    963       ------------------------------
    964    
    965       only used in this Private Consumption module
    966   >!
    967    
    968   Variable (all,i,TRAD_COMM)(all,r,REG)
    969       pp(i,r) # private consumption price for commodity i in region r #;
    970   Variable (all,i,TRAD_COMM)(all,r,REG)
    971       qp(i,r) # private hhld demand for commodity i in region r #;
    972    
    973   !<
    974       2-1. Utility from Private Consumption
    975       -------------------------------------
    976   >!
    977    
    978   Equation PHHLDINDEX
    979   # price index for private consumption expenditure #
    980   (all,r,REG)
    981       ppriv(r) = sum(i,TRAD_COMM, CONSHR(i,r) * pp(i,r));
    982    
    983   Equation PRIVATEU
    984   # computation of utility from private consumption in r (HT 45) #
    985   (all,r,REG)
    986       yp(r) - pop(r) = ppriv(r) + UELASPRIV(r) * up(r);
    987   !<
    988       This equation determines private consumption utility for a representative
    989       household in region r, based on the per capita private expenditure
    990       function.  (HT 45)
    991   >!
    992    
    993   Coefficient (all,i,TRAD_COMM)(all,r,REG)
    994       XWCONSHR(i,r)
    995       # expansion-parameter-weighted consumption share #;
    996   Formula (all,i,TRAD_COMM)(all,r,REG)
    997       XWCONSHR(i,r) = CONSHR(i,r) * INCPAR(i,r) / UELASPRIV(r);
    998    
    999   Equation UTILELASPRIV
   1000   # elasticity of expenditure wrt utility from private consumption #
   1001   (all,r,REG)
   1002       uepriv(r)
   1003           = sum(i,TRAD_COMM, XWCONSHR(i,r) * [pp(i,r) + qp(i,r) - yp(r)]);
   1004    
   1005   !<
   1006       2-2. Allen Partials, Price and Income Elasticities, Composite Demand
   1007       --------------------------------------------------------------------
   1008   >!
   1009    
   1010   Coefficient (parameter)(all,i,TRAD_COMM)(all,r,REG)
   1011       SUBPAR(i,r)
   1012       # substitution parameter in CDE minimum expenditure function #;
   1013   Read
   1014       SUBPAR from file GTAPPARM header "SUBP";
   1015    
   1016   !<
   1017       (HT F1 - F3)
   1018   >!
   1019   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1020       ALPHA(i,r) # 1 - sub. parameter in the CDE minimum expenditure function #;
   1021   Formula (all,i,TRAD_COMM)(all,r,REG)
   1022       ALPHA(i,r) = 1 - SUBPAR(i,r);
   1023    
   1024   Coefficient (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1025       APE(i,k,r) # Allen partial elst. of sub. between composite i and k in r #;
   1026   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1027       APE(i,k,r)
   1028           = ALPHA(i,r) + ALPHA(k,r) - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r));
   1029   Formula (all,i,TRAD_COMM)(all,r,REG)
   1030       APE(i,i,r)
   1031           = 2.0 * ALPHA(i,r)
   1032           - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r))
   1033           - ALPHA(i,r) / CONSHR(i,r);
   1034    
   1035   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   1036       EY(i,r) # income elast. of private hhld demand for i in r (HT F4) #;
   1037   Formula (all,i,TRAD_COMM)(all,r,REG)
   1038       EY(i,r)
   1039           =   [1.0 / sum(n,TRAD_COMM, CONSHR(n,r) * INCPAR(n,r))]
   1040               * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
   1041                   + sum(n,TRAD_COMM, CONSHR(n,r) * INCPAR(n,r) * ALPHA(n,r))]
   1042           + [ALPHA(i,r) - sum(n,TRAD_COMM, CONSHR(n,r) * ALPHA(n,r))];
   1043    
   1044   Coefficient (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1045       EP(i,k,r)
   1046       # uncomp. elast. of private hhld demand for i wrt price of k in r (HT F5) #;
   1047   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1048       EP(i,k,r) = 0;
   1049   Formula (all,i,TRAD_COMM)(all,k,TRAD_COMM)(all,r,REG)
   1050       EP(i,k,r) = [APE(i,k,r) - EY(i,r)] * CONSHR(k,r);
   1051    
   1052   Equation PRIVDMNDS
   1053   # private consumption demands for composite commodities (HT 46) #
   1054   (all,i,TRAD_COMM)(all,r,REG)
   1055       qp(i,r) - pop(r)
   1056           = sum(k,TRAD_COMM, EP(i,k,r) * pp(k,r)) + EY(i,r) * [yp(r) - pop(r)];
   1057   !<
   1058       Private consumption demands for composite commodities.  Demand system is
   1059       on a per capita basis.  Here, yp(r) - pop(r) is % change in per capita
   1060       income.  (HT 46)
   1061   >!
   1062    
   1063   !<
   1064       2-3. Composite Tradeables
   1065       -------------------------
   1066   >!
   1067    
   1068   Variable (all,r,REG)
   1069       tp(r) # comm.-, source-gen. shift in tax on private cons. #;
   1070   !<
   1071       The variable tp(r) can be swapped with del_ttaxr(r) in order to generate a
   1072       tax replacement scenario, whereby taxes remain a constant share of
   1073       national income.
   1074   >!
   1075    
   1076   Coefficient (all,i,TRAD_COMM)(all,r,REG) LevTPD(i,r) # levels TPD #;
   1077   Zerodivide default 1;
   1078   Formula (all,i,TRAD_COMM)(all,r,REG) LevTPD(i,r)  =  VDPA(i,r)/VDPM(i,r);
   1079   Zerodivide off;
   1080   Variable  (orig_level=LevTPD)(all,i,TRAD_COMM)(all,r,REG)
   1081       tpd(i,r) # comm.-, source-spec. shift in tax on private cons. of dom. #;
   1082   Variable (all,i,TRAD_COMM)(all,r,REG)
   1083       atpd(i,r) # power of tax on domestic i purchased by private hhld in r #;
   1084   Equation TPDSHIFT
   1085   # permits uniform consumption tax change #
   1086   (all,i,TRAD_COMM)(all,r,REG)
   1087       atpd(i,r) = tpd(i,r) + tp(r);
   1088    
   1089   Equation PHHDPRICE
   1090   # eq'n links domestic market and private consumption prices (HT 18) #
   1091   (all,i,TRAD_COMM)(all,r,REG)
   1092       ppd(i,r) = atpd(i,r) + pm(i,r);
   1093    
   1094   Variable (all,i,TRAD_COMM)(all,r,REG)
   1095       tpm(i,r) # comm.-, source-spec. shift in tax on private cons. of imp. #;
   1096   Variable (all,i,TRAD_COMM)(all,r,REG)
   1097       atpm(i,r) # power of tax on imported i purchased by private hhld in r #;
   1098   Equation TPMSHIFT
   1099   # permits uniform consumption tax change #
   1100   (all,i,TRAD_COMM)(all,r,REG)
   1101       atpm(i,r) = tpm(i,r) + tp(r);
   1102    
   1103   Equation PHHIPRICES
   1104   # eq'n links domestic market and private consumption prices (HT 21) #
   1105   (all,i,TRAD_COMM)(all,r,REG)
   1106       ppm(i,r) = atpm(i,r) + pim(i,r);
   1107    
   1108   Equation TPCRATIO
   1109   # change in ratio of private consumption tax payments to regional income #
   1110   (all,r,REG)
   1111       100.0 * INCOME(r) * del_taxrpc(r) + TPC(r) * y(r)
   1112           = sum(i,TRAD_COMM,
   1113               VDPA(i,r) * atpd(i,r) + DPTAX(i,r) * [pm(i,r) + qpd(i,r)])
   1114           + sum(i,TRAD_COMM,
   1115               VIPA(i,r) * atpm(i,r) + IPTAX(i,r) * [pim(i,r) + qpm(i,r)]);
   1116    
   1117   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   1118       PMSHR(i,s) # share of imports for priv hhld at agent's prices #;
   1119   Formula (all,i,TRAD_COMM)(all,s,REG)
   1120       PMSHR(i,s) = VIPA(i,s) / VPA(i,s);
   1121    
   1122   Equation PCOMPRICE
   1123   # private consumption price for composite commodities (HT 47) #
   1124   (all,i,TRAD_COMM)(all,s,REG)
   1125       pp(i,s) = PMSHR(i,s) * ppm(i,s) + [1 - PMSHR(i,s)] * ppd(i,s);
   1126    
   1127   Equation PHHLDDOM
   1128   # private consumption demand for domestic goods (HT 48) #
   1129   (all,i,TRAD_COMM)(all,s,REG)
   1130       qpd(i,s) = qp(i,s) + ESUBD(i) * [pp(i,s) - ppd(i,s)];
   1131    
   1132   Equation PHHLDAGRIMP
   1133   # private consumption demand for aggregate imports (HT 49) #
   1134   (all,i,TRAD_COMM)(all,s,REG)
   1135       qpm(i,s) = qp(i,s) + ESUBD(i) * [pp(i,s) - ppm(i,s)];
   1136    
   1137   !<
   1138       ---------
   1139       3. Firms
   1140       ---------
   1141    
   1142       We now turn to the behavioral equations for firms.  The following picture
   1143       describes factor demands.  The first set of equations describe demands for
   1144       primary factors.  (See table 4 of Hertel and Tsigas.)
   1145    
   1146       Production structure
   1147       --------------------
   1148    
   1149                                qo(j,r)  [ao(j,r)]
   1150                                /\
   1151                               /  \  <----- CES
   1152                              /    \
   1153                             /      \
   1154                            /        \
   1155         [ava(j,r)]  qva(j,r)        qf(i,j,r)  [af(i,j,r)]
   1156                     /|\                    /\
   1157    CES ----->      / | \                  /  \  <------ CES
   1158                   /  |  \                /    \
   1159                  /   |   \              /      \
   1160                 /    |    \            /        \
   1161             Land   Labor  Capital  Domestic     Foreign
   1162                  qfe(i,j,r)         qfd(i,j,r)  qfm(i,j,r)
   1163                [afe(i,j,r)]
   1164    
   1165       3-0. Module-Specific Variables
   1166       3-1. Total Output Nest
   1167       3-2. Composite Intermediates Nest
   1168       3-3. Value-Added Nest
   1169       3-4. Zero Profits Equations
   1170   >!
   1171    
   1172   !<
   1173       3-0. Module-Specific Variables
   1174       ------------------------------
   1175    
   1176       only used in this Firms module or the Summary Indices or Welfare
   1177       appendices
   1178   >!
   1179    
   1180   Variable (all,j,PROD_COMM)(all,r,REG)
   1181       pva(j,r) # firms' price of value added in industry j of region r #;
   1182   Variable (all,j,PROD_COMM)(all,r,REG)
   1183       qva(j,r) # value added in industry j of region r #;
   1184   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1185       pf(i,j,r) # firms' price for commodity i for use by j in r #;
   1186   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1187       qf(i,j,r) # demand for commodity i for use by j in region r #;
   1188   Variable (all,j,PROD_COMM)(all,r,REG)
   1189       ao(j,r) # output augmenting technical change in sector j of r #;
   1190   Variable (all,i,PROD_COMM)(all,r,REG)
   1191       ava(i,r) # value added augmenting tech change in sector i of r #;
   1192   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1193       af(i,j,r) # composite intermed. input i augmenting tech change by j of r #;
   1194   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1195       afe(i,j,r) # primary factor i augmenting tech change by j of r #;
   1196   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1197       ams(i,r,s) # import i from region r augmenting tech change in region s #;
   1198    
   1199   !<
   1200       3-1. Total Output Nest
   1201       ----------------------
   1202   >!
   1203    
   1204   Variable (all,j,PROD_COMM)
   1205       aosec(j) # output tech change of sector j, worldwide #;
   1206   Variable (all,r,REG)
   1207       aoreg(r) # output tech change in region r #;
   1208   Variable (all,j,PROD_COMM)(all,r,REG)
   1209       aoall(j,r) # output augmenting technical change in sector j of r #;
   1210   Equation AOWORLD
   1211   # sector/region specific average rate of output augmenting tech change #
   1212   (all,j,PROD_COMM)(all,r,REG)
   1213       ao(j,r) = aosec(j) + aoreg(r) + aoall(j,r);
   1214    
   1215   Variable (all,j,PROD_COMM)
   1216       avasec(j) # value added tech change of sector j, worldwide #;
   1217   Variable (all,r,REG)
   1218       avareg(r) # value added tech change in region r #;
   1219   Variable (all,j,PROD_COMM)(all,r,REG)
   1220       avaall(j,r) # value added augmenting technical change in sector j of r #;
   1221   Equation AVAWORLD
   1222   # sector/region specific average rate of value added augmenting tech change #
   1223   (all,j,PROD_COMM)(all,r,REG)
   1224       ava(j,r) = avasec(j) + avareg(r) + avaall(j,r);
   1225    
   1226   Coefficient (parameter)(all,j,PROD_COMM)
   1227       ESUBT(j)
   1228       # elst. of sub. among composite intermediate inputs in production #;
   1229   Read
   1230       ESUBT from file GTAPPARM header "ESBT";
   1231    
   1232   Equation VADEMAND
   1233   # sector demands for primary factor composite #
   1234   (all,j,PROD_COMM)(all,r,REG)
   1235       qva(j,r)
   1236           = -ava(j,r) + qo(j,r) - ao(j,r)
   1237           - ESUBT(j) * [pva(j,r) - ava(j,r) - ps(j,r) - ao(j,r)];
   1238   !<
   1239       Sector demands for primary factor composite.  This equation differs from
   1240       HT 35 due to the presence of intermediate input substitution.
   1241   >!
   1242    
   1243   Variable (all,i,TRAD_COMM)
   1244       afcom(i) # intermediate tech change of input i, worldwide #;
   1245   Variable (all,j,PROD_COMM)
   1246       afsec(j) # intermediate tech change of sector j, worldwide #;
   1247   Variable (all,r,REG)
   1248       afreg(r) # intermediate tech change in region r #;
   1249   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1250       afall(i,j,r) # intermediate input i augmenting tech change by j in r #;
   1251   Equation AFWORLD
   1252   # sector/region specific average rate of intermediates augmenting tech change #
   1253   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1254       af(i,j,r) = afcom(i) + afsec(j) + afreg(r) + afall(i,j,r);
   1255    
   1256   Equation INTDEMAND
   1257   # industry demands for intermediate inputs, including cgds #
   1258   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1259       qf(i,j,r)
   1260           = - af(i,j,r) + qo(j,r) - ao(j,r)
   1261           - ESUBT(j) * [pf(i,j,r) - af(i,j,r) - ps(j,r) - ao(j,r)];
   1262   !<
   1263       Industry demands for intermediate inputs, including cgds.  This equation
   1264       differs from HT 36 due to the presence of intermediate input substitution.
   1265   >!
   1266    
   1267   !<
   1268       3-2. Composite Intermediates Nest
   1269       ---------------------------------
   1270   >!
   1271    
   1272   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1273       tfd(i,j,r) # tax on domestic i purchased by j in r #;
   1274   Equation DMNDDPRICE
   1275   # eq'n links domestic market and firm prices (HT 20) #
   1276   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1277       pfd(i,j,r) = tfd(i,j,r) + pm(i,r);
   1278   !<
   1279       This equation links domestic market and firm prices.  It holds only for
   1280       domestic goods and it captures the effect of commodity taxation of firms.
   1281       (HT 20)
   1282   >!
   1283    
   1284   Variable (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1285       tfm(i,j,r) # tax on imported i purchased by j in r #;
   1286   Equation DMNDIPRICES
   1287   # eq'n links domestic market and firm prices (HT 23) #
   1288   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1289       pfm(i,j,r) = tfm(i,j,r) + pim(i,r);
   1290   !<
   1291       This equation links domestic market and firm prices.  It holds only for
   1292       imported goods and it captures the effect of commodity taxation of firms.
   1293       (HT 23)
   1294   >!
   1295    
   1296   Equation TIURATIO
   1297   # change in ratio of tax payments on intermediate goods to regional income #
   1298   (all,r,REG)
   1299       100.0 * INCOME(r) * del_taxriu(r) + TIU(r) * y(r)
   1300           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   1301               VDFA(i,j,r) * tfd(i,j,r) + DFTAX(i,j,r) * [pm(i,r) + qfd(i,j,r)]))
   1302           + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   1303               VIFA(i,j,r) * tfm(i,j,r) + IFTAX(i,j,r) * [pim(i,r) + qfm(i,j,r)]));
   1304    
   1305   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1306       FMSHR(i,j,s) # share of firms' imports in dom. composite, agent's prices #;
   1307   Zerodivide default 0.5;
   1308   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1309       FMSHR(i,j,s) = VIFA(i,j,s) / VFA(i,j,s);
   1310   Zerodivide off;
   1311   Equation ICOMPRICE
   1312   # industry price for composite commodities (HT 30) #
   1313   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1314       pf(i,j,r) = FMSHR(i,j,r) * pfm(i,j,r) + [1 - FMSHR(i,j,r)] * pfd(i,j,r);
   1315    
   1316   Equation INDIMP
   1317   # industry j demands for composite import i (HT 31) #
   1318   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1319       qfm(i,j,s) = qf(i,j,s) - ESUBD(i) * [pfm(i,j,s) - pf(i,j,s)];
   1320    
   1321   Equation INDDOM
   1322   # industry j demands for domestic good i (HT 32) #
   1323   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,s,REG)
   1324       qfd(i,j,s) = qf(i,j,s) - ESUBD(i) * [pfd(i,j,s) - pf(i,j,s)];
   1325    
   1326   !<
   1327       3-3. Value-Added Nest
   1328       ---------------------
   1329   >!
   1330    
   1331   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1332       tf(i,j,r) # tax on primary factor i used by j in region r #;
   1333    
   1334   Equation MPFACTPRICE
   1335   # eq'n links domestic and firm demand prices (HT 16) #
   1336   (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   1337       pfe(i,j,r) = tf(i,j,r) + pm(i,r);
   1338    
   1339   Equation SPFACTPRICE
   1340   # eq'n links domestic and firm demand prices (HT 17) #
   1341   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   1342       pfe(i,j,r) = tf(i,j,r) + pmes(i,j,r);
   1343    
   1344   Variable (all,i,ENDW_COMM)
   1345       afecom(i) # factor input tech change of input i, worldwide #;
   1346   Variable (all,j,PROD_COMM)
   1347       afesec(j) # factor input tech change of sector j, worldwide #;
   1348   Variable (all,r,REG)
   1349       afereg(r) # factor input tech change in region r #;
   1350   Variable (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1351       afeall(i,j,r) # primary factor i augmenting tech change sector j in r #;
   1352   Equation AFEWORLD
   1353   # sector/region specific average rate of prim. factor i augmenting tech change #
   1354   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1355       afe(i,j,r) = afecom(i) + afesec(j) + afereg(r) + afeall(i,j,r);
   1356    
   1357   Coefficient (all,j,PROD_COMM)(all,r,REG)
   1358       VVA(j,r) # value added in activity j in region r #;
   1359   Formula (all,j,PROD_COMM)(all,r,REG)
   1360       VVA(j,r) = sum(i,ENDW_COMM, VFA(i,j,r));
   1361   Coefficient (all,i,ENDW_COMM)
   1362       SVADEFAULT(i) #zerodivide default for SVA#;
   1363   Formula (all,i,ENDW_COMM)
   1364       SVADEFAULT(i)
   1365           = sum(j,PROD_COMM, sum(r,REG, VFA(i,j,r)))
   1366           / sum(j,PROD_COMM, sum(r,REG, VVA(j,r)));
   1367   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1368       SVA(i,j,r) # share of i in total value added in j in r #;
   1369   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG: VVA(j,r) <> 0)
   1370       SVA(i,j,r) = VFA(i,j,r) / VVA(j,r);
   1371   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG: VVA(j,r) = 0)
   1372       SVA(i,j,r) = SVADEFAULT(i);
   1373   Equation VAPRICE
   1374   # effective price of primary factor composite in each sector/region (HT 33) #
   1375   (all,j,PROD_COMM)(all,r,REG)
   1376       pva(j,r) = sum(k,ENDW_COMM, SVA(k,j,r) * [pfe(k,j,r) - afe(k,j,r)]);
   1377    
   1378   Equation TFURATIO
   1379   # change in ratio of tax payments on factor usage to regional income #
   1380   (all,r,REG)
   1381       100.0 * INCOME(r) * del_taxrfu(r) + TFU(r) * y(r)
   1382           = sum(i,ENDWM_COMM, sum(j,PROD_COMM,
   1383               VFA(i,j,r) * tf(i,j,r) + ETAX(i,j,r) * [pm(i,r) + qfe(i,j,r)]))
   1384           + sum(i,ENDWS_COMM, sum(j,PROD_COMM,
   1385               VFA(i,j,r) * tf(i,j,r) + ETAX(i,j,r) * [pmes(i,j,r) + qfe(i,j,r)]));
   1386    
   1387   Coefficient (parameter)(all,j,PROD_COMM)
   1388       ESUBVA(j)
   1389       # elst. of sub. capital/labor/land, in production of value added in j #;
   1390   Read
   1391       ESUBVA from file GTAPPARM header "ESBV";
   1392    
   1393   Equation ENDWDEMAND
   1394   # demands for endowment commodities (HT 34) #
   1395   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   1396       qfe(i,j,r)
   1397           = - afe(i,j,r) + qva(j,r)
   1398           - ESUBVA(j) * [pfe(i,j,r) - afe(i,j,r) - pva(j,r)];
   1399    
   1400   !<
   1401       3-4. Zero Profits Equations
   1402       ---------------------------
   1403   >!
   1404    
   1405   Equation OUTPUTPRICES
   1406   # eq'n links pre- and post-tax supply prices for all industries  (HT 15) #
   1407   (all,i,PROD_COMM)(all,r,REG)
   1408       ps(i,r) = to(i,r) + pm(i,r);
   1409   !<
   1410       This equation links pre- and post-tax supply prices for all industries.
   1411       This captures the effect of output taxes.  TO(i,r) < 1 in the case of a
   1412       tax.  (HT 15)
   1413   >!
   1414    
   1415   Equation TOUTRATIO
   1416   # change in ratio of output tax payments to regional income #
   1417   (all,r,REG)
   1418       100.0 * INCOME(r) * del_taxrout(r) + TOUT(r) * y(r)
   1419           = sum(i,PROD_COMM,
   1420               VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);
   1421    
   1422   Variable (all,j,PROD_COMM)(all,r,REG)
   1423       profitslack(j,r) # slack variable in the zero profit equation #;
   1424   !<
   1425       This is exogenous, unless the user wishes to specify output in a given
   1426       region exogenously.
   1427   >!
   1428   Coefficient (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1429       STC(i,j,r) # share of i in total costs of j in r #;
   1430   Formula (all,i,DEMD_COMM)(all,j,PROD_COMM)(all,r,REG)
   1431       STC(i,j,r) = VFA(i,j,r) / sum(k,DEMD_COMM, VFA(k,j,r));
   1432    
   1433   Equation ZEROPROFITS
   1434   # industry zero pure profits condition (HT 6) #
   1435   (all,j,PROD_COMM)(all,r,REG)
   1436       ps(j,r) + ao(j,r)
   1437           = sum(i,ENDW_COMM, STC(i,j,r) * [pfe(i,j,r) - afe(i,j,r) - ava(j,r)])
   1438           + sum(i,TRAD_COMM, STC(i,j,r) * [pf(i,j,r)  - af(i,j,r)])
   1439           + profitslack(j,r);
   1440   !<
   1441       Industry zero pure profits condition (HT 6).  This condition permits us to
   1442       determine the endogenous output level for each of the non-endowment
   1443       sectors, excepting when profitslack is itself endogenous.  The level of
   1444       activity in the endowment sectors is exogenously determined.
   1445   >!
   1446    
   1447   !<
   1448       ---------------------------------------
   1449       4. Investment, Global Bank, and Savings
   1450       ---------------------------------------
   1451    
   1452       Capital stock and rate of return equations follow.  They correspond to the
   1453       Investment Equations of Table 8 in Hertel and Tsigas.
   1454    
   1455       4-0. Module-Specific Variables
   1456       4-1. Equations of Notational Convenience
   1457       4-2. Rate of Return Equations
   1458       4-3. Capital Accumulation
   1459       4-4. Global Bank
   1460       4-5. Price Index of Aggregate Global Composite Capital Goods
   1461       4-6. Price of Saving
   1462   >!
   1463    
   1464   !<
   1465       4-0. Module-Specific Variables
   1466       ------------------------------
   1467    
   1468       only used in this Investment, Global Bank and Savings module
   1469   >!
   1470    
   1471   Variable (all,r,REG)
   1472       rental(r) # rental rate on capital = ps("capital",r) #;
   1473   Variable (all,r,REG)
   1474       ke(r) # end-of-period capital stock in r #;
   1475   Variable (all,r,REG)
   1476       rore(r) # expected net rate of return on capital stock in r #;
   1477   Variable (all,r,REG)
   1478       rorc(r) # current net rate of return on capital stock in r #;
   1479   Variable (all,r,REG)
   1480       qcgds(r) # output of capital goods sector = qo("cgds",r) #;
   1481    
   1482   !<
   1483       4-1. Equations of Notational Convenience
   1484       ----------------------------------------
   1485   >!
   1486    
   1487   Variable (all,r,REG)
   1488       ksvces(r) # capital services = qo("capital",r) #;
   1489   Equation KAPSVCES
   1490   # eq'n defines a variable for capital services (HT 52) #
   1491   (all,r,REG)
   1492       ksvces(r)
   1493           = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * qo(h,r));
   1494   !<
   1495       This equation defines a variable for capital services, for convenience.
   1496       (There is really only one capital services item.) (HT 52)
   1497   >!
   1498    
   1499   Equation KAPRENTAL
   1500   # eq'n defines a variable for capital rental rate (HT 53) #
   1501   (all,r,REG)
   1502       rental(r)
   1503           = sum(h,ENDWC_COMM, [VOA(h,r) / sum(k,ENDWC_COMM, VOA(k,r))] * ps(h,r));
   1504    
   1505   Equation CAPGOODS
   1506   # eq'n defines a variable for gross investment (HT 54) #
   1507   (all,r,REG)
   1508       qcgds(r)
   1509           = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * qo(h,r));
   1510   !<
   1511       This equation defines a variable for gross investment, for convenience.
   1512       There is really only one capital goods item.
   1513   >!
   1514    
   1515   Equation PRCGOODS
   1516   # eq'n defines the price of cgds (HT 55) #
   1517   (all,r,REG)
   1518       pcgds(r) = sum(h,CGDS_COMM, [VOA(h,r) / REGINV(r)] * ps(h,r));
   1519    
   1520   Equation KBEGINNING
   1521   # associates change in cap. services w/ change in cap. stock (HT 56) #
   1522   (all,r,REG)
   1523       kb(r) = ksvces(r);
   1524   !<
   1525       This equation associates any change in capital services during the period
   1526       with a change in capital stock.  Full capacity utilization is assumed.
   1527   >!
   1528    
   1529   Coefficient (ge 0)(all,r,REG)
   1530       VKB(r) # value of beginning-of-period capital stock in region r #;
   1531   Update (all,r,REG)
   1532       VKB(r) = pcgds(r) * kb(r);
   1533   Read
   1534       VKB from file GTAPDATA header "VKB";
   1535   !<
   1536       VKB(r) is used only in this sub-module, so its data are read here.  The
   1537       associated variables, pcgds(r) and kb(r), are used across modules, so they
   1538       have been defined as common variables.
   1539   >!
   1540    
   1541   Coefficient (all,r,REG)
   1542       INVKERATIO(r)
   1543       # ratio of gross investment to end-of-period capital stock in r #;
   1544   Formula (all,r,REG)
   1545       INVKERATIO(r) = REGINV(r) / [VKB(r) + NETINV(r)];
   1546    
   1547   Equation KEND
   1548   # Ending capital stock equals beginning stock plus net investment.  (HT 10) #
   1549   (all,r,REG)
   1550       ke(r) = INVKERATIO(r) * qcgds(r) + [1.0 - INVKERATIO(r)] * kb(r);
   1551    
   1552   !<
   1553       4-2. Rate of Return Equations
   1554       -----------------------------
   1555   >!
   1556    
   1557   Coefficient (all,r,REG)
   1558       GRNETRATIO(r) # ratio of GROSS/NET rates of return on capital in r #;
   1559   Formula (all,r,REG)
   1560       GRNETRATIO(r)
   1561           = sum(h,ENDWC_COMM, VOA(h,r))
   1562           / [sum(h,ENDWC_COMM, VOA(h,r)) - VDEP(r)];
   1563   !<
   1564       NOTE: VOA("capital",r) is GROSS returns to capital.
   1565   >!
   1566   Equation RORCURRENT
   1567   # current rate of return on capital in region r (HT 57) #
   1568   (all,r,REG)
   1569       rorc(r) = GRNETRATIO(r) * [rental(r) - pcgds(r)];
   1570    
   1571   Coefficient (parameter)(all,r,REG)
   1572       RORFLEX(r)
   1573       # flexibility of expected net ROR on capital stock in r wrt investment #;
   1574   Read
   1575       RORFLEX from file GTAPPARM header "RFLX";
   1576   !<
   1577       RORFLEX is the flexibility of the expected net rate of return on the
   1578       capital stock, in region r, with respect to investment.  If a region's
   1579       capital stock increases by 1%, then it is expected that the net rate of
   1580       return on capital will decline by RORFLEX %.  A larger absolute value for
   1581       this parameter will reduce the tendency of international investment flows
   1582       to respond to changes in expected rates of return.
   1583   >!
   1584    
   1585   Equation ROREXPECTED
   1586   # expected rate of return depends on the current return and investment (HT 58) #
   1587   (all,r,REG)
   1588       rore(r) = rorc(r) - RORFLEX(r) * [ke(r) - kb(r)];
   1589    
   1590   !<
   1591       4-3. Capital Accumulation
   1592       -------------------------
   1593    
   1594       based on the theory laid out in GTAP Technical Paper #7
   1595   >!
   1596    
   1597   Variable (all,i,ENDWC_COMM)(all,r,REG)
   1598       EXPAND(i,r) # change in investment levels relative to endowment stock #;
   1599   Equation BALDWIN
   1600   # change in investment levels relative to endowment stock #
   1601   (all,i,ENDWC_COMM)(all,r,REG)
   1602       EXPAND(i,r) = qcgds(r) - qo(i,r);
   1603    
   1604   !<
   1605       4-4. Global Bank
   1606       ----------------
   1607   >!
   1608    
   1609   Coefficient (integer,parameter)
   1610       RORDELTA
   1611       # binary coefficient to switch mechanism of allocating investment funds #;
   1612   Read
   1613       RORDELTA from file GTAPPARM header "RDLT";
   1614   !<
   1615       RORDELTA is a binary coefficient which determines the mechanism of
   1616       allocating investment funds across regions.  When RORDELTA = 1, investment
   1617       funds are allocated across regions to equate the change in the expected
   1618       rates of return (i.e., rore(r)).  When RORDELTA = 0, investment funds are
   1619       allocated across regions to maintain the existing composition of capital
   1620       stocks.
   1621   >!
   1622    
   1623   Variable
   1624       rorg # global net rate of return on capital stock #;
   1625   Variable (all,r,REG)
   1626       cgdslack(r) # slack variable for qcgds(r) #;
   1627   !<
   1628       This is exogenous, unless the user wishes to exogenously fix the level of
   1629       gross investment in a region, in which case it can be swapped with
   1630       cgdslack.
   1631   >!
   1632   Equation RORGLOBAL
   1633   # either gross investment or expected rate of return in region r (HT 59) #
   1634   (all,r,REG)
   1635       RORDELTA * rore(r)
   1636       + [1 - RORDELTA]
   1637       * [[REGINV(r) / NETINV(r)] * qcgds(r) - [VDEP(r) / NETINV(r)] * kb(r)]
   1638           = RORDELTA * rorg + [1 - RORDELTA] * globalcgds + cgdslack(r);
   1639   !<
   1640       This equation determines either gross investment or the expected rate of
   1641       return in each region, depending on the setting for the binary RORDELTA
   1642       parameter.
   1643   >!
   1644    
   1645   Equation GLOBALINV
   1646   # either expected global rate of return or global net investment (HT 11) #
   1647       RORDELTA * globalcgds + [1 - RORDELTA] * rorg
   1648           = RORDELTA
   1649           * sum(r,REG,
   1650               [REGINV(r) / GLOBINV] * qcgds(r) - [VDEP(r) / GLOBINV] * kb(r))
   1651           + [1 - RORDELTA] * sum(r,REG, [NETINV(r) / GLOBINV] * rore(r));
   1652   !<
   1653       This equation computes either the change in global net investment (when
   1654       RORDELTA = 1), or the change in the expected global rate of return on
   1655       capital (when RORDELTA = 0).
   1656   >!
   1657    
   1658   !<
   1659       4-5. Price Index of Aggregate Global Composite Capital Goods
   1660       ------------------------------------------------------------
   1661   >!
   1662    
   1663   Equation PRICGDS
   1664   # eq'n generates a price index for the aggregate global cgds composite (HT 60) #
   1665       pcgdswld = sum(r,REG, [NETINV(r) / GLOBINV] * pcgds(r));
   1666    
   1667   !<
   1668       4-6. Price of Saving
   1669       --------------------
   1670   >!
   1671    
   1672   Variable (all,r,REG)
   1673       psaveslack(r) # slack variable for the savings price equation #;
   1674   !<
   1675       This is exogenous under the normal closure.  However, in order to
   1676       replicate simulations from the GTAP book, where there was a single savings
   1677       price, psaveslack may be swapped with psave in order to fix the latter.
   1678       In this case, pcgdswld must be the numeraire so that each region faces the
   1679       same price of savings.
   1680   >!
   1681    
   1682   Equation SAVEPRICE
   1683   # savings price #
   1684   (all,r,REG)
   1685       psave(r)
   1686           = pcgds(r)
   1687           + sum(s,REG, [[NETINV(s) - SAVE(s)] / GLOBINV] * pcgds(s))
   1688           + psaveslack(r);
   1689   !<
   1690       In contrast to the GTAP book, the price of savings is now region-specific
   1691       and it changes at the same rate as the price of regional investment, plus
   1692       an adjustment factor which accounts for the fact that savings and
   1693       investment are not equal at the regional level.
   1694   >!
   1695    
   1696   !<
   1697       ----------------------
   1698       5. International Trade
   1699       ----------------------
   1700    
   1701       5-1. Export Prices
   1702       5-2. Demand for Imports
   1703   >!
   1704    
   1705   !<
   1706       5-1. Export Prices
   1707       ------------------
   1708   >!
   1709    
   1710   Variable (all,i,TRAD_COMM)(all,r,REG)
   1711       tx(i,r) # dest.-gen. change in subsidy on exports of i from r #;
   1712   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1713       txs(i,r,s) # dest.-spec. change in subsidy on exports of i from r to s #;
   1714   !<
   1715       The variable txs captures changes in the power of bilateral export taxes.
   1716       However, the presence of a destination-generic export subsidy shift (tx)
   1717       also permits the user to swap a single export tax shock with another
   1718       target variable.  It is most naturally swapped with the variable qo to
   1719       insulate domestic producers from the world market.
   1720   >!
   1721    
   1722   Equation EXPRICES
   1723   # eq'n links agent's and world prices (HT 27) #
   1724   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1725       pfob(i,r,s) = pm(i,r) - tx(i,r) - txs(i,r,s);
   1726    
   1727   Equation TEXPRATIO
   1728   # change in ratio of export tax payments to regional income #
   1729   (all,r,REG)
   1730       100.0 * INCOME(r) * del_taxrexp(r) + TEX(r) * y(r)
   1731           = sum(i,TRAD_COMM, sum(s,REG,
   1732               VXMD(i,r,s) * [-tx(i,r) - txs(i,r,s)]
   1733               + XTAXD(i,r,s) * [pfob(i,r,s) + qxs(i,r,s)]));
   1734    
   1735   !<
   1736       5-2. Demand for Imports
   1737       -----------------------
   1738    
   1739       Composite Imports Nest: Table 3 of Hertel and Tsigas
   1740   >!
   1741    
   1742   Variable (all,i,TRAD_COMM)(all,s,REG)
   1743       tm(i,s) # source-gen. change in tax on imports of i into s #;
   1744   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1745       tms(i,r,s) # source-spec. change in tax on imports of i from r into s #;
   1746   !<
   1747       The variable tms captures changes in the power of bilateral import taxes.
   1748       However, the presence of a source-generic import tariff shift (tm) also
   1749       permits the user to swap a single import tariff shock with another target
   1750       variable.  In particular, to insulate domestic producers from import price
   1751       changes, it may be swapped with the relative price variable pr -- see
   1752       below.
   1753   >!
   1754    
   1755   Equation MKTPRICES
   1756   # eq'n links domestic and world prices (HT 24) #
   1757   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1758       pms(i,r,s) = tm(i,s) + tms(i,r,s) + pcif(i,r,s);
   1759    
   1760   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1761       MSHRS(i,r,s) # share of imports from r in import bill of s at mkt prices #;
   1762   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1763       MSHRS(i,r,s) = VIMS(i,r,s) / sum(k,REG, VIMS(i,k,s));
   1764   Equation DPRICEIMP
   1765   # price for aggregate imports (HT 28) #
   1766   (all,i,TRAD_COMM)(all,s,REG)
   1767       pim(i,s) = sum(k,REG, MSHRS(i,k,s) * [pms(i,k,s) - ams(i,k,s)]);
   1768    
   1769   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
   1770       pr(i,r) # ratio of domestic to imported prices in r #;
   1771   Equation PRICETGT
   1772   # eq'n defines target price ratio to be attained via the variable levy (HT 25) #
   1773   (all,i,TRAD_COMM)(all,s,REG)
   1774       pr(i,s) = pm(i,s) - pim(i,s);
   1775   !<
   1776       This equation defines the target price ratio to be attained via the
   1777       variable levy.  This price ratio is the ratio of domestic to average
   1778       imported goods' price.  Note that the way this price ratio is defined, it
   1779       includes intraregional imports as well.  In most applications, regions
   1780       will represent groups of individual countries.  However, in the case of
   1781       the EU, this is problematic, since recent versions of the database have
   1782       incorporated intra-EU trade flows.  Therefore, when aggregated to the EU
   1783       level, the composite import price includes both intra-EU and outside
   1784       imports.  So some modification is needed to handle the EU case.
   1785   >!
   1786    
   1787   Coefficient (parameter)(all,i,TRAD_COMM)
   1788       ESUBM(i)
   1789       # region-generic el. of sub. among imports of i in Armington structure #;
   1790   Read
   1791       ESUBM from file GTAPPARM header "ESBM";
   1792    
   1793   Equation IMPORTDEMAND
   1794   # regional demand for disaggregated imported commodities by source (HT 29)  #
   1795   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1796       qxs(i,r,s)
   1797           = -ams(i,r,s) + qim(i,s)
   1798           - ESUBM(i) * [pms(i,r,s) - ams(i,r,s) - pim(i,s)];
   1799    
   1800   Equation TIMPRATIO
   1801   # change in ratio of import tax payments to regional income #
   1802   (all,r,REG)
   1803       100.0 * INCOME(r) * del_taxrimp(r) + TIM(r) * y(r)
   1804           = sum(i,TRAD_COMM, sum(s,REG,
   1805               VIMS(i,s,r) * [tm(i,r) + tms(i,s,r)]
   1806               + MTAX(i,s,r) * [pcif(i,s,r) + qxs(i,s,r)]));
   1807    
   1808   !<
   1809       -----------------------------------
   1810       6. International Transport Services
   1811       -----------------------------------
   1812    
   1813       6-0. Module-Specific Variables and Coefficients
   1814       6-1. Demand for Global Transport Services
   1815       6-2. Supply of Transport Services
   1816   >!
   1817    
   1818   !<
   1819       6-0. Module-Specific Variables and Coefficients
   1820       -----------------------------------------------
   1821    
   1822       only used in this International Transport Services module
   1823   >!
   1824    
   1825   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1826       qtmfsd(m,i,r,s) # international usage margin m on i from r to s #;
   1827   !<
   1828       International margin usage, by Margin, Freight, Source, and Destination,
   1829       i.e., the percent change in usage of m in transport of i from r to s.
   1830   >!
   1831   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1832       atmfsd(m,i,r,s) # tech change in m's shipping of i from region r to s #;
   1833   !<
   1834       Technical progress in shipping by Margin, Freight, Source, and
   1835       Destination.  This is endogenous and driven by the following mode-,
   1836       product-, source-, and destination-specific determinants.
   1837   >!
   1838   Variable (all,m,TRAD_COMM)
   1839       atm(m) # tech change in mode m, worldwide #;
   1840   Variable (all,i,TRAD_COMM)
   1841       atf(i) # tech change shipping of i, worldwide #;
   1842   Variable (all,r,REG)
   1843       ats(r) # tech change shipping from region r #;
   1844   Variable (all,s,REG)
   1845       atd(s) # tech change shipping to s #;
   1846   Variable (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1847       atall(m,i,r,s) # tech change in m's shipping of i from region r to s #;
   1848   Variable (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1849       ptrans(i,r,s) # cost index for international transport of i from r to s #;
   1850   !<
   1851       average cost index for margin services used in getting i from r to s
   1852   >!
   1853   Variable (all,m,MARG_COMM)
   1854       qtm(m) # global margin usage #;
   1855   Variable (all,m,MARG_COMM)
   1856       pt(m) # price of composite margins services, type #;
   1857   !<
   1858       price index for commodity m in margin services usage
   1859   >!
   1860    
   1861   Coefficient (ge 0) (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1862       VTMFSD(m,i,r,s)
   1863       # int'l margin usage, by margin, freight, source, and destination #;
   1864   Update (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1865       VTMFSD(m,i,r,s) = pt(m) * qtmfsd(m,i,r,s);
   1866   Read
   1867       VTMFSD from file GTAPDATA header "VTWR";
   1868    
   1869   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1870       VTFSD(i,r,s) # aggregate value of svces in the shipment of i from r to s #;
   1871   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1872       VTFSD(i,r,s) = sum(m,MARG_COMM, VTMFSD(m,i,r,s));
   1873   !<
   1874       In a balanced data base, (all,i,TRAD_COMM)(all,r,REG)(all,s,REG),
   1875       VIWS(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s).
   1876   >!
   1877    
   1878   Coefficient (all,m,MARG_COMM)
   1879       VTMUSE(m) # international margin services usage, by type #;
   1880   Formula (all,m,MARG_COMM)
   1881       VTMUSE(m) = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG, VTMFSD(m,i,r,s))));
   1882    
   1883   Coefficient (all,m,MARG_COMM)
   1884       VTMPROV(m) # international margin services provision #;
   1885   Formula (all,m,MARG_COMM)
   1886       VTMPROV(m) = sum(r,REG, VST(m,r));
   1887   !<
   1888       In a balanced data base, VTMPROV = VTMUSE.
   1889   >!
   1890    
   1891   Coefficient (all,r,REG)
   1892       VTRPROV(r) # international margin supply, by region #;
   1893   Formula (all,r,REG)
   1894       VTRPROV(r) = sum(m,MARG_COMM, VST(m,r));
   1895    
   1896   Coefficient
   1897       VT # international margin supply #;
   1898   Formula
   1899       VT = sum(m,MARG_COMM, sum(r,REG, VST(m,r)));
   1900    
   1901   !<
   1902       6-1. Demand for Global Transport Services
   1903       -----------------------------------------
   1904   >!
   1905    
   1906   Equation QTRANS_MFSD
   1907   # bilateral demand for transport services  #
   1908   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1909       qtmfsd(m,i,r,s) = qxs(i,r,s) - atmfsd(m,i,r,s);
   1910   !<
   1911       This equation computes the bilateral demand for international
   1912       transportation services.  It reflects the fact that the demand for
   1913       services along any particular route is proportional to the quantity of
   1914       merchandise shipped [i.e., QXS(i,r,s)].  It is here that we introduce the
   1915       potential for input-augmenting tech change, atmfsd(m,i,r,s), which is
   1916       commodity- and route-specific.  Thus, in the levels:
   1917               ATMFSD(m,i,r,s) * QTMFSD(m,i,r,s) = QXS(i,r,s)
   1918       where QTMFSD is the amount of composite margins services m used along this
   1919       route.  Technological improvements are reflected by atmfsd(i,r,s) > 0, and
   1920       these reduce the margins services required for this i,r,s triplet.  Tech.
   1921       change also dampens the cost of shipping, thereby lowering the CIF price
   1922       implied by a given FOB value (see 6-2).
   1923   >!
   1924    
   1925   Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1926       VTMUSESHR(m,i,r,s) # share of i,r,s usage in global demand for m #;
   1927   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1928       VTMUSESHR(m,i,r,s) = VTFSD(i,r,s) / VT;
   1929   Formula
   1930       (all,m,MARG_COMM: VTMUSE(m) <> 0.0)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1931       VTMUSESHR(m,i,r,s) = VTMFSD(m,i,r,s) / VTMUSE(m);
   1932    
   1933   Equation TRANS_DEMAND
   1934   # global demand for margin m #
   1935   (all,m,MARG_COMM)
   1936       qtm(m)
   1937           = sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
   1938             VTMUSESHR(m,i,r,s) * qtmfsd(m,i,r,s))));
   1939    
   1940   !<
   1941       6-2. Supply of Transport Services
   1942       ---------------------------------
   1943   >!
   1944    
   1945   Coefficient (all,m,MARG_COMM)(all,r,REG)
   1946       VTSUPPSHR(m,r) # share of region r in global supply of margin m #;
   1947   Formula (all,m,MARG_COMM)(all,r,REG)
   1948       VTSUPPSHR(m,r) = VTRPROV(r) / VT;
   1949   Formula (all,m,MARG_COMM: VTMPROV(m) <> 0.0)(all,r,REG)
   1950       VTSUPPSHR(m,r) = VST(m,r) / VTMPROV(m);
   1951    
   1952   Equation PTRANSPORT
   1953   # generate price index for composite transportation services #
   1954   (all,m,MARG_COMM)
   1955       pt(m) = sum(r,REG, VTSUPPSHR(m,r) * pm(m,r));
   1956   !<
   1957       This equation generates a price index for transportation services based on
   1958       zero profits.  NOTE:
   1959       (1) Sales to international transportation are not subject to export tax.
   1960           This is why we base the costs to the transport sector on market prices
   1961           of the goods sold to international transportation.
   1962       (2) We assume that the supply shares for margin services are uniform
   1963           across freight, source of freight, and destination.
   1964       (cf. HT#7)
   1965   >!
   1966    
   1967   Coefficient
   1968       VTUSE # international margin services usage #;
   1969   Formula
   1970       VTUSE
   1971           = sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(r,REG, sum(s,REG,
   1972               VTMFSD(m,i,r,s)))));
   1973    
   1974   Coefficient (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1975       VTFSD_MSH(m,i,r,s) # share of margin m in cost of getting i from r to s #;
   1976   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
   1977           (all,s,REG: VTFSD(i,r,s) > 0.0)
   1978       VTFSD_MSH(m,i,r,s) = VTMFSD(m,i,r,s) / VTFSD(i,r,s);
   1979   Formula (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)
   1980           (all,s,REG: VTFSD(i,r,s) = 0.0)
   1981       VTFSD_MSH(m,i,r,s) = VTMUSE(m) / VTUSE;
   1982    
   1983   Equation TRANSCOSTINDEX
   1984   #  generates flow-specific modal average cost of transport index (cf. HT7) #
   1985   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1986       ptrans(i,r,s)
   1987           = sum(m,MARG_COMM, VTFSD_MSH(m,i,r,s) * [pt(m) - atmfsd(m,i,r,s)]);
   1988    
   1989   Equation TRANSTECHANGE
   1990   #  generates flow-specific average rate of technical change #
   1991   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   1992       atmfsd(m,i,r,s) = atm(m) + atf(i) + ats(r) + atd(s) + atall(m,i,r,s);
   1993    
   1994   Equation TRANSVCES
   1995   # generate demand for regional supply of global transportation service (HT 61) #
   1996   (all,m,MARG_COMM)(all,r,REG)
   1997       qst(m,r) = qtm(m) + [pt(m) - pm(m,r)];
   1998   !<
   1999       This equation generates the international transport sector's derived
   2000       demand for regional supplies of transportation services.  It reflects a
   2001       unitary elasticity of substitution between transportation services inputs
   2002       from different regions.
   2003   >!
   2004    
   2005   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2006       VIWSCOST(i,r,s) # value of imports calculated as total cost of imports #;
   2007   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2008       VIWSCOST(i,r,s) = VXWD(i,r,s) + VTFSD(i,r,s);
   2009    
   2010   Zerodivide (zero_by_zero) default 1;
   2011   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2012       FOBSHR(i,r,s) # FOB share in VIW #;
   2013   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2014       FOBSHR(i,r,s) = VXWD(i,r,s) / VIWSCOST(i,r,s);
   2015   Zerodivide (zero_by_zero) OFF;
   2016    
   2017   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2018       TRNSHR(i,r,s) # transport share in VIW #;
   2019   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2020       TRNSHR(i,r,s) = 1 - FOBSHR(i,r,s);
   2021    
   2022   Equation FOBCIF
   2023   # eq'n links FOB and CIF prices for good i shipped from region r to s (HT 26') #
   2024   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2025       pcif(i,r,s)
   2026          = FOBSHR(i,r,s) * pfob(i,r,s)
   2027          + TRNSHR(i,r,s) * ptrans(i,r,s);
   2028   !<
   2029       This equation links export and import prices for each commodity/route
   2030       triplet.  Note that technical change is embodied in ptrans(i,r,s) which is
   2031       now a cost index, as opposed to (HT 26') where it represented the price of
   2032       margins services.
   2033   >!
   2034    
   2035   !<
   2036       ---------------------
   2037       7. Regional Household
   2038       ---------------------
   2039    
   2040       7-0. Module-Specific Coefficients
   2041       7-1. Supply of Endowments by the Regional Household
   2042       7-2. Computation of Regional Income
   2043       7-3. Regional Household Demand System
   2044       7-4. Aggregate Utility
   2045   >!
   2046    
   2047   !<
   2048       7-0. Module-Specific Coefficients
   2049       ---------------------------------
   2050    
   2051       only used in this Regional Household module
   2052   >!
   2053    
   2054   Coefficient (all,r,REG)
   2055       XSHRPRIV(r) # private expenditure share in regional income #;
   2056   Formula (all,r,REG)
   2057       XSHRPRIV(r) = PRIVEXP(r) / INCOME(r);
   2058    
   2059   Coefficient (all,r,REG)
   2060       XSHRGOV(r) # government expenditure share in regional income #;
   2061   Formula (all,r,REG)
   2062       XSHRGOV(r) = GOVEXP(r) / INCOME(r);
   2063    
   2064   Coefficient (all,r,REG)
   2065       XSHRSAVE(r) # saving share in regional income #;
   2066   Formula (all,r,REG)
   2067       XSHRSAVE(r) = SAVE(r) / INCOME(r);
   2068    
   2069   Variable (all,r,REG)
   2070       uelas(r) # elasticity of cost of utility wrt utility #;
   2071    
   2072   Variable (all,r,REG)
   2073       dppriv(r) # private consumption distribution parameter #;
   2074   Variable (all,r,REG)
   2075       dpgov(r) # government consumption distribution parameter #;
   2076   Variable (all,r,REG)
   2077       dpsave(r) # saving distribution parameter #;
   2078    
   2079   !<
   2080       7-1. Supply of Endowments by the Regional Household
   2081       ---------------------------------------------------
   2082   >!
   2083    
   2084   Equation FACTORINCPRICES
   2085   # eq'n links pre- and post-tax endowment supply prices (HT 15) #
   2086   (all,i,ENDW_COMM)(all,r,REG)
   2087       ps(i,r) = to(i,r) + pm(i,r);
   2088    
   2089   Coefficient (all,r,REG)
   2090       TINC(r) # income tax payments in r #;
   2091   Formula (all,r,REG)
   2092       TINC(r) = sum(i,ENDW_COMM, PTAX(i,r));
   2093    
   2094   Equation TINCRATIO
   2095   # change in ratio of income tax payments to regional income #
   2096   (all,r,REG)
   2097       100.0 * INCOME(r) * del_taxrinc(r) + TINC(r) * y(r)
   2098           = sum(i,ENDW_COMM,
   2099               VOA(i,r) * [-to(i,r)] + PTAX(i,r) * [pm(i,r) + qo(i,r)]);
   2100    
   2101   Coefficient (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   2102       REVSHR(i,j,r);
   2103   Formula (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   2104       REVSHR(i,j,r) = VFM(i,j,r) / sum(k,PROD_COMM, VFM(i,k,r));
   2105   Equation ENDW_PRICE
   2106   # eq'n generates the composite price for sluggish endowments (HT 50) #
   2107   (all,i,ENDWS_COMM)(all,r,REG)
   2108       pm(i,r) = sum(k,PROD_COMM, REVSHR(i,k,r) * pmes(i,k,r));
   2109    
   2110   Coefficient (parameter)(all,i,ENDW_COMM)
   2111       ETRAE(i)
   2112       # elst. of transformation for sluggish primary factor endowments #;
   2113   Read
   2114       ETRAE from file GTAPPARM header "ETRE";
   2115   !<
   2116       ETRAE is the elasticity of transformation for sluggish primary factor
   2117       endowments.  It is non-positive, by definition.
   2118   >!
   2119   Equation ENDW_SUPPLY
   2120   # eq'n distributes the sluggish endowments across sectors (HT 51) #
   2121   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   2122       qoes(i,j,r) = qo(i,r) - endwslack(i,r) + ETRAE(i) * [pm(i,r) - pmes(i,j,r)];
   2123    
   2124   !<
   2125       7-2. Computation of Regional Income
   2126       -----------------------------------
   2127   >!
   2128    
   2129   Coefficient (all,r,REG)
   2130       FY(r) # primary factor income in r net of depreciation #;
   2131   Formula (all,r,REG)
   2132       FY(r) = sum(i,ENDW_COMM, VOM(i,r)) - VDEP(r);
   2133   Variable (all,r,REG)
   2134       fincome(r) # factor income at market prices net of depreciation #;
   2135   Equation FACTORINCOME
   2136   # factor income at market prices net of depreciation #
   2137   (all,r,REG)
   2138       FY(r) * fincome(r)
   2139           = sum(i,ENDW_COMM, VOM(i,r) * [pm(i,r) + qo(i,r)])
   2140           - VDEP(r)  * [pcgds(r) + kb(r)];
   2141    
   2142   Variable (change)(all,r,REG)
   2143       del_indtaxr(r) # change in ratio of indirect taxes to INCOME in r #;
   2144   Equation DINDTAXRATIO
   2145   # change in ratio of indirect taxes to INCOME in r #
   2146   (all,r,REG)
   2147       del_indtaxr(r)
   2148           = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
   2149           + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r);
   2150    
   2151   Variable (change)(all,r,REG)
   2152       del_ttaxr(r) # change in ratio of taxes to INCOME in r #;
   2153   Equation DTAXRATIO
   2154   # change in ratio of taxes to INCOME in r #
   2155   (all,r,REG)
   2156       del_ttaxr(r)
   2157           = del_taxrpc(r) + del_taxrgc(r) + del_taxriu(r) + del_taxrfu(r)
   2158           + del_taxrout(r) + del_taxrexp(r) + del_taxrimp(r) + del_taxrinc(r);
   2159   !<
   2160      This variable can be swapped with the commodity- and source-generic
   2161      consumption tax shift, tp(r), in order to generate a tax replacement
   2162      scenario, whereby taxes remain a constant share of national income.
   2163   >!
   2164    
   2165   Variable (all,r,REG)
   2166       incomeslack(r) # slack variable in the expression for regional income #;
   2167   !<
   2168       This is exogenous, unless the user wishes to fix regional income.
   2169   >!
   2170    
   2171   Coefficient (all,r,REG)
   2172       INDTAX(r) # indirect tax receipts in r #;
   2173   Formula (all,r,REG)
   2174       INDTAX(r) = TPC(r) + TGC(r) + TIU(r) + TFU(r) + TOUT(r) + TEX(r) + TIM(r);
   2175    
   2176   Equation REGIONALINCOME
   2177   # regional income = sum of primary factor income and indirect tax receipts #
   2178   (all,r,REG)
   2179       INCOME(r) * y(r)
   2180           = FY(r) * fincome(r)
   2181           + 100.0 * INCOME(r) * del_indtaxr(r)
   2182           + INDTAX(r) * y(r)
   2183           + INCOME(r) * incomeslack(r);
   2184   !<
   2185       This equation computes regional income as the sum of primary factor
   2186       payment and indirect tax receipts.  The first term computes the change in
   2187       endowment income, net of depreciation.  The subsequent terms compute the
   2188       change in indirect tax receipts for various transactions taxes.
   2189   >!
   2190    
   2191   !<
   2192       7-3. Regional Household Demand System
   2193       -------------------------------------
   2194   >!
   2195    
   2196   Variable (all,r,REG)
   2197       dpav(r) # average distribution parameter shift, for EV calc. #;
   2198   Equation DPARAV
   2199   # average distribution parameter shift #
   2200   (all,r,REG)
   2201       dpav(r)
   2202           = XSHRPRIV(r) * dppriv(r)
   2203           + XSHRGOV(r) * dpgov(r)
   2204           + XSHRSAVE(r) * dpsave(r);
   2205    
   2206   Equation UTILITELASTIC
   2207   # elasticity of cost of utility wrt utility #
   2208   (all,r,REG)
   2209       uelas(r) = XSHRPRIV(r) * uepriv(r) - dpav(r);
   2210    
   2211   Equation PRIVCONSEXP
   2212   # private consumption expenditure #
   2213   (all,r,REG)
   2214       yp(r) - y(r) = -[uepriv(r) - uelas(r)] + dppriv(r);
   2215    
   2216   Equation GOVCONSEXP
   2217   # government consumption expenditure #
   2218   (all,r,REG)
   2219       yg(r) - y(r) = uelas(r) + dpgov(r);
   2220    
   2221   Equation SAVING
   2222   # saving #
   2223   (all,r,REG)
   2224       psave(r) + qsave(r) - y(r) = uelas(r) + dpsave(r);
   2225    
   2226   !<
   2227       7-4. Aggregate Utility
   2228       ----------------------
   2229   >!
   2230    
   2231   Variable (all,r,REG)
   2232       p(r) # price index for disposition of income by regional household #;
   2233   Equation PRICEINDEXREG
   2234       # price index for disposition of income by regional household #
   2235       (all,r,REG)
   2236       p(r)
   2237           = XSHRPRIV(r) * ppriv(r)
   2238           + XSHRGOV(r) * pgov(r)
   2239           + XSHRSAVE(r) * psave(r);
   2240    
   2241   Variable (all,r,REG)
   2242       au(r) # input-neutral shift in utility function #;
   2243   Variable (all,r,REG)
   2244       dpsum(r) # sum of the distribution parameters #;
   2245    
   2246   Coefficient (all,r,REG)
   2247       DPARSUM(r) # sum of distribution parameters #;
   2248   Read
   2249       DPARSUM from file GTAPDATA header "DPSM";
   2250   Update (all,r,REG)
   2251       DPARSUM(r) = dpsum(r);
   2252    
   2253   Coefficient (all,r,REG)
   2254       UTILELAS(r) # elasticity of cost of utility wrt utility #;
   2255   Formula (all,r,REG)
   2256       UTILELAS(r)
   2257           = [UELASPRIV(r) * XSHRPRIV(r) + XSHRGOV(r) + XSHRSAVE(r)] / DPARSUM(r);
   2258    
   2259   Coefficient (all,r,REG)
   2260       DPARPRIV(r) # private consumption distribution parameter #;
   2261   Formula (all,r,REG)
   2262       DPARPRIV(r) = UELASPRIV(r) * XSHRPRIV(r) / UTILELAS(r);
   2263    
   2264   Coefficient (all,r,REG)
   2265       DPARGOV(r) # government consumption distribution parameter #;
   2266   Formula (all,r,REG)
   2267       DPARGOV(r) = XSHRGOV(r) / UTILELAS(r);
   2268    
   2269   Coefficient (all,r,REG)
   2270       DPARSAVE(r) # saving distribution parameter #;
   2271   Formula (all,r,REG)
   2272       DPARSAVE(r) = XSHRSAVE(r) / UTILELAS(r);
   2273    
   2274   Coefficient (all,r,REG)
   2275       UTILPRIV(r) # utility from private consumption #;
   2276   Formula (initial)(all,r,REG)
   2277       UTILPRIV(r) = 1.0;
   2278   Update (all,r,REG)
   2279       UTILPRIV(r) = up(r);
   2280    
   2281   Coefficient (all,r,REG)
   2282       UTILGOV(r) # utility from government consumption #;
   2283   Formula (initial)(all,r,REG)
   2284       UTILGOV(r) = 1.0;
   2285   Update (all,r,REG)
   2286       UTILGOV(r) = ug(r);
   2287    
   2288   Coefficient (all,r,REG)
   2289       UTILSAVE(r) # utility from saving #;
   2290   Formula (initial)(all,r,REG)
   2291       UTILSAVE(r) = 1.0;
   2292   Update (change) (all,r,REG)
   2293       UTILSAVE(r) = [[qsave(r) - pop(r)] / 100] * UTILSAVE(r);
   2294    
   2295   Variable (all,r,REG)
   2296       u(r) # per capita utility from aggregate hhld expend. in region r #;
   2297   Equation UTILITY
   2298   # regional household utility #
   2299   (all,r,REG)
   2300       u(r)
   2301           = au(r)
   2302           + DPARPRIV(r) * loge(UTILPRIV(r)) * dppriv(r)
   2303           + DPARGOV(r) * loge(UTILGOV(r)) * dpgov(r)
   2304           + DPARSAVE(r) * loge(UTILSAVE(r)) * dpsave(r)
   2305           + [1.0 / UTILELAS(r)] * [y(r) - pop(r) - p(r)];
   2306    
   2307   Equation DISTPARSUM
   2308   # sum of the distribution parameters #
   2309   (all,r,REG)
   2310       DPARSUM(r) * dpsum(r)
   2311           = DPARPRIV(r) * dppriv(r)
   2312           + DPARGOV(r) * dpgov(r)
   2313           + DPARSAVE(r) * dpsave(r);
   2314    
   2315   !<
   2316       -------------------------
   2317       8. Equilibrium Conditions
   2318       -------------------------
   2319    
   2320       8-1. Market Clearing Conditions
   2321       8-2. Walras' Law
   2322   >!
   2323    
   2324   !<
   2325       8-1. Market Clearing Conditions
   2326       -------------------------------
   2327   >!
   2328    
   2329   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2330       SHRDFM(i,j,r) # share of dom. prod. i used by sector j in r at mkt prices #;
   2331   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2332       SHRDFM(i,j,r) = VDFM(i,j,r) / VDM(i,r);
   2333    
   2334   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2335       SHRDPM(i,r) # share of domestic prod. of i used by private hhlds in r #;
   2336   Formula (all,i,TRAD_COMM)(all,r,REG)
   2337       SHRDPM(i,r) = VDPM(i,r) / VDM(i,r);
   2338    
   2339   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2340       SHRDGM(i,r) # share of imports of i used by gov't hhlds in r #;
   2341   Formula (all,i,TRAD_COMM)(all,r,REG)
   2342       SHRDGM(i,r) = VDGM(i,r) / VDM(i,r);
   2343    
   2344   Variable (orig_level=VDM)(all,i,TRAD_COMM)(all,r,REG)
   2345       qds(i,r) # domestic sales of commodity i in r #;
   2346   Equation MKTCLDOM
   2347   # eq'n assures market clearing for domestic sales (HT 3) #
   2348   (all,i,TRAD_COMM)(all,r,REG)
   2349       qds(i,r)
   2350           = sum(j,PROD_COMM, SHRDFM(i,j,r) * qfd(i,j,r))
   2351           + SHRDPM(i,r) * qpd(i,r)
   2352           + SHRDGM(i,r) * qgd(i,r);
   2353    
   2354   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2355       SHRDM(i,r) # share of domestic sales of i in r #;
   2356   Formula (all,i,TRAD_COMM)(all,r,REG)
   2357       SHRDM(i,r) = VDM(i,r) / VOM(i,r);
   2358    
   2359   Coefficient (all,m,MARG_COMM)(all,r,REG)
   2360       SHRST(m,r) # share of sales of m to global transport services in r #;
   2361   Formula (all,m,MARG_COMM)(all,r,REG)
   2362       SHRST(m,r) = VST(m,r) / VOM(m,r);
   2363    
   2364   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2365       SHRXMD(i,r,s) # share of export sales of i to s in r #;
   2366   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   2367       SHRXMD(i,r,s) = VXMD(i,r,s) / VOM(i,r);
   2368    
   2369   Variable (all,i,TRAD_COMM)(all,r,REG)
   2370       tradslack(i,r) # slack variable in tradeables market clearing condition #;
   2371   !<
   2372       This is exogenous unless the user wishes to specify the price of
   2373       tradeables exogenously, in which case the analysis becomes partial
   2374       equilibrium and walraslack must be exogenized.
   2375   >!
   2376    
   2377   Equation MKTCLTRD_MARG
   2378   # eq'n assures market clearing for margins commodities (HT 1) #
   2379   (all,m,MARG_COMM)(all,r,REG)
   2380       qo(m,r)
   2381           = SHRDM(m,r) * qds(m,r)
   2382           + SHRST(m,r) * qst(m,r)
   2383           + sum(s,REG, SHRXMD(m,r,s) * qxs(m,r,s))
   2384           + tradslack(m,r);
   2385   Equation MKTCLTRD_NMRG
   2386   # eq'n assures market clearing for the non-margins commodities (HT 1) #
   2387   (all,i,NMRG_COMM)(all,r,REG)
   2388       qo(i,r)
   2389           = SHRDM(i,r) * qds(i,r)
   2390           + sum(s,REG, SHRXMD(i,r,s) * qxs(i,r,s))
   2391           + tradslack(i,r);
   2392    
   2393   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2394       VIM(i,r) # value of imports of commodity i in r at domestic market prices #;
   2395   Formula (all,i,TRAD_COMM)(all,r,REG)
   2396       VIM(i,r) = sum(j,PROD_COMM, VIFM(i,j,r)) + VIPM(i,r) + VIGM(i,r);
   2397    
   2398   Coefficient (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2399       SHRIFM(i,j,r) # share of import i used by sector j in r  #;
   2400   Formula (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   2401       SHRIFM(i,j,r) = VIFM(i,j,r) / VIM(i,r);
   2402    
   2403   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2404       SHRIPM(i,r) # share of import i used by private hhlds in r #;
   2405   Formula (all,i,TRAD_COMM)(all,r,REG)
   2406       SHRIPM(i,r) = VIPM(i,r) / VIM(i,r);
   2407    
   2408   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2409       SHRIGM(i,r) # the share of import i used by gov't hhlds in r #;
   2410   Formula (all,i,TRAD_COMM)(all,r,REG)
   2411       SHRIGM(i,r) = VIGM(i,r) / VIM(i,r);
   2412    
   2413   Equation MKTCLIMP
   2414   # eq'n assures mkt clearing for imported goods entering each region (HT 2) #
   2415   (all,i,TRAD_COMM)(all,r,REG)
   2416       qim(i,r)
   2417           = sum(j,PROD_COMM, SHRIFM(i,j,r) * qfm(i,j,r))
   2418           + SHRIPM(i,r) * qpm(i,r)
   2419           + SHRIGM(i,r) * qgm(i,r);
   2420    
   2421   Coefficient (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   2422       SHREM(i,j,r) # share of mobile endowment i used by sector j at mkt prices #;
   2423   Formula (all,i,ENDWM_COMM)(all,j,PROD_COMM)(all,r,REG)
   2424       SHREM(i,j,r) = VFM(i,j,r) / VOM(i,r);
   2425    
   2426   Equation MKTCLENDWM
   2427   # eq'n assures mkt clearing for perfectly mobile endowments in each r (HT 4) #
   2428   (all,i,ENDWM_COMM)(all,r,REG)
   2429       qo(i,r) = sum(j,PROD_COMM, SHREM(i,j,r) * qfe(i,j,r)) + endwslack(i,r);
   2430   !<
   2431       This equation assures market clearing for perfectly mobile endowments (HT
   2432       4)
   2433   >!
   2434    
   2435   Equation MKTCLENDWS
   2436   # eq'n assures mkt clearing for imperfectly mobile endowments in each r (HT 5) #
   2437   (all,i,ENDWS_COMM)(all,j,PROD_COMM)(all,r,REG)
   2438       qoes(i,j,r) = qfe(i,j,r);
   2439   !<
   2440       This equation assures market clearing for sluggish endowments (HT 5)
   2441   >!
   2442    
   2443   !<
   2444       8-2. Walras' Law
   2445       ----------------
   2446   >!
   2447    
   2448   Variable
   2449       walras_sup # supply in omitted market--global supply of cgds composite #;
   2450   Equation WALRAS_S
   2451   # Extra eq'n computes change in supply in the omitted market. #
   2452       walras_sup = pcgdswld + globalcgds;
   2453   !<
   2454       This is an extra equation which simply computes change in supply in the
   2455       omitted market.  (modified from HT 12 to reflect the value as opposed to
   2456       quantity change, in light of the new treatment of psave(r))
   2457   >!
   2458    
   2459   Variable
   2460       walras_dem # demand in the omitted market--global demand for savings #;
   2461   Equation WALRAS_D
   2462   # Extra eq'n computes change in demand in the omitted market. #
   2463       GLOBINV * walras_dem = sum(r,REG, SAVE(r) * [psave(r) + qsave(r)]);
   2464   !<
   2465       This is an extra equation which simply computes change in demand in the
   2466       omitted market.  (modified from HT 13 to reflect the value as opposed to
   2467       quantity change)
   2468   >!
   2469    
   2470   Variable
   2471       walraslack # slack variable in the omitted market #;
   2472   !<
   2473       This is endogenous under normal, GE closure.  If the GE links are broken,
   2474       then this must be swapped with the numeraire, thereby forcing global
   2475       savings to explicitly equal global investment.
   2476   >!
   2477   Equation WALRAS
   2478   # Check Walras' Law.  Value of "walraslack" should be zero. (HT 14) #
   2479       walras_sup = walras_dem + walraslack;
   2480   !<
   2481       This equation checks Walras' Law.  The value of walraslack should be zero
   2482       in any GE simulation.  (HT 14)
   2483   >!
   2484    
   2485   !<
   2486       ==========
   2487       Appendices
   2488       ==========
   2489    
   2490       A. Summary Indices
   2491       B. Equivalent Variation
   2492       C. Welfare Decomposition
   2493       D. Terms of Trade Decomposition
   2494   >!
   2495    
   2496   !<
   2497       ------------------
   2498       A. Summary Indices
   2499       ------------------
   2500    
   2501       The following equations calculate many useful summary statistics.  They do
   2502       not generally affect the equilibrium structure of the model, although they
   2503       do include the equation for the usual numeraire variable, "pfactwld". Some
   2504       are documented in Hertel and Tsigas, many are new.
   2505    
   2506       A-0. Appendix-Specific Variables and Coefficients
   2507       A-1. Factor Price Indices
   2508       A-2. Regional Terms of Trade
   2509       A-3. GDP Indices (Value, Price and Quantity)
   2510       A-4. Aggregate Trade Indices (Value, Price and Quantity)
   2511       A-5. Trade Balance Indices
   2512   >!
   2513    
   2514   !<
   2515       A-0. Appendix-Specific Variables and Coefficients
   2516       -------------------------------------------------
   2517    
   2518       only used in this Summary Indices appendix
   2519   >!
   2520    
   2521   Variable (all,i,TRAD_COMM)(all,s,REG)
   2522       vxwfob(i,s) # value of merchandise regional exports, by commodity, FOB #;
   2523   Variable (all,i,TRAD_COMM)(all,s,REG)
   2524       viwcif(i,s) # value of merchandise regional imports, by commodity, CIF #;
   2525   Variable (all,r,REG)
   2526       vxwreg(r) # value of merchandise exports, by region #;
   2527   Variable (all,r,REG)
   2528       viwreg(r) # value of merchandise imports, by region, at world prices #;
   2529    
   2530   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2531       VXW(i,r) # value of exports by comm. i and region r at FOB prices #;
   2532   Formula (all,m,MARG_COMM)(all,r,REG)
   2533       VXW(m,r) = sum(s,REG, VXWD(m,r,s)) + VST(m,r);
   2534   Formula (all,i,NMRG_COMM)(all,r,REG)
   2535       VXW(i,r) = sum(s,REG, VXWD(i,r,s));
   2536    
   2537   Coefficient (all,r,REG)
   2538       VXWREGION(r) # value of exports by region r at FOB prices #;
   2539   Formula (all,r,REG)
   2540       VXWREGION(r) = sum(i,TRAD_COMM, VXW(i,r));
   2541    
   2542   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   2543       VIW(i,s) # value of commodity imports i into s at CIF prices #;
   2544   Formula (all,i,TRAD_COMM)(all,s,REG)
   2545       VIW(i,s) = sum(r,REG, VIWS(i,r,s));
   2546   Coefficient (all,r,REG)
   2547       VIWREGION(r) # value of commodity imports by region r at CIF prices #;
   2548   Formula (all,r,REG)
   2549       VIWREGION(r) = sum(i,TRAD_COMM, VIW(i,r));
   2550    
   2551   !<
   2552       A-1. Factor Price Indices
   2553       -------------------------
   2554   >!
   2555    
   2556   Variable (orig_level=1.0)(all,i,ENDW_COMM)(all,r,REG)
   2557       pfactreal(i,r) # ratio of return to primary factor i to CPI in r #;
   2558   Equation REALRETURN
   2559   # eq'n defines the real rate of return to primary factor i in region r #
   2560   (all,i,ENDW_COMM)(all,s,REG)
   2561       pfactreal(i,s) = pm(i,s) - ppriv(s);
   2562   !<
   2563       This equation defines the real rate of return to primary factor i in
   2564       region r (new).
   2565   >!
   2566    
   2567   Coefficient (all,r,REG)
   2568       VENDWREG(r) # value of primary factors, at mkt prices, by region #;
   2569   Formula (all,r,REG)
   2570       VENDWREG(r) = sum(i,ENDW_COMM, VOM(i,r));
   2571    
   2572   Variable (orig_level=1.0)(all,r,REG)
   2573       pfactor(r) # market price index of primary factors, by region #;
   2574   Equation PRIMFACTPR
   2575   # computes % change in price index of primary factors, by region #
   2576   (all,r,REG)
   2577       VENDWREG(r) * pfactor(r) = sum(i,ENDW_COMM, VOM(i,r) * pm(i,r));
   2578    
   2579   Coefficient
   2580       VENDWWLD # value of primary factors, at mkt prices, worldwide #;
   2581   Formula
   2582       VENDWWLD = sum(r,REG, VENDWREG(r));
   2583   Variable (orig_level=1.0)
   2584       pfactwld # world price index of primary factors #;
   2585   Equation PRIMFACTPRWLD
   2586   # computes % change in global price index of primary factors #
   2587       VENDWWLD * pfactwld = sum(r,REG, VENDWREG(r) * pfactor(r));
   2588    
   2589   !<
   2590       A-2. Regional Terms of Trade
   2591       ----------------------------
   2592    
   2593       The next three equations correspond to Table 10 of Hertel and Tsigas on
   2594       Regional Terms of Trade.
   2595   >!
   2596    
   2597   Variable (orig_level=1.0)(all,r,REG)
   2598       psw(r) # index of prices received for tradeables produced in r #;
   2599   Equation REGSUPRICE
   2600   # estimate change in index of prices received for tradeables i produced in r #
   2601   (all,r,REG)
   2602       VXWREGION(r) * psw(r)
   2603           = sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   2604           + sum(m,MARG_COMM, VST(m,r) * pm(m,r));
   2605   !<
   2606       This equation estimates the change in the index of prices received for
   2607       tradeable products produced in r.  (modified from HT 64 to eliminate the
   2608       investment component)
   2609   >!
   2610    
   2611   Variable (orig_level=1.0)(all,r,REG)
   2612       pdw(r) # index of prices paid for tradeables used in region r #;
   2613   Equation REGDEMPRICE
   2614   # estimate change in index of prices paid for tradeable products used in r #
   2615   (all,r,REG)
   2616       VIWREGION(r) * pdw(r)
   2617           = sum(i,TRAD_COMM, sum(k,REG, VIWS(i,k,r) * pcif(i,k,r)));
   2618   !<
   2619       This equation estimates the change in the index of prices paid for
   2620       tradeable products used in r.  (modified from HT 65 to eliminate savings)
   2621   >!
   2622    
   2623   Variable (orig_level=1.0)(all,r,REG)
   2624       tot(r) # terms of trade for region r: tot(r) = psw(r) - pdw(r) #;
   2625   Equation TOTeq
   2626   # terms of trade equation computed as difference in psw and pdw (HT 66) #
   2627   (all,r,REG)
   2628       tot(r) = psw(r) - pdw(r);
   2629    
   2630   !<
   2631       A-3. GDP Indices (Value, Price and Quantity)
   2632       --------------------------------------------
   2633   >!
   2634    
   2635   Coefficient (all,r,REG)
   2636       GDP(r) # Gross Domestic Product in region r #;
   2637   Formula (all,s,REG)
   2638       GDP(s)
   2639           = sum(i,TRAD_COMM, VPA(i,s))
   2640           + sum(i,TRAD_COMM, VGA(i,s))
   2641           + sum(k,CGDS_COMM, VOA(k,s))
   2642           + sum(i,TRAD_COMM, sum(r,REG, VXWD(i,s,r)))
   2643           + sum(m,MARG_COMM, VST(m,s))
   2644           - sum(i,TRAD_COMM, sum(r,REG, VIWS(i,r,s)));
   2645   !<
   2646       Gross Domestic Product in region r.  Trade is valued at FOB and CIF
   2647       prices.
   2648   >!
   2649    
   2650   Variable (all,r,REG)
   2651       vgdp(r) # change in value of GDP #;
   2652   Equation VGDP_r
   2653   # change in value of GDP (HT 70) #
   2654   (all,r,REG)
   2655       GDP(r) * vgdp(r)
   2656           = sum(i,TRAD_COMM, VGA(i,r) * [qg(i,r) + pg(i,r)])
   2657           + sum(i,TRAD_COMM, VPA(i,r) * [qp(i,r) + pp(i,r)])
   2658           + REGINV(r) * [qcgds(r) + pcgds(r)]
   2659           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]))
   2660           + sum(m,MARG_COMM, VST(m,r) * [qst(m,r) + pm(m,r)])
   2661           - sum(i,TRAD_COMM, sum(s,REG,
   2662               VIWS(i,s,r) * [qxs(i,s,r) + pcif(i,s,r)]));
   2663    
   2664   Variable (orig_level=1.0)(all,r,REG)
   2665       pgdp(r) # GDP price index #;
   2666   Equation PGDP_r
   2667   # GDP price index (HT 71) #
   2668   (all,r,REG)
   2669       GDP(r) * pgdp(r)
   2670           = sum(i,TRAD_COMM, VGA(i,r) * pg(i,r))
   2671           + sum(i,TRAD_COMM, VPA(i,r) * pp(i,r))
   2672           + REGINV(r) * pcgds(r)
   2673           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   2674           + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
   2675           - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * pcif(i,s,r)));
   2676    
   2677   Variable (orig_level=GDP)(all,r,REG)
   2678       qgdp(r) # GDP quantity index #;
   2679   Equation QGDP_r
   2680   # GDP quantity index #
   2681   (all,r,REG)
   2682       GDP(r) * qgdp(r)
   2683           = sum(i,TRAD_COMM, VGA(i,r) * qg(i,r))
   2684           + sum(i,TRAD_COMM, VPA(i,r) * qp(i,r))
   2685           + REGINV(r) * qcgds(r)
   2686           + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * qxs(i,r,s)))
   2687           + sum(m,MARG_COMM, VST(m,r) * qst(m,r))
   2688           - sum(i,TRAD_COMM, sum(s,REG, VIWS(i,s,r) * qxs(i,s,r)));
   2689   !<
   2690       modified from HT 72 for use with AnalyzeGE
   2691   >!
   2692    
   2693   Variable (all,i,PROD_COMM)(all,r,REG)
   2694       compvalad(i,r) # composition of value added for good i and region r #;
   2695   Equation COMPVALADEQ
   2696   # track change in composition of value added #
   2697   (all,i,PROD_COMM)(all,r,REG)
   2698       compvalad(i,r) = qo(i,r) - qgdp(r);
   2699    
   2700   !<
   2701       A-4. Aggregate Trade Indices (Value, Price and Quantity)
   2702       --------------------------------------------------------
   2703   >!
   2704    
   2705   !<
   2706       Common Variables and Coefficients
   2707       Value Indices for Aggregate Trade
   2708       Price Indices for Aggregate Trade
   2709       Quantity Indices for Aggregate Trade
   2710   >!
   2711    
   2712   !<
   2713       Common Variables and Coefficients
   2714       .................................
   2715    
   2716       only used in this Aggregate Trade Indices section
   2717   >!
   2718    
   2719   Variable (orig_level=1.0)(all,i,TRAD_COMM)(all,r,REG)
   2720       pxw(i,r) # aggregate exports price index of i from region r #;
   2721    
   2722   Coefficient (all,i,TRAD_COMM)
   2723       VXWCOMMOD(i) # value of world exports by commodity i at FOB prices #;
   2724   Formula (all,i,TRAD_COMM)
   2725       VXWCOMMOD(i) = sum(r,REG, VXW(i,r));
   2726    
   2727   Coefficient
   2728       VXWLD # value of commodity exports, FOB, globally #;
   2729   Formula
   2730       VXWLD = sum(r,REG, VXWREGION(r));
   2731    
   2732   Coefficient (all,i,TRAD_COMM)
   2733       VIWCOMMOD(i) # global value of commodity imports, CIF, by commodity #;
   2734   Formula (all,i,TRAD_COMM)
   2735       VIWCOMMOD(i) = sum(r,REG, VIW(i,r));
   2736    
   2737   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2738       PW_PM(i,r) # ratio of world to domestic prices #;
   2739   Formula (all,i,TRAD_COMM)(all,r,REG)
   2740       PW_PM(i,r) = sum(s,REG, VXWD(i,r,s)) / sum(s,REG, VXMD(i,r,s));
   2741   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   2742       VOW(i,r) # value of output in r at FOB including transportation services #;
   2743   Formula (all,m,MARG_COMM)(all,r,REG)
   2744       VOW(m,r) = VDM(m,r) * PW_PM(m,r) + sum(s,REG, VXWD(m,r,s)) + VST(m,r);
   2745   Formula (all,i,NMRG_COMM)(all,r,REG)
   2746       VOW(i,r) = VDM(i,r) * PW_PM(i,r) + sum(s,REG, VXWD(i,r,s));
   2747    
   2748   Coefficient (all,i,TRAD_COMM)
   2749       VWOW(i) # value of world supply at world prices for i #;
   2750   Formula (all,i,TRAD_COMM)
   2751       VWOW(i) = sum(r,REG, VOW(i,r));
   2752    
   2753   Coefficient (all,i,TRAD_COMM)
   2754       VWOU(i) # value of world output of i at user prices #;
   2755   Formula (all,i,TRAD_COMM)
   2756       VWOU(i) = sum(s,REG, [VPA(i,s) + VGA(i,s)] + sum(j,PROD_COMM, VFA(i,j,s)));
   2757    
   2758   !<
   2759       Value Indices for Aggregate Trade
   2760       .................................
   2761   >!
   2762    
   2763   Equation VREGEX_ir_MARG
   2764   # the change in FOB value of exports of m from r #
   2765   (all,m,MARG_COMM)(all,r,REG)
   2766       VXW(m,r) * vxwfob(m,r)
   2767           = sum(s,REG, VXWD(m,r,s) * [qxs(m,r,s) + pfob(m,r,s)])
   2768           + VST(m,r) * [qst(m,r) + pm(m,r)];
   2769   Equation VREGEX_ir_NMRG
   2770   # the change in FOB value of exports of commodity i from r (HT 73) #
   2771   (all,i,NMRG_COMM)(all,r,REG)
   2772       VXW(i,r) * vxwfob(i,r)
   2773           = sum(s,REG, VXWD(i,r,s) * [qxs(i,r,s) + pfob(i,r,s)]);
   2774    
   2775   Equation VREGEX_r
   2776   # computes % change in value of merchandise exports, by region (HT 75) #
   2777   (all,r,REG)
   2778       VXWREGION(r) * vxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * vxwfob(i,r));
   2779    
   2780   Variable (all,i,TRAD_COMM)
   2781       vxwcom(i) # value of global merchandise exports by commodity #;
   2782   Equation VWLDEX_i
   2783   # computes % change in FOB value of global exports, by commodity (HT 77) #
   2784   (all,i,TRAD_COMM)
   2785       VXWCOMMOD(i) * vxwcom(i) = sum(r,REG, VXW(i,r) * vxwfob(i,r));
   2786    
   2787   Variable
   2788       vxwwld # value of world trade #;
   2789   Equation VWLDEX
   2790   # computes % change in value of global exports (HT 79) #
   2791       VXWLD * vxwwld = sum(r,REG, VXWREGION(r) * vxwreg(r));
   2792    
   2793   Equation VREGIM_is
   2794   # the change in CIF value of imports of commodity i into s (HT 74) #
   2795   (all,i,TRAD_COMM)(all,s,REG)
   2796       VIW(i,s) * viwcif(i,s)
   2797           = sum(r,REG, VIWS(i,r,s) * [pcif(i,r,s) + qxs(i,r,s)]);
   2798    
   2799   Equation VREGIM_s
   2800   # computes % change in value of imports, CIF basis, by region (HT 76) #
   2801   (all,s,REG)
   2802       VIWREGION(s) * viwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * viwcif(i,s));
   2803    
   2804   Variable (all,i,TRAD_COMM)
   2805       viwcom(i) # value of global merchandise imports i, at world prices #;
   2806   Equation VWLDIM_i
   2807   # computes % change in value of global imports, by commodity (HT 78) #
   2808   (all,i,TRAD_COMM)
   2809       VIWCOMMOD(i) * viwcom(i) = sum(s,REG, VIW(i,s) * viwcif(i,s));
   2810    
   2811   Variable (all,i,TRAD_COMM)
   2812       valuew(i) # value of world supply of good i #;
   2813   Equation VWLDOUT
   2814   # change in value of world output of comm. i at FOB prices (HT 80) #
   2815   (all,i,TRAD_COMM)
   2816       VWOW(i) * valuew(i) = sum(r,REG, VOW(i,r) * [pxw(i,r) + qo(i,r)]);
   2817    
   2818   Variable (all,i,TRAD_COMM)
   2819       valuewu(i) # value of world supply of good i at user prices #;
   2820   Equation VWLDOUTUSE
   2821   # change in value of world output of commodity i at user prices #
   2822   (all,i,TRAD_COMM)
   2823       VWOU(i) * valuewu(i)
   2824           = sum(s,REG, VPA(i,s) * [pp(i,s) + qp(i,s)]
   2825           + VGA(i,s) * [pg(i,s) + qg(i,s)]
   2826           + sum(j,PROD_COMM, VFA(i,j,s) * [pf(i,j,s) + qf(i,j,s)]));
   2827    
   2828   !<
   2829       Price Indices for Aggregate Trade
   2830       .................................
   2831   >!
   2832    
   2833   Equation PREGEX_ir_MARG
   2834   # change in FOB price index of exports of m from r #
   2835   (all,m,MARG_COMM)(all,r,REG)
   2836       VXW(m,r) * pxw(m,r)
   2837           = sum(s,REG, VXWD(m,r,s) * pfob(m,r,s)) + VST(m,r) * pm(m,r);
   2838    
   2839   Equation PREGEX_ir_NMRG
   2840   # change in FOB price index of exports of commodity i from r (HT 81) #
   2841   (all,i,NMRG_COMM)(all,r,REG)
   2842       VXW(i,r) * pxw(i,r) = sum(s,REG, VXWD(i,r,s) * pfob(i,r,s));
   2843    
   2844   Variable (orig_level=1.0)(all,r,REG)
   2845       pxwreg(r) # price index of merchandise exports, by region #;
   2846   Equation PREGEX_r
   2847   # computes % change in price index of exports, by region (HT 83) #
   2848   (all,r,REG)
   2849       VXWREGION(r) * pxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * pxw(i,r));
   2850    
   2851   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   2852       pxwcom(i) # price index of global merchandise exports by commodity #;
   2853   Equation PWLDEX_i
   2854   # computes % change in price index of exports, by commodity (HT 85) #
   2855   (all,i,TRAD_COMM)
   2856       VXWCOMMOD(i) * pxwcom(i) = sum(r,REG, VXW(i,r) * pxw(i,r));
   2857    
   2858   Variable (orig_level=1.0)
   2859       pxwwld # price index of world trade #;
   2860   Equation PWLDEX
   2861   # computes % change in price index of global exports (HT 87) #
   2862       VXWLD * pxwwld = sum(r,REG, VXWREGION(r) * pxwreg(r));
   2863    
   2864   Variable (all,i,TRAD_COMM)(all,r,REG)
   2865       piw(i,r) # world price of composite import i in region r #;
   2866   Equation PREGIM_is
   2867   # change in CIF price index of imports of commodity i into s (HT 82) #
   2868   (all,i,TRAD_COMM)(all,s,REG)
   2869       VIW(i,s) * piw(i,s) = sum(r,REG, VIWS(i,r,s) * pcif(i,r,s));
   2870    
   2871   Variable (orig_level=1.0)(all,r,REG)
   2872       piwreg(r) # price index of merchandise imports, by region #;
   2873   Equation PREGIM_s
   2874   # computes % change in price index of imports, by region (HT 84) #
   2875   (all,s,REG)
   2876       VIWREGION(s) * piwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * piw(i,s));
   2877    
   2878   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   2879       piwcom(i) # price index of global merchandise imports by commodity #;
   2880   Equation PWLDIM_i
   2881   # computes % change in price index of imports, by commodity (HT 86) #
   2882   (all,i,TRAD_COMM)
   2883       VIWCOMMOD(i) * piwcom(i) = sum(s,REG, VIW(i,s) * piw(i,s));
   2884    
   2885   Variable (all,i,TRAD_COMM)
   2886       pw(i) # world price index for total good i supplies #;
   2887   Equation PWLDOUT
   2888   # change in index of world prices, FOB, for total production of i (HT 88) #
   2889   (all,i,TRAD_COMM)
   2890       VWOW(i) * pw(i) = sum(r,REG, VOW(i,r) * pxw(i,r));
   2891    
   2892   Variable (orig_level=1.0)(all,i,TRAD_COMM)
   2893       pwu(i) # world price index for total good i supplies at user prices #;
   2894   Equation PWLDUSE
   2895   # change in index of user prices for deflating world production of i #
   2896   (all,i,TRAD_COMM)
   2897       VWOU(i) * pwu(i)
   2898           = sum(s,REG, VPA(i,s) * pp(i,s)
   2899           + VGA(i,s) * pg(i,s)
   2900           + sum(j,PROD_COMM, VFA(i,j,s) * pf(i,j,s)));
   2901    
   2902   !<
   2903       Quantity Indices for Aggregate Trade
   2904       ....................................
   2905   >!
   2906    
   2907   Variable (orig_level=VXW)(all,i,TRAD_COMM)(all,r,REG)
   2908       qxw(i,r) # aggregate exports of i from region r, FOB weights #;
   2909   Equation QREGEX_ir_MARG
   2910   # change in volume of exports of margin commodity m from r #
   2911   (all,m,MARG_COMM)(all,r,REG)
   2912       VXW(m,r) * qxw(m,r)
   2913           = sum(s,REG, VXWD(m,r,s) * qxs(m,r,s)) + VST(m,r) * qst(m,r);
   2914   Equation QREGEX_ir_NMRG
   2915   # change in volume of exports of non-margin commodity i from r #
   2916   (all,i,NMRG_COMM)(all,r,REG)
   2917       VXW(i,r) * qxw(i,r) = sum(s,REG, VXWD(i,r,s) * qxs(i,r,s));
   2918   !<
   2919       modified from HT 89 for use with AnalyzeGE
   2920   >!
   2921    
   2922   Variable (orig_level=VXWREGION)(all,r,REG)
   2923       qxwreg(r) # volume of merchandise exports, by region #;
   2924   Equation QREGEX_r
   2925   # computes % change in quantity index of exports, by region #
   2926   (all,r,REG)
   2927       VXWREGION(r) * qxwreg(r) = sum(i,TRAD_COMM, VXW(i,r) * qxw(i,r));
   2928   !<
   2929       modified from HT 91 for use with AnalyzeGE
   2930   >!
   2931    
   2932   Variable (orig_level=VXWCOMMOD)(all,i,TRAD_COMM)
   2933       qxwcom(i) # volume of global merchandise exports by commodity #;
   2934   Equation QWLDEX_i
   2935   # computes % change in quantity index of exports, by commodity #
   2936   (all,i,TRAD_COMM)
   2937       VXWCOMMOD(i) * qxwcom(i) = sum(r,REG, VXW(i,r) * qxw(i,r));
   2938   !<
   2939       modified from HT 93 for use with AnalyzeGE
   2940   >!
   2941    
   2942   Variable (orig_level=VXWLD)
   2943       qxwwld # volume of world trade #;
   2944   Equation QWLDEX
   2945   # computes % change in quantity index of global exports #
   2946       VXWLD * qxwwld = sum(r,REG, VXWREGION(r) * qxwreg(r));
   2947   !<
   2948       modified from HT 95 for use with AnalyzeGE
   2949   >!
   2950    
   2951   Variable (all,i,TRAD_COMM)(all,s,REG)
   2952       qiw(i,s) # aggregate imports of i into region s, CIF weights #;
   2953   Equation QREGIM_is
   2954   # change in volume of imports of commodity i into s #
   2955   (all,i,TRAD_COMM)(all,s,REG)
   2956       VIW(i,s) * qiw(i,s) = sum(r,REG, VIWS(i,r,s) * qxs(i,r,s));
   2957   !<
   2958       modified from HT 90 for use with AnalyzeGE
   2959   >!
   2960    
   2961   Variable (orig_level=VIWREGION)(all,r,REG)
   2962       qiwreg(r) # volume of merchandise imports, by region #;
   2963   Equation QREGIM_s
   2964   # computes % change in quantity index of imports, by region #
   2965   (all,s,REG)
   2966       VIWREGION(s) * qiwreg(s) = sum(i,TRAD_COMM, VIW(i,s) * qiw(i,s));
   2967   !<
   2968       modified from HT 92 for use with AnalyzeGE
   2969   >!
   2970    
   2971   Variable (orig_level=VIWCOMMOD)(all,i,TRAD_COMM)
   2972       qiwcom(i) # volume of global merchandise imports by commodity #;
   2973   Equation QWLDIM_i
   2974   # computes % change in quantity index of imports, by commodity #
   2975   (all,i,TRAD_COMM)
   2976       VIWCOMMOD(i) * qiwcom(i) = sum(s,REG, VIW(i,s) * qiw(i,s));
   2977   !<
   2978       modified from HT 94 for use with AnalyzeGE
   2979   >!
   2980    
   2981   Variable (all,i,TRAD_COMM)
   2982       qow(i) # quantity index for world supply of good i #;
   2983   Equation QWLDOUT
   2984   # change in index of world production of i #
   2985   (all,i,TRAD_COMM)
   2986       VWOW(i) * qow(i) = sum(r,REG, VOW(i,r) * qo(i,r));
   2987   !<
   2988       modified from HT 96 for use with AnalyzeGE
   2989   >!
   2990    
   2991   Variable (orig_level=VWOU)(all,i,TRAD_COMM)
   2992       qowu(i) # quantity index for world supply of good i at user prices #;
   2993   Equation QWLDOUTU
   2994   # change in index of world production of i evaluated at user prices #
   2995   (all,i,TRAD_COMM)
   2996       VWOU(i) * qowu(i)
   2997           = sum(s,REG, VPA(i,s) * qp(i,s)
   2998           + VGA(i,s) * qg(i,s)
   2999           + sum(j,PROD_COMM, VFA(i,j,s) * qf(i,j,s)));
   3000    
   3001   !<
   3002       A-5. Trade Balance Indices
   3003       --------------------------
   3004   >!
   3005    
   3006   Variable (change)(all,i,TRAD_COMM)(all,r,REG)
   3007       DTBALi(i,r) # change in trade balance by i and by r, $ US million #;
   3008   !<
   3009       A positive value indicates that the change in exports exceeds the change
   3010       in imports.
   3011   >!
   3012   Equation TRADEBAL_i
   3013   # computes change in trade balance by commodity and by region (HT 97) #
   3014   (all,i,TRAD_COMM)(all,r,REG)
   3015       DTBALi(i,r)
   3016           = [VXW(i,r) / 100] * vxwfob(i,r) - [VIW(i,r) / 100] * viwcif(i,r);
   3017    
   3018   Variable (change)(all,r,REG)
   3019       DTBAL(r) # change in trade balance X - M, $ US million #;
   3020   Equation TRADEBALANCE
   3021   # computes change in trade balance (X - M), by region (HT 98) #
   3022   (all,r,REG)
   3023       DTBAL(r)
   3024           = [VXWREGION(r) / 100] * vxwreg(r) - [VIWREGION(r) / 100] * viwreg(r);
   3025    
   3026   !<
   3027       In order to maintain homogeneity in the presence of a fixed trade balance,
   3028       it is useful to have a nominal variable which this is measured against.
   3029       The next equation provides this, and we recommend users fix DTBALR instead
   3030       of fixing DTBAL in future simulations.  The strategy is the same one used
   3031       above for taxes.
   3032   >!
   3033    
   3034   Coefficient (all,r,REG)
   3035       TBAL(r) # trade balance for region r #;
   3036   Formula (all,r,REG)
   3037       TBAL(r) = VXWREGION(r) - VIWREGION(r);
   3038    
   3039   Variable (change)(all,r,REG)
   3040       DTBALR(r) # change in ratio of trade balance to regional income #;
   3041   Equation DTBALRATIO
   3042   # change in ratio of trade balance to regional income #
   3043   (all,r,REG)
   3044       100 * INCOME(r) * DTBALR(r) = 100 * DTBAL(r) - TBAL(r) * y(r);
   3045    
   3046   !<
   3047       -----------------------
   3048       B. Equivalent Variation
   3049       -----------------------
   3050    
   3051       B-0. Appendix-Specific Variables and Coefficients
   3052       B-1. Government Consumption Shadow Demand System
   3053       B-2. Private Consumption Shadow Demand System
   3054       B-3. Regional Household Shadow Demand System
   3055       B-4. Equivalent Variation
   3056    
   3057       This appendix calculates equivalent variation "EV" and world equivalent
   3058       variation, "WEV", by determining the income "yev" that would be required
   3059       to achieve the current actual utility level "u" in a shadow demand system
   3060       in which prices are fixed.
   3061    
   3062       Section B-2 calculates the utility elasticity of private consumption
   3063       expenditure, "ueprivev", within a shadow demand system for private
   3064       consumption, for use in section B-3.  B-3 calculates private consumption
   3065       expenditure "ypev" for use in B-2, and regional income "yev" for use in
   3066       B-4, within a shadow demand system for the regional household.  B-4
   3067       calculates "EV" and "WEV".
   3068   >!
   3069    
   3070   !<
   3071       B-0. Appendix-Specific Variables and Coefficients
   3072       -------------------------------------------------
   3073    
   3074       only used in this Equivalent Variation section of the Summary Indices
   3075       appendix
   3076   >!
   3077    
   3078   Variable (all,r,REG)
   3079       uelasev(r)
   3080       # elasticity of cost of utility wrt utility, for EV calc. #;
   3081   Variable (all,r,REG)
   3082       ueprivev(r)
   3083       # utility elasticity of private consn expenditure, for EV calc. #;
   3084   Variable (all,r,REG)
   3085       ugev(r) # per capita utility from gov't expend., for EV calc. #;
   3086   Variable (all,r,REG)
   3087       upev(r) # per capita utility from private expend., for EV calc. #;
   3088   Variable (all,r,REG)
   3089       qsaveev(r) # total quantity of savings demanded, for EV calc. #;
   3090   Variable (all,r,REG)
   3091       yev(r) # regional household income in region r, for EV calc. #;
   3092   Variable (all,r,REG)
   3093       ypev(r)
   3094       # private consumption expenditure in region r, for EV calc. #;
   3095   Variable (all,r,REG)
   3096       ygev(r)
   3097       # government consumption expenditure in region r, for EV calc. #;
   3098    
   3099   Coefficient (all,r,REG)
   3100       INCOMEEV(r) # regional income, for EV calc. #;
   3101   Formula (initial) (all,r,REG)
   3102       INCOMEEV(r) = INCOME(r);
   3103   Update (all,r,REG)
   3104       INCOMEEV(r) = yev(r);
   3105    
   3106   Coefficient (all,r,REG)
   3107       UTILPRIVEV(r) # utility from private consumption, for EV calcs #;
   3108   Formula (initial) (all,r,REG)
   3109       UTILPRIVEV(r) = UTILPRIV(r);
   3110   Update (all,r,REG)
   3111       UTILPRIVEV(r) = upev(r);
   3112    
   3113   Coefficient (all,r,REG)
   3114       UTILGOVEV(r) # utility from private consumption, for EV calcs #;
   3115   Formula (initial) (all,r,REG)
   3116       UTILGOVEV(r) = UTILGOV(r);
   3117   Update (all,r,REG)
   3118       UTILGOVEV(r) = ugev(r);
   3119    
   3120   Coefficient (all,r,REG)
   3121       UTILSAVEEV(r) # utility from private consumption, for EV calcs #;
   3122   Formula (initial) (all,r,REG)
   3123       UTILSAVEEV(r) = UTILSAVE(r);
   3124   Update (change) (all,r,REG)
   3125       UTILSAVEEV(r) = [[qsaveev(r) - pop(r)] / 100] * UTILSAVEEV(r);
   3126    
   3127   !<
   3128       B-1. Government Consumption Shadow Demand System
   3129       ------------------------------------------------
   3130   >!
   3131    
   3132   Equation GOVUSHD
   3133   # utility from government consumption in r #
   3134   (all,r,REG)
   3135       ygev(r) - pop(r) = ugev(r);
   3136    
   3137   !<
   3138       B-2. Private Consumption Shadow Demand System
   3139       ---------------------------------------------
   3140   >!
   3141    
   3142   Variable (all,i,TRAD_COMM)(all,r,REG)
   3143       qpev(i,r)
   3144       # private hhld demand for commodity i in region r, for EV calc. #;
   3145    
   3146   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3147       VPAEV(i,r)
   3148       # private hhld expend. on i in r valued at agent's prices, for EV calc. #;
   3149   Formula (initial) (all,i,TRAD_COMM)(all,r,REG)
   3150       VPAEV(i,r) = VPA(i,r);
   3151   Update (all,i,TRAD_COMM)(all,r,REG)
   3152       VPAEV(i,r) = qpev(i,r);
   3153    
   3154   Coefficient (all,r,REG)
   3155       VPAREGEV(r) # private consumption expenditure in region r, for EV calc. #;
   3156   Formula (all,r,REG)
   3157       VPAREGEV(r) = sum(i,TRAD_COMM, VPAEV(i,r));
   3158   !<
   3159       VPAREGEV should agree with PRIVEXPEV.
   3160   >!
   3161    
   3162   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3163       CONSHREV(i,r)
   3164       # share of private hhld consn devoted to good i in r, for EV calc. #;
   3165   Formula (all,i,TRAD_COMM)(all,r,REG)
   3166       CONSHREV(i,r) = VPAEV(i,r) / VPAREGEV(r);
   3167   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3168       EYEV(i,r)
   3169       # expend. elast. of private hhld demand for i in r, for EV calc. #;
   3170   Formula (all,i,TRAD_COMM)(all,r,REG)
   3171       EYEV(i,r)
   3172           = [1.0 / sum(n,TRAD_COMM, CONSHREV(n,r) * INCPAR(n,r))]
   3173           * [INCPAR(i,r) * [1.0 - ALPHA(i,r)]
   3174               + sum(n,TRAD_COMM, CONSHREV(n,r) * INCPAR(n,r) * ALPHA(n,r))]
   3175           + ALPHA(i,r)
   3176           - sum(n,TRAD_COMM, CONSHREV(n,r) * ALPHA(n,r));
   3177    
   3178   Equation PRIVDMNDSEV
   3179       # private hhld demands for composite commodities, for EV calc. #
   3180       (all,i,TRAD_COMM)(all,r,REG)
   3181       qpev(i,r) - pop(r) = EYEV(i,r) * [ypev(r) - pop(r)];
   3182   !<
   3183       Prices are held constant for the EV calculation and so do not appear here.
   3184   >!
   3185    
   3186   Coefficient (all,r,REG)
   3187       UELASPRIVEV(r)
   3188       # elast. of cost wrt utility from private consn, for EV calc. #;
   3189   Formula (all,r,REG)
   3190       UELASPRIVEV(r) = sum(i,TRAD_COMM, CONSHREV(i,r) * INCPAR(i,r));
   3191    
   3192   Equation PRIVATEUEV
   3193   # computation of utility from private consumption in r (HT 45) #
   3194   (all,r,REG)
   3195       ypev(r) - pop(r) = UELASPRIVEV(r) * upev(r);
   3196    
   3197   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3198       XWCONSHREV(i,r)
   3199       # expansion-parameter-weighted consumption share, for EV calc. #;
   3200   Formula (all,i,TRAD_COMM)(all,r,REG)
   3201       XWCONSHREV(i,r) = CONSHREV(i,r) * INCPAR(i,r) / UELASPRIVEV(r);
   3202    
   3203   Equation UTILELASPRIVEV
   3204       # elasticity of cost wrt utility from private consn, for EV calc. #
   3205       (all,r,REG)
   3206       ueprivev(r)
   3207           = sum(i,TRAD_COMM, XWCONSHREV(i,r) * [qpev(i,r) - ypev(r)]);
   3208   !<
   3209       Prices are held constant for the EV calculation and so do not appear here.
   3210   >!
   3211    
   3212   !<
   3213    
   3214       B-3. Regional Household Shadow Demand System
   3215       --------------------------------------------
   3216   >!
   3217    
   3218   Variable (all,r,REG)
   3219       ysaveev(r) # NET savings expenditure, for EV calc. #;
   3220    
   3221   Coefficient (all,r,REG)
   3222       PRIVEXPEV(r)
   3223       # private consumption expenditure in region r, for EV calc. #;
   3224   Formula (initial) (all,r,REG)
   3225       PRIVEXPEV(r) = PRIVEXP(r);
   3226   Update (all,r,REG)
   3227       PRIVEXPEV(r) = ypev(r);
   3228   !<
   3229       PRIVEXPEV should agree with VPAREGEV.
   3230   >!
   3231    
   3232   Coefficient (all,r,REG)
   3233       GOVEXPEV(r)
   3234       # government consumption expenditure in region r, for EV calc. #;
   3235   Formula (initial) (all,r,REG)
   3236       GOVEXPEV(r) = GOVEXP(r);
   3237   Update (all,r,REG)
   3238       GOVEXPEV(r) = ygev(r);
   3239    
   3240   Coefficient (all,r,REG)
   3241       SAVEEV(r)
   3242       # saving in region r, for EV calc. #;
   3243   Formula (initial) (all,r,REG)
   3244       SAVEEV(r) = SAVE(r);
   3245   Update (all,r,REG)
   3246       SAVEEV(r) = ysaveev(r);
   3247    
   3248   Coefficient (all,r,REG)
   3249       XSHRPRIVEV(r)
   3250       # private expenditure share in regional income, for EV calc. #;
   3251   Formula (all,r,REG)
   3252       XSHRPRIVEV(r) = PRIVEXPEV(r) / INCOMEEV(r);
   3253    
   3254   Coefficient (all,r,REG)
   3255       XSHRGOVEV(r)
   3256       # government expenditure share in regional income, for EV calc. #;
   3257   Formula (all,r,REG)
   3258       XSHRGOVEV(r) = GOVEXPEV(r) / INCOMEEV(r);
   3259    
   3260   Coefficient (all,r,REG)
   3261       XSHRSAVEEV(r) # saving share in regional income, for EV calc. #;
   3262   Formula (all,r,REG)
   3263       XSHRSAVEEV(r) = SAVEEV(r) / INCOMEEV(r);
   3264    
   3265   Variable (all,r,REG)
   3266       dpavev(r) # average distribution parameter shift, for EV calc. #;
   3267   Equation DPARAVEV
   3268   # average distribution parameter shift, for EV calc. #
   3269       (all,r,REG)
   3270       dpavev(r)
   3271           = XSHRPRIVEV(r) * dppriv(r)
   3272           + XSHRGOVEV(r) * dpgov(r)
   3273           + XSHRSAVEEV(r) * dpsave(r);
   3274    
   3275   Equation UTILITELASTICEV
   3276       # elasticity of cost of utility wrt utility, for EV calc. #
   3277       (all,r,REG)
   3278       uelasev(r) = XSHRPRIV(r) * ueprivev(r) - dpavev(r);
   3279    
   3280   Equation PCONSEXPEV
   3281   # private consumption expenditure, for EV calc. #
   3282       (all,r,REG)
   3283       ypev(r) - yev(r) = -[ueprivev(r) - uelasev(r)] + dppriv(r);
   3284    
   3285   Equation GOVCONSEXPEV
   3286   # government consumption expenditure #
   3287   (all,r,REG)
   3288       ygev(r) - yev(r) = uelasev(r) + dpgov(r);
   3289    
   3290   Equation SAVINGEV
   3291   # saving #
   3292   (all,r,REG)
   3293       ysaveev(r) - yev(r) = uelasev(r) + dpsave(r);
   3294    
   3295   Equation SAVEUEV
   3296   # saving #
   3297   (all,r,REG)
   3298       qsaveev(r) = ysaveev(r);
   3299    
   3300   !<
   3301       Note that because psave doesn't change, qsaveev moves with ysaveev.
   3302   >!
   3303    
   3304   Coefficient (all,r,REG)
   3305       UTILELASEV(r)
   3306       # elasticity of cost of utility wrt utility, for EV calc. #;
   3307   Formula (initial) (all,r,REG)
   3308       UTILELASEV(r) = UTILELAS(r);
   3309   Update (all,r,REG)
   3310       UTILELASEV(r) = uelasev(r);
   3311    
   3312   Equation INCOME_EQUIV
   3313   # equivalent income #
   3314   (all,r,REG)
   3315       u(r)
   3316           = au(r)
   3317           + DPARPRIV(r) * loge(UTILPRIVEV(r)) * dppriv(r)
   3318           + DPARGOV(r) * loge(UTILGOVEV(r)) * dpgov(r)
   3319           + DPARSAVE(r) * loge(UTILSAVEEV(r)) * dpsave(r)
   3320           + [1.0 / UTILELASEV(r)] * [yev(r) - pop(r)];
   3321    
   3322   !<
   3323       B-4. Equivalent Variation
   3324       -------------------------
   3325   >!
   3326    
   3327   Variable (change)(all,r,REG)
   3328       EV(r) # equivalent variation, $ US million #;
   3329   Equation EVREG
   3330   # regional EV (HT 67) #
   3331   (all,r,REG)
   3332       EV(r) = [INCOMEEV(r) / 100] * yev(r);
   3333    
   3334   Variable (change)
   3335       WEV # equivalent variation for the world #;
   3336   Equation EVWLD
   3337   # EV for the world (HT 68) #
   3338       WEV = sum(r,REG, EV(r));
   3339    
   3340   !<
   3341       ------------------------
   3342       C. Welfare Decomposition
   3343       ------------------------
   3344       See GTAP Technical Paper No. 5 for derivation and interpretation.
   3345   >!
   3346    
   3347   Coefficient (all,r,REG)
   3348       EVSCALFACT(r) # equivalent variation scaling factor #;
   3349   Formula (all,r,REG)
   3350       EVSCALFACT(r) = [UTILELASEV(r) / UTILELAS(r)] * [INCOMEEV(r) / INCOME(r)];
   3351    
   3352   Coefficient (all,m,MARG_COMM)(all,s,REG)
   3353       VTMD(m,s) # aggregate value of svce m in shipments to s #;
   3354   Formula (all,m,MARG_COMM)(all,s,REG)
   3355       VTMD(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));
   3356    
   3357   Variable (linear,change)(all,r,REG)
   3358       EV_ALT(r) # regional EV computed in alternative way #;
   3359   Equation EV_DECOMPOSITION
   3360   # decomposition of Equivalent Variation #
   3361   (all,r,REG)
   3362       EV_ALT(r)
   3363           = -[0.01 * UTILELASEV(r) * INCOMEEV(r)]
   3364           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3365               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3366               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)]
   3367           + [0.01 * EVSCALFACT(r)]
   3368           * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
   3369               + sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3370                   ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
   3371               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3372                   IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)]))
   3373               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3374                   DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)]))
   3375               + sum(i,TRAD_COMM, IPTAX(i,r) * [qpm(i,r) - pop(r)])
   3376               + sum(i,TRAD_COMM, DPTAX(i,r) * [qpd(i,r) - pop(r)])
   3377               + sum(i,TRAD_COMM, IGTAX(i,r) * [qgm(i,r) - pop(r)])
   3378               + sum(i,TRAD_COMM, DGTAX(i,r) * [qgd(i,r) - pop(r)])
   3379               + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
   3380               + sum(i,TRAD_COMM, sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))
   3381               + sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
   3382               - VDEP(r) * [kb(r) - pop(r)]
   3383               + sum(i,PROD_COMM, VOA(i,r) * ao(i,r))
   3384               + sum(j,PROD_COMM, VVA(j,r) * ava(j,r))
   3385               + sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)))
   3386               + sum(j,PROD_COMM, sum(i,TRAD_COMM, VFA(i,j,r) * af(i,j,r)))
   3387               + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3388                   VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
   3389               + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))
   3390               + sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * pfob(i,r,s)))
   3391               + sum(m,MARG_COMM, VST(m,r) * pm(m,r))
   3392               + NETINV(r) * pcgds(r)
   3393               - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * pfob(i,s,r)))
   3394               - sum(m,MARG_COMM, VTMD(m,r) * pt(m))
   3395               - SAVE(r) * psave(r)]
   3396           + 0.01 * INCOMEEV(r) * pop(r);
   3397    
   3398   Variable (linear,change)
   3399       WEV_ALT # expression for WEV computed in alternative way #;
   3400   Equation WORLDEV
   3401   # Equivalent Variation for the world #
   3402       WEV_ALT = sum(r,REG, EV_ALT(r));
   3403    
   3404   Variable (linear,change) (all,r,REG)
   3405       CNTdpar(r) # contribution to EV of change in distribution parameters #;
   3406   Equation CNT_WEV_dpar
   3407   (all,r,REG)
   3408       CNTdpar(r)
   3409           = -0.01 * UTILELASEV(r) * INCOMEEV(r)
   3410           * [DPARPRIV(r) * loge(UTILPRIVEV(r) / UTILPRIV(r)) * dppriv(r)
   3411               + DPARGOV(r) * loge(UTILGOVEV(r) / UTILGOV(r)) * dpgov(r)
   3412               + DPARSAVE(r) * loge(UTILSAVEEV(r) / UTILSAVE(r)) * dpsave(r)];
   3413    
   3414   Variable (linear,change) (all,r,REG)
   3415       CNTpopr(r) # contribution to EV in region r of change in population #;
   3416   Equation CONT_EV_pop
   3417   (all,r,REG)
   3418       CNTpopr(r) = 0.01 * INCOMEEV(r) * pop(r);
   3419    
   3420   Variable (linear,change) (all,r,REG)
   3421       CNTqor(r) # contribution to EV in region r of output changes #;
   3422   Equation CONT_EV_qor
   3423   (all,r,REG)
   3424       CNTqor(r)
   3425           = sum(i,NSAV_COMM,
   3426               0.01 * EVSCALFACT(r) * PTAX(i,r) * [qo(i,r) - pop(r)]);
   3427    
   3428   Variable (linear,change) (all,i,NSAV_COMM)(all,r,REG)
   3429       CNTqoir(i,r)
   3430       # contribution to EV of changes in output of NSAV_COMM i in reg. r #;
   3431   Equation CONT_EV_qoir
   3432   (all,i,NSAV_COMM)(all,r,REG)
   3433       CNTqoir(i,r) = PTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qo(i,r) - pop(r)];
   3434    
   3435   Variable (linear,change) (all,r,REG)
   3436       CNTqfer(r)
   3437       # cont. to EV of changes in use of all ENDW_COMM in all ind. in reg. r #;
   3438   Equation CONT_EV_qfer
   3439   (all,r,REG)
   3440       CNTqfer(r)
   3441           = sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3442               ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]));
   3443    
   3444   Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
   3445       CNTqfeir(i,r)
   3446       # contribution to EV of changes in use of ENDW_COMM i in all ind. in r #;
   3447   Equation CONT_EV_qfeir
   3448   (all,i,ENDW_COMM)(all,r,REG)
   3449       CNTqfeir(i,r)
   3450           = sum(j,PROD_COMM,
   3451               ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)]);
   3452    
   3453   Variable (linear,change) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3454       CNTqfeijr(i,j,r)
   3455       # cont. to EV of changes in use of ENDW_COMM i in ind. j of reg. r #;
   3456   Equation CONT_EV_qfeijr
   3457   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3458       CNTqfeijr(i,j,r)
   3459           = ETAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfe(i,j,r) - pop(r)];
   3460    
   3461   Variable (linear,change) (all,r,REG)
   3462       CNTqfmr(r)
   3463       # cont. to EV of changes in use of imported int. in all ind. in reg. r #;
   3464   Equation CONT_EV_qfmr
   3465   (all,r,REG)
   3466       CNTqfmr(r)
   3467           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3468               IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)]));
   3469    
   3470   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3471       CNTqfmir(i,r)
   3472       # cont. to EV of changes in use of imported int. i in all ind. in r #;
   3473   Equation CONT_EV_qfmir
   3474   (all,i,TRAD_COMM)(all,r,REG)
   3475       CNTqfmir(i,r)
   3476           = sum(j,PROD_COMM,
   3477               IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)]);
   3478    
   3479   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3480       CNTqfmijr(i,j,r)
   3481       # cont. to EV of changes in use of imported int. i in ind. j of reg. r #;
   3482   Equation CONT_EV_qfmijr
   3483   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3484       CNTqfmijr(i,j,r)
   3485           = IFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfm(i,j,r) - pop(r)];
   3486    
   3487   Variable (linear,change) (all,r,REG)
   3488       CNTqfdr(r)
   3489       # cont. to EV of changes in use of domestic int. in all ind. in reg. r #;
   3490   Equation CONT_EV_qfdr
   3491   (all,r,REG)
   3492       CNTqfdr(r)
   3493           = sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3494               DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)]));
   3495    
   3496   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3497       CNTqfdir(i,r)
   3498       # contribution to EV of changes in use of domestic i in all ind. in r #;
   3499   Equation CONT_EV_qfdir
   3500   (all,i,TRAD_COMM)(all,r,REG)
   3501       CNTqfdir(i,r)
   3502           = sum(j,PROD_COMM,
   3503               DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)]);
   3504    
   3505   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3506       CNTqfdijr(i,j,r)
   3507       # cont. to EV of changes in use of domestic int. i in ind. j of reg. r #;
   3508   Equation CONT_EV_qfdijr
   3509   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3510       CNTqfdijr(i,j,r)
   3511           = DFTAX(i,j,r) * [0.01 * EVSCALFACT(r)] * [qfd(i,j,r) - pop(r)];
   3512    
   3513   Variable (linear,change) (all,r,REG)
   3514       CNTqpmr(r)
   3515       # contribution to EV of changes in consumption of imported goods in r #;
   3516   Equation CONT_EV_qpmr
   3517   (all,r,REG)
   3518       CNTqpmr(r)
   3519           = sum(i,TRAD_COMM,
   3520               IPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpm(i,r) - pop(r)]);
   3521    
   3522   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3523       CNTqpmir(i,r)
   3524       # cont. to EV of changes in consumption of imported good i in reg. r #;
   3525   Equation CONT_EV_qpmir
   3526   (all,i,TRAD_COMM)(all,r,REG)
   3527       CNTqpmir(i,r) = IPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpm(i,r) - pop(r)];
   3528    
   3529   Variable (linear,change) (all,r,REG)
   3530       CNTqpdr(r)
   3531       # contribution to EV of changes in consumption of domestic goods in r #;
   3532   Equation CONT_EV_qpdr
   3533   (all,r,REG)
   3534       CNTqpdr(r)
   3535           = sum(i,TRAD_COMM,
   3536               DPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpd(i,r) - pop(r)]);
   3537    
   3538   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3539       CNTqpdir(i,r)
   3540       # cont. to EV of changes in consumption of domestic good i in reg. r #;
   3541   Equation CONT_EV_qpdir
   3542   (all,i,TRAD_COMM)(all,r,REG)
   3543       CNTqpdir(i,r) = DPTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qpd(i,r) - pop(r)];
   3544    
   3545   Variable (linear,change) (all,r,REG)
   3546       CNTqgmr(r)
   3547       # cont. to EV of changes in gov't consumption of imports in reg. r #;
   3548   Equation CONT_EV_qgmr
   3549   (all,r,REG)
   3550       CNTqgmr(r)
   3551           = sum(i,TRAD_COMM,
   3552               IGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgm(i,r) - pop(r)]);
   3553    
   3554   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3555       CNTqgmir(i,r)
   3556       # cont. to EV of changes in gov't consumption of import i in reg. r #;
   3557   Equation CONT_EV_qgmir
   3558   (all,i,TRAD_COMM)(all,r,REG)
   3559       CNTqgmir(i,r) = IGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgm(i,r) - pop(r)];
   3560    
   3561   Variable (linear,change) (all,r,REG)
   3562       CNTqgdr(r)
   3563       # cont. to EV of changes in gov't consumption of domestics in reg. r #;
   3564   Equation CONT_EV_qgdr
   3565   (all,r,REG)
   3566       CNTqgdr(r)
   3567           = sum(i,TRAD_COMM,
   3568               DGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgd(i,r) - pop(r)]);
   3569    
   3570   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)
   3571       CNTqgdir(i,r)
   3572       # cont. to EV of changes in gov't consumption of domestic i in reg. r #;
   3573   Equation CONT_EV_qgdir
   3574   (all,i,TRAD_COMM)(all,r,REG)
   3575       CNTqgdir(i,r) = DGTAX(i,r) * [0.01 * EVSCALFACT(r)] * [qgd(i,r) - pop(r)];
   3576    
   3577   Variable (linear,change) (all,r,REG)
   3578       CNTqxsr(r)
   3579       # cont. to EV of changes in exports of all goods from SRCE r to all DEST #;
   3580   Equation CONT_EV_qxsr
   3581   (all,r,REG)
   3582       CNTqxsr(r)
   3583           = sum(i,TRAD_COMM, sum(s,REG,
   3584               XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)]));
   3585    
   3586   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3587       CNTqxsirs(i,r,s)
   3588       # cont. to EV of changes in exports of i from SRCE r to DEST s #;
   3589   Equation CONT_EV_qxsirs
   3590   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3591       CNTqxsirs(i,r,s)
   3592           = XTAXD(i,r,s) * [0.01 * EVSCALFACT(r)] * [qxs(i,r,s) - pop(r)];
   3593    
   3594   Variable (linear,change) (all,r,REG)
   3595       CNTqimr(r)
   3596       # cont. to EV of changes in imports of all goods from all SRCE to DEST r #;
   3597   Equation CONT_EV_qimr
   3598   (all,r,REG)
   3599       CNTqimr(r)
   3600           = sum(i,TRAD_COMM, sum(s,REG,
   3601               MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)]));
   3602    
   3603   Variable (linear,change) (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
   3604       CNTqimisr(i,s,r)
   3605       # cont. to EV of changes in imports of i from SRCE s to DEST r #;
   3606   Equation CONT_EV_qimisr
   3607   (all,i,TRAD_COMM)(all,s,REG)(all,r,REG)
   3608       CNTqimisr(i,s,r)
   3609           = MTAX(i,s,r) * [0.01 * EVSCALFACT(r)] * [qxs(i,s,r) - pop(r)];
   3610    
   3611   Variable (linear,change) (all,r,REG)
   3612       CNTalleffr(r) # total contribution to regional EV of allocative effects #;
   3613   Equation CONT_EV_alleffr
   3614   (all,r,REG)
   3615       CNTalleffr(r)
   3616           = [0.01 * EVSCALFACT(r)]
   3617           * [sum(i,NSAV_COMM, PTAX(i,r) * [qo(i,r) - pop(r)])
   3618               + sum(i,ENDW_COMM, sum(j,PROD_COMM,
   3619                   ETAX(i,j,r) * [qfe(i,j,r) - pop(r)]))
   3620               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3621                   IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)]))
   3622               + sum(i,TRAD_COMM, sum(j,PROD_COMM,
   3623                   DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)]))
   3624               + sum(i,TRAD_COMM, IPTAX(i,r) * [qpm(i,r) - pop(r)])
   3625               + sum(i,TRAD_COMM, DPTAX(i,r) * [qpd(i,r) - pop(r)])
   3626               + sum(i,TRAD_COMM, IGTAX(i,r) * [qgm(i,r) - pop(r)])
   3627               + sum(i,TRAD_COMM, DGTAX(i,r) * [qgd(i,r) - pop(r)])
   3628               + sum(i,TRAD_COMM, sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)]))
   3629               + sum(i,TRAD_COMM, sum(s,REG,
   3630                   MTAX(i,s,r) * [qxs(i,s,r) - pop(r)]))];
   3631    
   3632   Variable (linear,change) (all,i,DEMD_COMM)(all,r,REG)
   3633       CNTalleffir(i,r)
   3634       # total contribution to regional EV of allocative effects #;
   3635   Equation CONT_EV_alleffir_E
   3636   (all,i,ENDW_COMM)(all,r,REG)
   3637       CNTalleffir(i,r)
   3638           = [0.01 * EVSCALFACT(r)]
   3639           * [PTAX(i,r) * [qo(i,r) - pop(r)]
   3640               + sum(j,PROD_COMM, ETAX(i,j,r) * [qfe(i,j,r) - pop(r)])];
   3641   Equation CONT_EV_alleffir_T
   3642   (all,i,TRAD_COMM)(all,r,REG)
   3643       CNTalleffir(i,r)
   3644           = [0.01 * EVSCALFACT(r)]
   3645           * [PTAX(i,r) * [qo(i,r) - pop(r)]
   3646               + sum(j,PROD_COMM, IFTAX(i,j,r) * [qfm(i,j,r) - pop(r)])
   3647               + sum(j,PROD_COMM, DFTAX(i,j,r) * [qfd(i,j,r) - pop(r)])
   3648               + IPTAX(i,r) * [qpm(i,r) - pop(r)]
   3649               + DPTAX(i,r) * [qpd(i,r) - pop(r)]
   3650               + IGTAX(i,r) * [qgm(i,r) - pop(r)]
   3651               + DGTAX(i,r) * [qgd(i,r) - pop(r)]
   3652               + sum(s,REG, XTAXD(i,r,s) * [qxs(i,r,s) - pop(r)])
   3653               + sum(s,REG, MTAX(i,s,r) * [qxs(i,s,r) - pop(r)])];
   3654    
   3655   Variable (linear,change) (all,r,REG)
   3656       CNTtotr(r)
   3657       # contribution to regional EV of changes in its terms of trade #;
   3658   Equation CONT_EV_totr
   3659   (all,r,REG)
   3660       CNTtotr(r)
   3661           = [0.01 * EVSCALFACT(r)]
   3662           * [sum(i,TRAD_COMM, sum(s,REG, VXWD(i,r,s) * [pfob(i,r,s) - pxwwld]))
   3663               + sum(m,MARG_COMM, VST(m,r) * [pm(m,r) - pxwwld])
   3664               - sum(i,TRAD_COMM, sum(s,REG, VXWD(i,s,r) * [pfob(i,s,r) - pxwwld]))
   3665               - sum(m,MARG_COMM, VTMD(m,r) * [pt(m) - pxwwld])];
   3666    
   3667   Variable (linear,change) (all,r,REG)
   3668       CNTcgdsr(r) # contribution to regional EV of changes in the price of cgds #;
   3669   Equation CNT_EV_cgdsr
   3670   (all,r,REG)
   3671       CNTcgdsr(r)
   3672           = [0.01 * EVSCALFACT(r)]
   3673           * [NETINV(r) * [pcgds(r) - pxwwld] - SAVE(r) * [psave(r) - pxwwld]];
   3674    
   3675   Variable (linear,change) (all,r,REG)
   3676       CNTendwr(r) # contribution to regional EV of changes in all ENDW_COMM #;
   3677   Equation CONT_EV_endwr
   3678   (all,r,REG)
   3679       CNTendwr(r)
   3680           = [0.01 * EVSCALFACT(r)]
   3681           * [sum(i,ENDW_COMM, VOA(i,r) * [qo(i,r) - pop(r)])
   3682               - VDEP(r) * [kb(r) - pop(r)]];
   3683    
   3684   Variable (linear,change) (all,i,ENDW_COMM)(all,r,REG)
   3685       CNTendwir(i,r) # contribution to regional EV of changes in ENDW_COMM i #;
   3686   Equation CONT_EV_endwir
   3687   (all,i,ENDW_COMM)(all,r,REG)
   3688       CNTendwir(i,r) = [0.01 * EVSCALFACT(r)] * [VOA(i,r) * [qo(i,r) - pop(r)]];
   3689    
   3690   Variable (linear,change) (all,r,REG)
   3691       CNTtechr(r) # contribution to regional EV of all technical change #;
   3692   Equation CONT_EV_techr
   3693   (all,r,REG)
   3694       CNTtechr(r)
   3695           = [0.01 * EVSCALFACT(r)]
   3696           * [sum(i,PROD_COMM, VOA(i,r) * ao(i,r))
   3697               + sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)))
   3698               + sum(j,PROD_COMM, VVA(j,r) * ava(j,r))
   3699               + sum(j,PROD_COMM, sum(i,TRAD_COMM,
   3700                   [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r)))
   3701               + sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3702                   VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))))
   3703               + sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)))];
   3704    
   3705   Variable (linear,change) (all,r,REG)
   3706       CNTtech_aor(r)
   3707       # contribution to regional EV of output augmenting technical change #;
   3708   Equation CONT_EV_tech_aor
   3709   (all,r,REG)
   3710       CNTtech_aor(r)
   3711           = [0.01 * EVSCALFACT(r)] * sum(i,PROD_COMM, VOA(i,r) * ao(i,r));
   3712    
   3713   Variable (linear,change) (all,i,PROD_COMM)(all,r,REG)
   3714       CNTtech_aoir(i,r)
   3715       # cont. to regional EV of output augmenting tech change in TRAD_COMM i #;
   3716   Equation CONT_EV_tech_aoir
   3717   (all,i,PROD_COMM)(all,r,REG)
   3718       CNTtech_aoir(i,r) = [0.01 * EVSCALFACT(r)] * VOA(i,r) * ao(i,r);
   3719    
   3720   Variable (linear,change) (all,r,REG)
   3721       CNTtech_afer(r)
   3722       # contribution to regional EV of primary factor augmenting tech change #;
   3723   Equation CONT_EV_tech_afer
   3724   (all,r,REG)
   3725       CNTtech_afer(r)
   3726           = [0.01 * EVSCALFACT(r)]
   3727           * sum(j,PROD_COMM, sum(i,ENDW_COMM, VFA(i,j,r) * afe(i,j,r)));
   3728    
   3729   Variable (linear,change) (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3730       CNTtech_afeijr(i,j,r)
   3731       # cont. to EV of primary factor i augmenting tech change in sector j #;
   3732   Equation CONT_EV_tech_afeijr
   3733   (all,i,ENDW_COMM)(all,j,PROD_COMM)(all,r,REG)
   3734       CNTtech_afeijr(i,j,r) = [0.01 * EVSCALFACT(r)] * VFA(i,j,r) * afe(i,j,r);
   3735    
   3736   Variable (linear,change) (all,r,REG)
   3737       CNTtech_avar(r)
   3738       # contribution to regional EV of value added augmenting tech change #;
   3739   Equation CONT_EV_tech_avar
   3740   (all,r,REG)
   3741       CNTtech_avar(r)
   3742           = [0.01 * EVSCALFACT(r)] * sum(j,PROD_COMM, VVA(j,r) * ava(j,r));
   3743    
   3744   Variable (linear,change) (all,j,PROD_COMM)(all,r,REG)
   3745       CNTtech_avajr(j,r)
   3746       # cont. to EV of value added augmenting tech change in sector j #;
   3747   Equation CONT_EV_tech_avajr
   3748   (all,j,PROD_COMM)(all,r,REG)
   3749       CNTtech_avajr(j,r) = [0.01 * EVSCALFACT(r)] * VVA(j,r) * ava(j,r);
   3750    
   3751   Variable (linear,change) (all,r,REG)
   3752       CNTtech_afr(r)
   3753       # cont. to regional EV of comp. int. input augmenting tech change #;
   3754   Equation CONT_EV_tech_afr
   3755   (all,r,REG)
   3756       CNTtech_afr(r)
   3757           = [0.01 * EVSCALFACT(r)]
   3758           * sum(j,PROD_COMM, sum(i,TRAD_COMM,
   3759               [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r)));
   3760    
   3761   Variable (linear,change) (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3762       CNTtech_afijr(i,j,r)
   3763       # cont. to EV of composite i input augmenting tech change in sector j #;
   3764   Equation CONT_EV_tech_afijr
   3765   (all,i,TRAD_COMM)(all,j,PROD_COMM)(all,r,REG)
   3766       CNTtech_afijr(i,j,r)
   3767           = [0.01 * EVSCALFACT(r)] * [VIFA(i,j,r) + VDFA(i,j,r)] * af(i,j,r);
   3768    
   3769   Variable (linear,change) (all,r,REG)
   3770       CNTtech_atrr(r)
   3771       # contribution to regional EV of technical change in transportation #;
   3772   Equation CONT_EV_tech_atrr
   3773   (all,r,REG)
   3774       CNTtech_atrr(r)
   3775           = [0.01 * EVSCALFACT(r)]
   3776           * sum(m,MARG_COMM, sum(i,TRAD_COMM, sum(s,REG,
   3777               VTMFSD(m,i,s,r) * atmfsd(m,i,s,r))));
   3778    
   3779   Variable (linear,change)(all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3780       CNTtech_afmfdsd(m,i,r,s)
   3781       # cont. to EV of tech change in transportation efficiency #;
   3782   Equation CONT_EV_tech_afmfdsd
   3783   (all,m,MARG_COMM)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3784       CNTtech_afmfdsd(m,i,r,s)
   3785           = [0.01 * EVSCALFACT(s)] * VTMFSD(m,i,r,s) * atmfsd(m,i,r,s);
   3786    
   3787   Variable (linear,change)(all,r,REG)
   3788       CNTtech_amsr(r) # cont. to EV of bilateral import-augmenting tech change #;
   3789   Equation CONT_EV_tech_amsr
   3790   (all,r,REG)
   3791       CNTtech_amsr(r)
   3792           = [0.01 * EVSCALFACT(r)]
   3793           * sum(i,TRAD_COMM, sum(s,REG, VIMS(i,s,r) * ams(i,s,r)));
   3794    
   3795   Variable (linear,change) (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3796       CNTtech_amsirs(i,r,s)
   3797    # cont. to EV of bilateral import augmenting tech change for TRAD_COMM i #;
   3798   Equation CONT_EV_tech_amsirs
   3799   (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3800       CNTtech_amsirs(i,r,s) = [0.01 * EVSCALFACT(r)] * VIMS(i,r,s) * ams(i,r,s);
   3801    
   3802   Variable (linear,change) (all,r,REG)
   3803       CNTkbr(r)
   3804       # cont. to EV of changes to beg. period capital stock and depreciation #;
   3805   Equation CONT_EV_kbr
   3806   (all,r,REG)
   3807       CNTkbr(r) = - [0.01 * EVSCALFACT(r)] * VDEP(r) * [kb(r) - pop(r)];
   3808    
   3809   !<
   3810       -------------------------------
   3811       D. Terms of Trade Decomposition
   3812       -------------------------------
   3813    
   3814       Computations for decomposition the terms-of-trade effect
   3815       Reference: Robert McDougall, SALTER No. 12 Working Paper
   3816   >!
   3817    
   3818   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3819       SX_IR(i,r) # share of good i in total exports from r #;
   3820   Formula (all,m,MARG_COMM)(all,r,REG)
   3821       SX_IR(m,r)
   3822           = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
   3823           / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
   3824               + sum(l,MARG_COMM, VST(l,r))];
   3825   Formula (all,i,NMRG_COMM)(all,r,REG)
   3826       SX_IR(i,r)
   3827           = sum(s,REG, VXWD(i,r,s))
   3828           / [sum(k,TRAD_COMM, sum(s,REG, VXWD(k,r,s)))
   3829               + sum(l,MARG_COMM, VST(l,r))];
   3830    
   3831   Coefficient (all,m,MARG_COMM)(all,s,REG)
   3832       VTICOMM(m,s) # margin usage of m in getting imports to region s #;
   3833   Formula (all,m,MARG_COMM)(all,s,REG)
   3834       VTICOMM(m,s) = sum(i,TRAD_COMM, sum(r,REG, VTMFSD(m,i,r,s)));
   3835    
   3836   Coefficient (all,i,TRAD_COMM)(all,s,REG)
   3837       VIWDIRALL(i,s) # imports of i into s, with direct allocation of margins #;
   3838   Formula (all,m,MARG_COMM)(all,s,REG)
   3839       VIWDIRALL(m,s) = sum(r,REG, VXWD(m,r,s)) + VTICOMM(m,s);
   3840   Formula (all,i,NMRG_COMM)(all,s,REG)
   3841       VIWDIRALL(i,s) = sum(r,REG, VXWD(i,r,s));
   3842    
   3843   Coefficient (all,s,REG)
   3844       VIWDATOT(s) # total imports into s, calculated on direct allocation basis #;
   3845   Formula (all,s,REG)
   3846       VIWDATOT(s) = sum(i,TRAD_COMM, VIWDIRALL(i,s));
   3847    
   3848   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3849       SM_IR(i,r)  # share of good i in total imports into r #;
   3850   Formula (all,i,TRAD_COMM)(all,s,REG)
   3851       SM_IR(i,s) = VIWDIRALL(i,s) / VIWDATOT(s);
   3852    
   3853   Zerodivide (zero_by_zero) default 0;
   3854   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3855       SX_IRS(i,r,s) # share of exports of good i from region r to s #;
   3856   Formula (all,m,MARG_COMM)(all,r,REG)(all,s,REG)
   3857       SX_IRS(m,r,s) = VXWD(m,r,s) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
   3858   Formula (all,i,NMRG_COMM)(all,r,REG)(all,s,REG)
   3859       SX_IRS(i,r,s) = VXWD(i,r,s) / sum(k,REG, VXWD(i,r,k));
   3860   Zerodivide (zero_by_zero) off;
   3861    
   3862   Coefficient (all,m,MARG_COMM)(all,r,REG)
   3863       SXT_IR(m,r) # share of margins in exports of good i from region r #;
   3864   Formula (all,m,MARG_COMM)(all,r,REG)
   3865       SXT_IR(m,r) = VST(m,r) / [sum(k,REG, VXWD(m,r,k)) + VST(m,r)];
   3866    
   3867   Variable (all,i,TRAD_COMM)(all,r,REG)
   3868       px_ir(i,r) # export price index for good i and region r #;
   3869   Equation EXPPRICE_MARG
   3870   # price index for total exports of m from r #
   3871   (all,m,MARG_COMM)(all,r,REG)
   3872       px_ir(m,r)
   3873           = sum(s,REG, SX_IRS(m,r,s) * pfob(m,r,s)) + SXT_IR(m,r) * pm(m,r);
   3874   Equation EXPPRICE_NMRG
   3875   # price index for total exports of i from r #
   3876   (all,i,NMRG_COMM)(all,r,REG)
   3877       px_ir(i,r) = sum(s,REG, SX_IRS(i,r,s) * pfob(i,r,s));
   3878    
   3879   Coefficient (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3880       SM_IRS(i,r,s) # share of imports of good i into s from r at FOB prices #;
   3881   Formula (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3882       SM_IRS(i,r,s) = VXWD(i,r,s) / VIWDIRALL(i,s);
   3883    
   3884   Coefficient (all,m,MARG_COMM)(all,r,REG)
   3885       SMT_IR(m,r) # share of transport cost in imports of margin commodity #;
   3886   Formula (all,m,MARG_COMM)(all,s,REG)
   3887       SMT_IR(m,s) = VTICOMM(m,s) / VIWDIRALL(m,s);
   3888    
   3889   Variable (all,i,TRAD_COMM)(all,r,REG)
   3890       pm_ir(i,r) # imports price index for good i and region r #;
   3891   Equation IMPPRICE1_MARG
   3892   # price index for total imports of m in s -- margins commodities #
   3893   (all,m,MARG_COMM)(all,s,REG)
   3894       pm_ir(m,s)
   3895           = sum(r,REG, SM_IRS(m,r,s) * pfob(m,r,s)) + SMT_IR(m,s) * pt(m);
   3896   Equation IMPPRICE1_NMRG
   3897   # price index for total imports of i in s -- non-margins commodities #
   3898   (all,i,NMRG_COMM)(all,s,REG)
   3899       pm_ir(i,s) = sum(r,REG, SM_IRS(i,r,s) * pfob(i,r,s));
   3900    
   3901   Coefficient (all,i,TRAD_COMM)(all,r,REG)
   3902       SW_IR(i,r) # share of region r exports in world total for good i #;
   3903   Formula (all,m,MARG_COMM)(all,r,REG)
   3904       SW_IR(m,r)
   3905           = [sum(s,REG, VXWD(m,r,s)) + VST(m,r)]
   3906           / sum(k,REG, sum(s,REG, VXWD(m,k,s)) + VST(m,k));
   3907   Formula (all,i,NMRG_COMM)(all,r,REG)
   3908       SW_IR(i,r)
   3909           = sum(s,REG, VXWD(i,r,s)) / sum(k,REG, sum(s,REG, VXWD(i,k,s)));
   3910    
   3911   Variable (all,i,TRAD_COMM)
   3912       px_i(i) # world export price index for commodity i #;
   3913   Equation WRLDPRICEi
   3914   # world export price index for good i #
   3915   (all,i,TRAD_COMM)
   3916       px_i(i) = sum(r,REG, SW_IR(i,r) * px_ir(i,r));
   3917    
   3918   Coefficient (all,i,TRAD_COMM)
   3919       SW_I(i) # share of exports of i in world total #;
   3920   Formula (all,m,MARG_COMM)
   3921       SW_I(m)
   3922           = sum(r,REG, sum(s,REG, VXWD(m,r,s)) + VST(m,r))
   3923           / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
   3924               + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
   3925   Formula (all,i,NMRG_COMM)
   3926       SW_I(i)
   3927           = sum(r,REG, sum(s,REG, VXWD(i,r,s)))
   3928           / [sum(k,TRAD_COMM, sum(r,REG, sum(s,REG, VXWD(k,r,s))))
   3929               + sum(l,MARG_COMM, sum(r,REG, VST(l,r)))];
   3930    
   3931   Variable
   3932       px_ # world export price index for all commodities #;
   3933   Equation WRLDPRICE
   3934   # world export price index for all goods #
   3935       px_ = sum(i,TRAD_COMM, SW_I(i) * px_i(i));
   3936    
   3937   Variable (all,i,TRAD_COMM)(all,r,REG)
   3938       c1_ir(i,r) # contribution of world price, px_i, to ToT #;
   3939   Equation c1_irEQ
   3940   # contribution of world export price index of good i to ToT for region r #
   3941   (all,i,TRAD_COMM)(all,r,REG)
   3942       c1_ir(i,r) = [SX_IR(i,r) - SM_IR(i,r)] * [px_i(i) - px_];
   3943    
   3944   Variable (all,i,TRAD_COMM)(all,r,REG)
   3945       c2_ir(i,r) # contribution of regional export price, px_ir, to ToT #;
   3946   Equation c2_irEQ
   3947   # contribution of regional export price of good i for region r #
   3948   (all,i,TRAD_COMM)(all,r,REG)
   3949       c2_ir(i,r) = SX_IR(i,r) * [px_ir(i,r) - px_i(i)];
   3950    
   3951   Variable (all,i,TRAD_COMM)(all,r,REG)
   3952       c3_ir(i,r) # contribution of regional import price, pm_ir, to ToT #;
   3953   Equation c3_irEQ
   3954   # contribution of imports price index of good i for region r #
   3955   (all,i,TRAD_COMM)(all,r,REG)
   3956       c3_ir(i,r) = SM_IR(i,r) * [pm_ir(i,r) - px_i(i)];
   3957    
   3958   Variable (all,r,REG)
   3959       c1_r(r) # contribution of world prices for all goods to ToT #;
   3960   Equation c1_rEQ
   3961   # contribution of world price indexes of all goods to ToT for r #
   3962   (all,r,REG)
   3963       c1_r(r) = sum(i,TRAD_COMM, c1_ir(i,r));
   3964    
   3965   Variable (all,r,REG)
   3966       c2_r(r) # contribution of regional export prices to ToT #;
   3967   Equation c2_rEQ
   3968   # contribution of regional exports prices to ToT for r #
   3969   (all,r,REG)
   3970       c2_r(r) = sum(i,TRAD_COMM, c2_ir(i,r));
   3971    
   3972   Variable (all,r,REG)
   3973       c3_r(r) # contribution of regional import prices to ToT #;
   3974   Equation c3_rEQ
   3975   # contribution of regional import prices to ToT for r #
   3976   (all,r,REG)
   3977       c3_r(r) = sum(i,TRAD_COMM, c3_ir(i,r));
   3978    
   3979   Variable (all,r,REG)
   3980       tot2(r) # trade terms for region r, computed from components #;
   3981   Equation TOT2eq
   3982   # trade terms for region r, computed from components #
   3983   (all,r,REG)
   3984       tot2(r) = c1_r(r) + c2_r(r) - c3_r(r);
   3985    
   3986   !
   3987   Variable (change)(all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3988    delMTAX(i,r,s) # change in tariff rev #;
   3989   Equation E_delMTAX (all,i,TRAD_COMM)(all,r,REG)(all,s,REG)
   3990    delMTAX(i,r,s) = 0.01*[VIMS(i,r,s)*{pms(i,r,s) +qxs(i,r,s)}]
   3991                   - 0.01*[VIWS(i,r,s)*{pcif(i,r,s)+qxs(i,r,s)}];
   3992   BackSolve delMTAX using E_delMTAX;
   3993   !
   3994    
   3995   !<
   3996       ====================
   3997       END OF GTAP.TAB FILE
   3998       ====================
   3999   >!
   4000    
   4001   ![[!
   4002   Set AGGSEC # aggregated sectors # read elements from file GTAPSETS header "ASEC";
   4003   ! eg, Agriculture, Mining, Manufactures, Services !
   4004   Mapping (onto) MSEC from TRAD_COMM to AGGSEC;
   4005   Read (by_elements) MSEC from file GTAPSETS header "MSEC";
   4006    
   4007   ! style A !
   4008   Coefficient (all,a,AGGSEC)(all,r,REG) AGGVA(a,r) # Value-added by broad sector #;
   4009   Formula     (all,a,AGGSEC)(all,r,REG) AGGVA(a,r) = sum{i,TRAD_COMM:MSEC(i)=a, VVA(i,r) };
   4010   Variable    (all,a,AGGSEC)(all,r,REG) aggqo(a,r) # Broad sector output (value-added weights) #;
   4011   Equation E_aggqva (all,a,AGGSEC)(all,r,REG)
   4012     AGGVA(a,r)*aggqo(a,r) = sum{i, TRAD_COMM: MSEC(i)=a, VVA(i,r)*qo(i,r)};
   4013    
   4014   ! style B (shorter)!
   4015   Variable    (all,a,AGGSEC)(all,r,REG) aggqxw(a,r) # Exports by broad sector #;
   4016   Equation E_aggqxw (all,a,AGGSEC)(all,r,REG)
   4017     sum{i, TRAD_COMM: MSEC(i)=a, VXW(i,r)*[aggqxw(a,r)-qxw(i,r)]}=0;
   4018   !]]!
   4019   ! To make mapping:
   4020   * Open sets.har in Viewhar
   4021   * Sets..Create new set       make set AGGSEC
   4022   * Aggregation ... create mapping   from TRAD_COMM to ASEC    Viewhar will invent random mapping
   4023   * Aggregation ... choose mapping  select MSEC, go Copy..list format   then Close
   4024   * In Excel paste the (random) mapping then edit last column to be correct; select and copy this
   4025   * Aggregation ... edit mapping       paste   save
   4026    
   4027   !




 ========================
 ++ INPUT STATEMENT TABLE
 ========================

          Starts   Syntax  Semantic
  Number  at line  Error?   Error?            Description
  ------------------------------------------------------------
     1       108     no       no      FILE 'GTAPSETS'                         
     2       110     no       no      FILE 'GTAPDATA'                         
     3       112     no       no      FILE 'GTAPPARM'                         
     4       149     no       no      COEFFICIENT 'VERNUM'                    
     5       151     no       no      READ into 'VERNUM'                      
     6       153     no       no      UPDATE of 'VERNUM'                      
     7       156     no       no      SET 'REG'                               
     8       159     no       no      SET 'TRAD_COMM'                         
     9       162     no       no      SET 'MARG_COMM'                         
    10       165     no       no      SUBSET 1 'MARG_COMM' of 'TRAD_COMM'     
    11       167     no       no      SET 'NMRG_COMM'                         
    12       167     no       no      SUBSET 2 'NMRG_COMM' of 'TRAD_COMM'     
    13       169     no       no      SET 'CGDS_COMM'                         
    14       172     no       no      SET 'ENDW_COMM'                         
    15       175     no       no      SET 'PROD_COMM'                         
    16       175     no       no      SUBSET 3 'TRAD_COMM' of 'PROD_COMM'     
    17       175     no       no      SUBSET 4 'CGDS_COMM' of 'PROD_COMM'     
    18       175     no       no      SUBSET 5 'MARG_COMM' of 'PROD_COMM'     
    19       175     no       no      SUBSET 6 'NMRG_COMM' of 'PROD_COMM'     
    20       177     no       no      SET 'DEMD_COMM'                         
    21       177     no       no      SUBSET 7 'ENDW_COMM' of 'DEMD_COMM'     
    22       177     no       no      SUBSET 8 'TRAD_COMM' of 'DEMD_COMM'     
    23       177     no       no      SUBSET 9 'MARG_COMM' of 'DEMD_COMM'     
    24       177     no       no      SUBSET 10 'NMRG_COMM' of 'DEMD_COMM'    
    25       179     no       no      SET 'NSAV_COMM'                         
    26       179     no       no      SUBSET 11 'DEMD_COMM' of 'NSAV_COMM'    
    27       179     no       no      SUBSET 12 'CGDS_COMM' of 'NSAV_COMM'    
    28       179     no       no      SUBSET 13 'TRAD_COMM' of 'NSAV_COMM'    
    29       179     no       no      SUBSET 14 'MARG_COMM' of 'NSAV_COMM'    
    30       179     no       no      SUBSET 15 'NMRG_COMM' of 'NSAV_COMM'    
    31       179     no       no      SUBSET 16 'ENDW_COMM' of 'NSAV_COMM'    
    32       181     no       no      SUBSET 17 'PROD_COMM' of 'NSAV_COMM'    
    33       189     no       no      COEFFICIENT 'SIZE_TRAD'                 
    34       191     no       no      Formula for 'SIZE_TRAD'                 
    35       193     no       no      COEFFICIENT 'SIZE_ENDW'                 
    36       195     no       no      Formula for 'SIZE_ENDW'                 
    37       197     no       no      COEFFICIENT 'SIZE_DEMD'                 
    38       199     no       no      Formula for 'SIZE_DEMD'                 
    39       201     no       no      Assertion                               
    40       204     no       no      COEFFICIENT 'SIZE_CGDS'                 
    41       206     no       no      Formula for 'SIZE_CGDS'                 
    42       208     no       no      COEFFICIENT 'SIZE_PROD'                 
    43       210     no       no      Formula for 'SIZE_PROD'                 
    44       212     no       no      Assertion                               
    45       221     no       no      COEFFICIENT 'SLUG'                      
    46       223     no       no      READ into 'SLUG'                        
    47       226     no       no      SET 'ENDWS_COMM'                        
    48       226     no       no      Formula for Set 'ENDWS_COMM'            
    49       226     no       no      SUBSET 18 'ENDWS_COMM' of 'ENDW_COMM'   
    50       226     no       no      SUBSET 19 'ENDWS_COMM' of 'DEMD_COMM'   
    51       226     no       no      SUBSET 20 'ENDWS_COMM' of 'NSAV_COMM'   
    52       229     no       no      SET 'ENDWM_COMM'                        
    53       229     no       no      SUBSET 21 'ENDWM_COMM' of 'ENDW_COMM'   
    54       229     no       no      SUBSET 22 'ENDWM_COMM' of 'DEMD_COMM'   
    55       229     no       no      SUBSET 23 'ENDWM_COMM' of 'NSAV_COMM'   
    56       232     no       no      SET 'ENDWC_COMM'                        
    57       237     no       no      SUBSET 24 'ENDWC_COMM' of 'ENDW_COMM'   
    58       237     no       no      SUBSET 25 'ENDWC_COMM' of 'DEMD_COMM'   
    59       237     no       no      SUBSET 26 'ENDWC_COMM' of 'NSAV_COMM'   
    60       280     no       no      VARIABLE 'psave'                        
    61       282     no       no      VARIABLE 'qsave'                        
    62       284     no       no      COEFFICIENT 'SAVE'                      
    63       286     no       no      UPDATE of 'SAVE'                        
    64       288     no       no      READ into 'SAVE'                        
    65       296     no       no      VARIABLE 'pgd'                          
    66       298     no       no      VARIABLE 'qgd'                          
    67       300     no       no      COEFFICIENT 'VDGA'                      
    68       302     no       no      UPDATE of 'VDGA'                        
    69       304     no       no      READ into 'VDGA'                        
    70       307     no       no      VARIABLE 'pm'                           
    71       309     no       no      COEFFICIENT 'VDGM'                      
    72       311     no       no      UPDATE of 'VDGM'                        
    73       313     no       no      READ into 'VDGM'                        
    74       316     no       no      VARIABLE 'pgm'                          
    75       318     no       no      VARIABLE 'qgm'                          
    76       320     no       no      COEFFICIENT 'VIGA'                      
    77       322     no       no      UPDATE of 'VIGA'                        
    78       324     no       no      READ into 'VIGA'                        
    79       327     no       no      VARIABLE 'pim'                          
    80       329     no       no      COEFFICIENT 'VIGM'                      
    81       331     no       no      UPDATE of 'VIGM'                        
    82       333     no       no      READ into 'VIGM'                        
    83       341     no       no      VARIABLE 'ppd'                          
    84       343     no       no      VARIABLE 'qpd'                          
    85       345     no       no      COEFFICIENT 'VDPA'                      
    86       347     no       no      UPDATE of 'VDPA'                        
    87       349     no       no      READ into 'VDPA'                        
    88       352     no       no      COEFFICIENT 'VDPM'                      
    89       354     no       no      UPDATE of 'VDPM'                        
    90       356     no       no      READ into 'VDPM'                        
    91       359     no       no      VARIABLE 'ppm'                          
    92       361     no       no      VARIABLE 'qpm'                          
    93       363     no       no      COEFFICIENT 'VIPA'                      
    94       365     no       no      UPDATE of 'VIPA'                        
    95       367     no       no      READ into 'VIPA'                        
    96       370     no       no      COEFFICIENT 'VIPM'                      
    97       372     no       no      UPDATE of 'VIPM'                        
    98       374     no       no      READ into 'VIPM'                        
    99       382     no       no      VARIABLE 'ps'                           
   100       384     no       no      VARIABLE 'qo'                           
   101       386     no       no      COEFFICIENT 'EVOA'                      
   102       388     no       no      UPDATE of 'EVOA'                        
   103       390     no       no      READ into 'EVOA'                        
   104       393     no       no      VARIABLE 'pfe'                          
   105       395     no       no      VARIABLE 'qfe'                          
   106       397     no       no      COEFFICIENT 'EVFA'                      
   107       399     no       no      UPDATE of 'EVFA'                        
   108       401     no       no      READ into 'EVFA'                        
   109       404     no       no      VARIABLE 'pfd'                          
   110       406     no       no      VARIABLE 'qfd'                          
   111       408     no       no      COEFFICIENT 'VDFA'                      
   112       410     no       no      UPDATE of 'VDFA'                        
   113       412     no       no      READ into 'VDFA'                        
   114       415     no       no      VARIABLE 'pfm'                          
   115       417     no       no      VARIABLE 'qfm'                          
   116       419     no       no      COEFFICIENT 'VIFA'                      
   117       421     no       no      UPDATE of 'VIFA'                        
   118       423     no       no      READ into 'VIFA'                        
   119       426     no       no      VARIABLE 'pmes'                         
   120       428     no       no      COEFFICIENT 'VFM'                       
   121       430     no       no      UPDATE of 'VFM'                         
   122       432     no       no      UPDATE of 'VFM'                         
   123       434     no       no      READ into 'VFM'                         
   124       437     no       no      COEFFICIENT 'VIFM'                      
   125       439     no       no      UPDATE of 'VIFM'                        
   126       441     no       no      READ into 'VIFM'                        
   127       444     no       no      COEFFICIENT 'VDFM'                      
   128       446     no       no      UPDATE of 'VDFM'                        
   129       448     no       no      READ into 'VDFM'                        
   130       456     no       no      VARIABLE 'kb'                           
   131       458     no       no      VARIABLE 'pcgds'                        
   132       460     no       no      COEFFICIENT 'VDEP'                      
   133       462     no       no      UPDATE of 'VDEP'                        
   134       464     no       no      READ into 'VDEP'                        
   135       476     no       no      VARIABLE 'pms'                          
   136       478     no       no      VARIABLE 'qxs'                          
   137       480     no       no      COEFFICIENT 'VIMS'                      
   138       482     no       no      UPDATE of 'VIMS'                        
   139       484     no       no      READ into 'VIMS'                        
   140       487     no       no      VARIABLE 'pcif'                         
   141       489     no       no      COEFFICIENT 'VIWS'                      
   142       491     no       no      UPDATE of 'VIWS'                        
   143       493     no       no      READ into 'VIWS'                        
   144       496     no       no      VARIABLE 'pfob'                         
   145       498     no       no      COEFFICIENT 'VXWD'                      
   146       500     no       no      UPDATE of 'VXWD'                        
   147       502     no       no      READ into 'VXWD'                        
   148       505     no       no      COEFFICIENT 'VXMD'                      
   149       508     no       no      UPDATE of 'VXMD'                        
   150       510     no       no      READ into 'VXMD'                        
   151       513     no       no      VARIABLE 'qst'                          
   152       515     no       no      COEFFICIENT 'VST'                       
   153       518     no       no      UPDATE of 'VST'                         
   154       520     no       no      READ into 'VST'                         
   155       535     no       no      VARIABLE 'y'                            
   156       537     no       no      VARIABLE 'pop'                          
   157       539     no       no      VARIABLE 'qoes'                         
   158       541     no       no      VARIABLE 'endwslack'                    
   159       548     no       no      VARIABLE 'pgov'                         
   160       550     no       no      VARIABLE 'yg'                           
   161       553     no       no      VARIABLE 'ug'                           
   162       555     no       no      VARIABLE 'ppriv'                        
   163       558     no       no      VARIABLE 'uepriv'                       
   164       561     no       no      VARIABLE 'yp'                           
   165       563     no       no      VARIABLE 'up'                           
   166       565     no       no      VARIABLE 'to'                           
   167       572     no       no      VARIABLE 'qim'                          
   168       574     no       no      VARIABLE 'globalcgds'                   
   169       576     no       no      VARIABLE 'pcgdswld'                     
   170       598     no       no      VARIABLE 'del_taxrgc'                   
   171       600     no       no      VARIABLE 'del_taxrpc'                   
   172       602     no       no      VARIABLE 'del_taxriu'                   
   173       604     no       no      VARIABLE 'del_taxrfu'                   
   174       606     no       no      VARIABLE 'del_taxrout'                  
   175       608     no       no      VARIABLE 'del_taxrexp'                  
   176       610     no       no      VARIABLE 'del_taxrimp'                  
   177       612     no       no      VARIABLE 'del_taxrinc'                  
   178       635     no       no      COEFFICIENT 'VFA'                       
   179       637     no       no      Formula for 'VFA'                       
   180       639     no       no      Formula for 'VFA'                       
   181       642     no       no      COEFFICIENT 'VOA'                       
   182       644     no       no      Formula for 'VOA'                       
   183       646     no       no      Formula for 'VOA'                       
   184       649     no       no      COEFFICIENT 'VDM'                       
   185       651     no       no      Formula for 'VDM'                       
   186       654     no       no      COEFFICIENT 'VOM'                       
   187       656     no       no      Formula for 'VOM'                       
   188       658     no       no      Formula for 'VOM'                       
   189       660     no       no      Formula for 'VOM'                       
   190       662     no       no      Formula for 'VOM'                       
   191       696     no       no      COEFFICIENT 'VGA'                       
   192       698     no       no      Formula for 'VGA'                       
   193       700     no       no      COEFFICIENT 'GOVEXP'                    
   194       702     no       no      Formula for 'GOVEXP'                    
   195       706     no       no      COEFFICIENT 'VPA'                       
   196       708     no       no      Formula for 'VPA'                       
   197       710     no       no      COEFFICIENT 'PRIVEXP'                   
   198       712     no       no      Formula for 'PRIVEXP'                   
   199       716     no       no      COEFFICIENT 'INCOME'                    
   200       718     no       no      Formula for 'INCOME'                    
   201       726     no       no      COEFFICIENT 'DGTAX'                     
   202       728     no       no      Formula for 'DGTAX'                     
   203       730     no       no      COEFFICIENT 'IGTAX'                     
   204       732     no       no      Formula for 'IGTAX'                     
   205       734     no       no      COEFFICIENT 'TGC'                       
   206       736     no       no      Formula for 'TGC'                       
   207       739     no       no      COEFFICIENT 'DPTAX'                     
   208       741     no       no      Formula for 'DPTAX'                     
   209       743     no       no      COEFFICIENT 'IPTAX'                     
   210       745     no       no      Formula for 'IPTAX'                     
   211       747     no       no      COEFFICIENT 'TPC'                       
   212       749     no       no      Formula for 'TPC'                       
   213       752     no       no      COEFFICIENT 'DFTAX'                     
   214       754     no       no      Formula for 'DFTAX'                     
   215       756     no       no      COEFFICIENT 'IFTAX'                     
   216       758     no       no      Formula for 'IFTAX'                     
   217       760     no       no      COEFFICIENT 'TIU'                       
   218       762     no       no      Formula for 'TIU'                       
   219       765     no       no      COEFFICIENT 'ETAX'                      
   220       767     no       no      Formula for 'ETAX'                      
   221       769     no       no      COEFFICIENT 'TFU'                       
   222       771     no       no      Formula for 'TFU'                       
   223       774     no       no      COEFFICIENT 'PTAX'                      
   224       776     no       no      Formula for 'PTAX'                      
   225       778     no       no      COEFFICIENT 'TOUT'                      
   226       780     no       no      Formula for 'TOUT'                      
   227       783     no       no      COEFFICIENT 'XTAXD'                     
   228       785     no       no      Formula for 'XTAXD'                     
   229       787     no       no      COEFFICIENT 'TEX'                       
   230       789     no       no      Formula for 'TEX'                       
   231       792     no       no      COEFFICIENT 'MTAX'                      
   232       794     no       no      Formula for 'MTAX'                      
   233       796     no       no      COEFFICIENT 'TIM'                       
   234       798     no       no      Formula for 'TIM'                       
   235       807     no       no      COEFFICIENT 'ESUBD'                     
   236       810     no       no      READ into 'ESUBD'                       
   237       814     no       no      COEFFICIENT 'REGINV'                    
   238       816     no       no      Formula for 'REGINV'                    
   239       818     no       no      COEFFICIENT 'NETINV'                    
   240       820     no       no      Formula for 'NETINV'                    
   241       822     no       no      COEFFICIENT 'GLOBINV'                   
   242       824     no       no      Formula for 'GLOBINV'                   
   243       828     no       no      COEFFICIENT 'CONSHR'                    
   244       830     no       no      Formula for 'CONSHR'                    
   245       832     no       no      COEFFICIENT 'INCPAR'                    
   246       835     no       no      READ into 'INCPAR'                      
   247       837     no       no      COEFFICIENT 'UELASPRIV'                 
   248       840     no       no      Formula for 'UELASPRIV'                 
   249       875     no       no      VARIABLE 'pg'                           
   250       877     no       no      VARIABLE 'qg'                           
   251       885     no       no      EQUATION 'GPRICEINDEX'                  
   252       890     no       no      EQUATION 'GOVDMNDS'                     
   253       895     no       no      EQUATION 'GOVU'                         
   254       905     no       no      VARIABLE 'tgd'                          
   255       908     no       no      VARIABLE 'tgm'                          
   256       911     no       no      EQUATION 'GHHDPRICE'                    
   257       916     no       no      EQUATION 'GHHIPRICES'                   
   258       921     no       no      COEFFICIENT 'GMSHR'                     
   259       923     no       no      Formula for 'GMSHR'                     
   260       926     no       no      EQUATION 'GCOMPRICE'                    
   261       931     no       no      EQUATION 'GHHLDAGRIMP'                  
   262       936     no       no      EQUATION 'GHHLDDOM'                     
   263       941     no       no      EQUATION 'TGCRATIO'                     
   264       968     no       no      VARIABLE 'pp'                           
   265       970     no       no      VARIABLE 'qp'                           
   266       978     no       no      EQUATION 'PHHLDINDEX'                   
   267       983     no       no      EQUATION 'PRIVATEU'                     
   268       993     no       no      COEFFICIENT 'XWCONSHR'                  
   269       996     no       no      Formula for 'XWCONSHR'                  
   270       999     no       no      EQUATION 'UTILELASPRIV'                 
   271      1010     no       no      COEFFICIENT 'SUBPAR'                    
   272      1013     no       no      READ into 'SUBPAR'                      
   273      1019     no       no      COEFFICIENT 'ALPHA'                     
   274      1021     no       no      Formula for 'ALPHA'                     
   275      1024     no       no      COEFFICIENT 'APE'                       
   276      1026     no       no      Formula for 'APE'                       
   277      1029     no       no      Formula for 'APE'                       
   278      1035     no       no      COEFFICIENT 'EY'                        
   279      1037     no       no      Formula for 'EY'                        
   280      1044     no       no      COEFFICIENT 'EP'                        
   281      1047     no       no      Formula for 'EP'                        
   282      1049     no       no      Formula for 'EP'                        
   283      1052     no       no      EQUATION 'PRIVDMNDS'                    
   284      1068     no       no      VARIABLE 'tp'                           
   285      1076     no       no      COEFFICIENT 'LevTPD'                    
   286      1077     no       no      ZERODIVIDE instruction                  
   287      1078     no       no      Formula for 'LevTPD'                    
   288      1079     no       no      ZERODIVIDE instruction                  
   289      1080     no       no      VARIABLE 'tpd'                          
   290      1082     no       no      VARIABLE 'atpd'                         
   291      1084     no       no      EQUATION 'TPDSHIFT'                     
   292      1089     no       no      EQUATION 'PHHDPRICE'                    
   293      1094     no       no      VARIABLE 'tpm'                          
   294      1096     no       no      VARIABLE 'atpm'                         
   295      1098     no       no      EQUATION 'TPMSHIFT'                     
   296      1103     no       no      EQUATION 'PHHIPRICES'                   
   297      1108     no       no      EQUATION 'TPCRATIO'                     
   298      1117     no       no      COEFFICIENT 'PMSHR'                     
   299      1119     no       no      Formula for 'PMSHR'                     
   300      1122     no       no      EQUATION 'PCOMPRICE'                    
   301      1127     no       no      EQUATION 'PHHLDDOM'                     
   302      1132     no       no      EQUATION 'PHHLDAGRIMP'                  
   303      1180     no       no      VARIABLE 'pva'                          
   304      1182     no       no      VARIABLE 'qva'                          
   305      1184     no       no      VARIABLE 'pf'                           
   306      1186     no       no      VARIABLE 'qf'                           
   307      1188     no       no      VARIABLE 'ao'                           
   308      1190     no       no      VARIABLE 'ava'                          
   309      1192     no       no      VARIABLE 'af'                           
   310      1194     no       no      VARIABLE 'afe'                          
   311      1196     no       no      VARIABLE 'ams'                          
   312      1204     no       no      VARIABLE 'aosec'                        
   313      1206     no       no      VARIABLE 'aoreg'                        
   314      1208     no       no      VARIABLE 'aoall'                        
   315      1210     no       no      EQUATION 'AOWORLD'                      
   316      1215     no       no      VARIABLE 'avasec'                       
   317      1217     no       no      VARIABLE 'avareg'                       
   318      1219     no       no      VARIABLE 'avaall'                       
   319      1221     no       no      EQUATION 'AVAWORLD'                     
   320      1226     no       no      COEFFICIENT 'ESUBT'                     
   321      1229     no       no      READ into 'ESUBT'                       
   322      1232     no       no      EQUATION 'VADEMAND'                     
   323      1243     no       no      VARIABLE 'afcom'                        
   324      1245     no       no      VARIABLE 'afsec'                        
   325      1247     no       no      VARIABLE 'afreg'                        
   326      1249     no       no      VARIABLE 'afall'                        
   327      1251     no       no      EQUATION 'AFWORLD'                      
   328      1256     no       no      EQUATION 'INTDEMAND'                    
   329      1272     no       no      VARIABLE 'tfd'                          
   330      1274     no       no      EQUATION 'DMNDDPRICE'                   
   331      1284     no       no      VARIABLE 'tfm'                          
   332      1286     no       no      EQUATION 'DMNDIPRICES'                  
   333      1296     no       no      EQUATION 'TIURATIO'                     
   334      1305     no       no      COEFFICIENT 'FMSHR'                     
   335      1307     no       no      ZERODIVIDE instruction                  
   336      1308     no       no      Formula for 'FMSHR'                     
   337      1310     no       no      ZERODIVIDE instruction                  
   338      1311     no       no      EQUATION 'ICOMPRICE'                    
   339      1316     no       no      EQUATION 'INDIMP'                       
   340      1321     no       no      EQUATION 'INDDOM'                       
   341      1331     no       no      VARIABLE 'tf'                           
   342      1334     no       no      EQUATION 'MPFACTPRICE'                  
   343      1339     no       no      EQUATION 'SPFACTPRICE'                  
   344      1344     no       no      VARIABLE 'afecom'                       
   345      1346     no       no      VARIABLE 'afesec'                       
   346      1348     no       no      VARIABLE 'afereg'                       
   347      1350     no       no      VARIABLE 'afeall'                       
   348      1352     no       no      EQUATION 'AFEWORLD'                     
   349      1357     no       no      COEFFICIENT 'VVA'                       
   350      1359     no       no      Formula for 'VVA'                       
   351      1361     no       no      COEFFICIENT 'SVADEFAULT'                
   352      1363     no       no      Formula for 'SVADEFAULT'                
   353      1367     no       no      COEFFICIENT 'SVA'                       
   354      1369     no       no      Formula for 'SVA'                       
   355      1371     no       no      Formula for 'SVA'                       
   356      1373     no       no      EQUATION 'VAPRICE'                      
   357      1378     no       no      EQUATION 'TFURATIO'                     
   358      1387     no       no      COEFFICIENT 'ESUBVA'                    
   359      1390     no       no      READ into 'ESUBVA'                      
   360      1393     no       no      EQUATION 'ENDWDEMAND'                   
   361      1405     no       no      EQUATION 'OUTPUTPRICES'                 
   362      1415     no       no      EQUATION 'TOUTRATIO'                    
   363      1422     no       no      VARIABLE 'profitslack'                  
   364      1428     no       no      COEFFICIENT 'STC'                       
   365      1430     no       no      Formula for 'STC'                       
   366      1433     no       no      EQUATION 'ZEROPROFITS'                  
   367      1471     no       no      VARIABLE 'rental'                       
   368      1473     no       no      VARIABLE 'ke'                           
   369      1475     no       no      VARIABLE 'rore'                         
   370      1477     no       no      VARIABLE 'rorc'                         
   371      1479     no       no      VARIABLE 'qcgds'                        
   372      1487     no       no      VARIABLE 'ksvces'                       
   373      1489     no       no      EQUATION 'KAPSVCES'                     
   374      1499     no       no      EQUATION 'KAPRENTAL'                    
   375      1505     no       no      EQUATION 'CAPGOODS'                     
   376      1515     no       no      EQUATION 'PRCGOODS'                     
   377      1520     no       no      EQUATION 'KBEGINNING'                   
   378      1529     no       no      COEFFICIENT 'VKB'                       
   379      1531     no       no      UPDATE of 'VKB'                         
   380      1533     no       no      READ into 'VKB'                         
   381      1541     no       no      COEFFICIENT 'INVKERATIO'                
   382      1544     no       no      Formula for 'INVKERATIO'                
   383      1547     no       no      EQUATION 'KEND'                         
   384      1557     no       no      COEFFICIENT 'GRNETRATIO'                
   385      1559     no       no      Formula for 'GRNETRATIO'                
   386      1566     no       no      EQUATION 'RORCURRENT'                   
   387      1571     no       no      COEFFICIENT 'RORFLEX'                   
   388      1574     no       no      READ into 'RORFLEX'                     
   389      1585     no       no      EQUATION 'ROREXPECTED'                  
   390      1597     no       no      VARIABLE 'EXPAND'                       
   391      1599     no       no      EQUATION 'BALDWIN'                      
   392      1609     no       no      COEFFICIENT 'RORDELTA'                  
   393      1612     no       no      READ into 'RORDELTA'                    
   394      1623     no       no      VARIABLE 'rorg'                         
   395      1625     no       no      VARIABLE 'cgdslack'                     
   396      1632     no       no      EQUATION 'RORGLOBAL'                    
   397      1645     no       no      EQUATION 'GLOBALINV'                    
   398      1663     no       no      EQUATION 'PRICGDS'                      
   399      1672     no       no      VARIABLE 'psaveslack'                   
   400      1682     no       no      EQUATION 'SAVEPRICE'                    
   401      1710     no       no      VARIABLE 'tx'                           
   402      1712     no       no      VARIABLE 'txs'                          
   403      1722     no       no      EQUATION 'EXPRICES'                     
   404      1727     no       no      EQUATION 'TEXPRATIO'                    
   405      1742     no       no      VARIABLE 'tm'                           
   406      1744     no       no      VARIABLE 'tms'                          
   407      1755     no       no      EQUATION 'MKTPRICES'                    
   408      1760     no       no      COEFFICIENT 'MSHRS'                     
   409      1762     no       no      Formula for 'MSHRS'                     
   410      1764     no       no      EQUATION 'DPRICEIMP'                    
   411      1769     no       no      VARIABLE 'pr'                           
   412      1771     no       no      EQUATION 'PRICETGT'                     
   413      1787     no       no      COEFFICIENT 'ESUBM'                     
   414      1790     no       no      READ into 'ESUBM'                       
   415      1793     no       no      EQUATION 'IMPORTDEMAND'                 
   416      1800     no       no      EQUATION 'TIMPRATIO'                    
   417      1825     no       no      VARIABLE 'qtmfsd'                       
   418      1831     no       no      VARIABLE 'atmfsd'                       
   419      1838     no       no      VARIABLE 'atm'                          
   420      1840     no       no      VARIABLE 'atf'                          
   421      1842     no       no      VARIABLE 'ats'                          
   422      1844     no       no      VARIABLE 'atd'                          
   423      1846     no       no      VARIABLE 'atall'                        
   424      1848     no       no      VARIABLE 'ptrans'                       
   425      1853     no       no      VARIABLE 'qtm'                          
   426      1855     no       no      VARIABLE 'pt'                           
   427      1861     no       no      COEFFICIENT 'VTMFSD'                    
   428      1864     no       no      UPDATE of 'VTMFSD'                      
   429      1866     no       no      READ into 'VTMFSD'                      
   430      1869     no       no      COEFFICIENT 'VTFSD'                     
   431      1871     no       no      Formula for 'VTFSD'                     
   432      1878     no       no      COEFFICIENT 'VTMUSE'                    
   433      1880     no       no      Formula for 'VTMUSE'                    
   434      1883     no       no      COEFFICIENT 'VTMPROV'                   
   435      1885     no       no      Formula for 'VTMPROV'                   
   436      1891     no       no      COEFFICIENT 'VTRPROV'                   
   437      1893     no       no      Formula for 'VTRPROV'                   
   438      1896     no       no      COEFFICIENT 'VT'                        
   439      1898     no       no      Formula for 'VT'                        
   440      1906     no       no      EQUATION 'QTRANS_MFSD'                  
   441      1925     no       no      COEFFICIENT 'VTMUSESHR'                 
   442      1927     no       no      Formula for 'VTMUSESHR'                 
   443      1929     no       no      Formula for 'VTMUSESHR'                 
   444      1933     no       no      EQUATION 'TRANS_DEMAND'                 
   445      1945     no       no      COEFFICIENT 'VTSUPPSHR'                 
   446      1947     no       no      Formula for 'VTSUPPSHR'                 
   447      1949     no       no      Formula for 'VTSUPPSHR'                 
   448      1952     no       no      EQUATION 'PTRANSPORT'                   
   449      1967     no       no      COEFFICIENT 'VTUSE'                     
   450      1969     no       no      Formula for 'VTUSE'                     
   451      1974     no       no      COEFFICIENT 'VTFSD_MSH'                 
   452      1976     no       no      Formula for 'VTFSD_MSH'                 
   453      1979     no       no      Formula for 'VTFSD_MSH'                 
   454      1983     no       no      EQUATION 'TRANSCOSTINDEX'               
   455      1989     no       no      EQUATION 'TRANSTECHANGE'                
   456      1994     no       no      EQUATION 'TRANSVCES'                    
   457      2005     no       no      COEFFICIENT 'VIWSCOST'                  
   458      2007     no       no      Formula for 'VIWSCOST'                  
   459      2010     no       no      ZERODIVIDE instruction                  
   460      2011     no       no      COEFFICIENT 'FOBSHR'                    
   461      2013     no       no      Formula for 'FOBSHR'                    
   462      2015     no       no      ZERODIVIDE instruction                  
   463      2017     no       no      COEFFICIENT 'TRNSHR'                    
   464      2019     no       no      Formula for 'TRNSHR'                    
   465      2022     no       no      EQUATION 'FOBCIF'                       
   466      2054     no       no      COEFFICIENT 'XSHRPRIV'                  
   467      2056     no       no      Formula for 'XSHRPRIV'                  
   468      2059     no       no      COEFFICIENT 'XSHRGOV'                   
   469      2061     no       no      Formula for 'XSHRGOV'                   
   470      2064     no       no      COEFFICIENT 'XSHRSAVE'                  
   471      2066     no       no      Formula for 'XSHRSAVE'                  
   472      2069     no       no      VARIABLE 'uelas'                        
   473      2072     no       no      VARIABLE 'dppriv'                       
   474      2074     no       no      VARIABLE 'dpgov'                        
   475      2076     no       no      VARIABLE 'dpsave'                       
   476      2084     no       no      EQUATION 'FACTORINCPRICES'              
   477      2089     no       no      COEFFICIENT 'TINC'                      
   478      2091     no       no      Formula for 'TINC'                      
   479      2094     no       no      EQUATION 'TINCRATIO'                    
   480      2101     no       no      COEFFICIENT 'REVSHR'                    
   481      2103     no       no      Formula for 'REVSHR'                    
   482      2105     no       no      EQUATION 'ENDW_PRICE'                   
   483      2110     no       no      COEFFICIENT 'ETRAE'                     
   484      2113     no       no      READ into 'ETRAE'                       
   485      2119     no       no      EQUATION 'ENDW_SUPPLY'                  
   486      2129     no       no      COEFFICIENT 'FY'                        
   487      2131     no       no      Formula for 'FY'                        
   488      2133     no       no      VARIABLE 'fincome'                      
   489      2135     no       no      EQUATION 'FACTORINCOME'                 
   490      2142     no       no      VARIABLE 'del_indtaxr'                  
   491      2144     no       no      EQUATION 'DINDTAXRATIO'                 
   492      2151     no       no      VARIABLE 'del_ttaxr'                    
   493      2153     no       no      EQUATION 'DTAXRATIO'                    
   494      2165     no       no      VARIABLE 'incomeslack'                  
   495      2171     no       no      COEFFICIENT 'INDTAX'                    
   496      2173     no       no      Formula for 'INDTAX'                    
   497      2176     no       no      EQUATION 'REGIONALINCOME'               
   498      2196     no       no      VARIABLE 'dpav'                         
   499      2198     no       no      EQUATION 'DPARAV'                       
   500      2206     no       no      EQUATION 'UTILITELASTIC'                
   501      2211     no       no      EQUATION 'PRIVCONSEXP'                  
   502      2216     no       no      EQUATION 'GOVCONSEXP'                   
   503      2221     no       no      EQUATION 'SAVING'                       
   504      2231     no       no      VARIABLE 'p'                            
   505      2233     no       no      EQUATION 'PRICEINDEXREG'                
   506      2241     no       no      VARIABLE 'au'                           
   507      2243     no       no      VARIABLE 'dpsum'                        
   508      2246     no       no      COEFFICIENT 'DPARSUM'                   
   509      2248     no       no      READ into 'DPARSUM'                     
   510      2250     no       no      UPDATE of 'DPARSUM'                     
   511      2253     no       no      COEFFICIENT 'UTILELAS'                  
   512      2255     no       no      Formula for 'UTILELAS'                  
   513      2259     no       no      COEFFICIENT 'DPARPRIV'                  
   514      2261     no       no      Formula for 'DPARPRIV'                  
   515      2264     no       no      COEFFICIENT 'DPARGOV'                   
   516      2266     no       no      Formula for 'DPARGOV'                   
   517      2269     no       no      COEFFICIENT 'DPARSAVE'                  
   518      2271     no       no      Formula for 'DPARSAVE'                  
   519      2274     no       no      COEFFICIENT 'UTILPRIV'                  
   520      2276     no       no      Formula for 'UTILPRIV'                  
   521      2278     no       no      UPDATE of 'UTILPRIV'                    
   522      2281     no       no      COEFFICIENT 'UTILGOV'                   
   523      2283     no       no      Formula for 'UTILGOV'                   
   524      2285     no       no      UPDATE of 'UTILGOV'                     
   525      2288     no       no      COEFFICIENT 'UTILSAVE'                  
   526      2290     no       no      Formula for 'UTILSAVE'                  
   527      2292     no       no      UPDATE of 'UTILSAVE'                    
   528      2295     no       no      VARIABLE 'u'                            
   529      2297     no       no      EQUATION 'UTILITY'                      
   530      2307     no       no      EQUATION 'DISTPARSUM'                   
   531      2329     no       no      COEFFICIENT 'SHRDFM'                    
   532      2331     no       no      Formula for 'SHRDFM'                    
   533      2334     no       no      COEFFICIENT 'SHRDPM'                    
   534      2336     no       no      Formula for 'SHRDPM'                    
   535      2339     no       no      COEFFICIENT 'SHRDGM'                    
   536      2341     no       no      Formula for 'SHRDGM'                    
   537      2344     no       no      VARIABLE 'qds'                          
   538      2346     no       no      EQUATION 'MKTCLDOM'                     
   539      2354     no       no      COEFFICIENT 'SHRDM'                     
   540      2356     no       no      Formula for 'SHRDM'                     
   541      2359     no       no      COEFFICIENT 'SHRST'                     
   542      2361     no       no      Formula for 'SHRST'                     
   543      2364     no       no      COEFFICIENT 'SHRXMD'                    
   544      2366     no       no      Formula for 'SHRXMD'                    
   545      2369     no       no      VARIABLE 'tradslack'                    
   546      2377     no       no      EQUATION 'MKTCLTRD_MARG'                
   547      2385     no       no      EQUATION 'MKTCLTRD_NMRG'                
   548      2393     no       no      COEFFICIENT 'VIM'                       
   549      2395     no       no      Formula for 'VIM'                       
   550      2398     no       no      COEFFICIENT 'SHRIFM'                    
   551      2400     no       no      Formula for 'SHRIFM'                    
   552      2403     no       no      COEFFICIENT 'SHRIPM'                    
   553      2405     no       no      Formula for 'SHRIPM'                    
   554      2408     no       no      COEFFICIENT 'SHRIGM'                    
   555      2410     no       no      Formula for 'SHRIGM'                    
   556      2413     no       no      EQUATION 'MKTCLIMP'                     
   557      2421     no       no      COEFFICIENT 'SHREM'                     
   558      2423     no       no      Formula for 'SHREM'                     
   559      2426     no       no      EQUATION 'MKTCLENDWM'                   
   560      2435     no       no      EQUATION 'MKTCLENDWS'                   
   561      2448     no       no      VARIABLE 'walras_sup'                   
   562      2450     no       no      EQUATION 'WALRAS_S'                     
   563      2459     no       no      VARIABLE 'walras_dem'                   
   564      2461     no       no      EQUATION 'WALRAS_D'                     
   565      2470     no       no      VARIABLE 'walraslack'                   
   566      2477     no       no      EQUATION 'WALRAS'                       
   567      2521     no       no      VARIABLE 'vxwfob'                       
   568      2523     no       no      VARIABLE 'viwcif'                       
   569      2525     no       no      VARIABLE 'vxwreg'                       
   570      2527     no       no      VARIABLE 'viwreg'                       
   571      2530     no       no      COEFFICIENT 'VXW'                       
   572      2532     no       no      Formula for 'VXW'                       
   573      2534     no       no      Formula for 'VXW'                       
   574      2537     no       no      COEFFICIENT 'VXWREGION'                 
   575      2539     no       no      Formula for 'VXWREGION'                 
   576      2542     no       no      COEFFICIENT 'VIW'                       
   577      2544     no       no      Formula for 'VIW'                       
   578      2546     no       no      COEFFICIENT 'VIWREGION'                 
   579      2548     no       no      Formula for 'VIWREGION'                 
   580      2556     no       no      VARIABLE 'pfactreal'                    
   581      2558     no       no      EQUATION 'REALRETURN'                   
   582      2567     no       no      COEFFICIENT 'VENDWREG'                  
   583      2569     no       no      Formula for 'VENDWREG'                  
   584      2572     no       no      VARIABLE 'pfactor'                      
   585      2574     no       no      EQUATION 'PRIMFACTPR'                   
   586      2579     no       no      COEFFICIENT 'VENDWWLD'                  
   587      2581     no       no      Formula for 'VENDWWLD'                  
   588      2583     no       no      VARIABLE 'pfactwld'                     
   589      2585     no       no      EQUATION 'PRIMFACTPRWLD'                
   590      2597     no       no      VARIABLE 'psw'                          
   591      2599     no       no      EQUATION 'REGSUPRICE'                   
   592      2611     no       no      VARIABLE 'pdw'                          
   593      2613     no       no      EQUATION 'REGDEMPRICE'                  
   594      2623     no       no      VARIABLE 'tot'                          
   595      2625     no       no      EQUATION 'TOTeq'                        
   596      2635     no       no      COEFFICIENT 'GDP'                       
   597      2637     no       no      Formula for 'GDP'                       
   598      2650     no       no      VARIABLE 'vgdp'                         
   599      2652     no       no      EQUATION 'VGDP_r'                       
   600      2664     no       no      VARIABLE 'pgdp'                         
   601      2666     no       no      EQUATION 'PGDP_r'                       
   602      2677     no       no      VARIABLE 'qgdp'                         
   603      2679     no       no      EQUATION 'QGDP_r'                       
   604      2693     no       no      VARIABLE 'compvalad'                    
   605      2695     no       no      EQUATION 'COMPVALADEQ'                  
   606      2719     no       no      VARIABLE 'pxw'                          
   607      2722     no       no      COEFFICIENT 'VXWCOMMOD'                 
   608      2724     no       no      Formula for 'VXWCOMMOD'                 
   609      2727     no       no      COEFFICIENT 'VXWLD'                     
   610      2729     no       no      Formula for 'VXWLD'                     
   611      2732     no       no      COEFFICIENT 'VIWCOMMOD'                 
   612      2734     no       no      Formula for 'VIWCOMMOD'                 
   613      2737     no       no      COEFFICIENT 'PW_PM'                     
   614      2739     no       no      Formula for 'PW_PM'                     
   615      2741     no       no      COEFFICIENT 'VOW'                       
   616      2743     no       no      Formula for 'VOW'                       
   617      2745     no       no      Formula for 'VOW'                       
   618      2748     no       no      COEFFICIENT 'VWOW'                      
   619      2750     no       no      Formula for 'VWOW'                      
   620      2753     no       no      COEFFICIENT 'VWOU'                      
   621      2755     no       no      Formula for 'VWOU'                      
   622      2763     no       no      EQUATION 'VREGEX_ir_MARG'               
   623      2769     no       no      EQUATION 'VREGEX_ir_NMRG'               
   624      2775     no       no      EQUATION 'VREGEX_r'                     
   625      2780     no       no      VARIABLE 'vxwcom'                       
   626      2782     no       no      EQUATION 'VWLDEX_i'                     
   627      2787     no       no      VARIABLE 'vxwwld'                       
   628      2789     no       no      EQUATION 'VWLDEX'                       
   629      2793     no       no      EQUATION 'VREGIM_is'                    
   630      2799     no       no      EQUATION 'VREGIM_s'                     
   631      2804     no       no      VARIABLE 'viwcom'                       
   632      2806     no       no      EQUATION 'VWLDIM_i'                     
   633      2811     no       no      VARIABLE 'valuew'                       
   634      2813     no       no      EQUATION 'VWLDOUT'                      
   635      2818     no       no      VARIABLE 'valuewu'                      
   636      2820     no       no      EQUATION 'VWLDOUTUSE'                   
   637      2833     no       no      EQUATION 'PREGEX_ir_MARG'               
   638      2839     no       no      EQUATION 'PREGEX_ir_NMRG'               
   639      2844     no       no      VARIABLE 'pxwreg'                       
   640      2846     no       no      EQUATION 'PREGEX_r'                     
   641      2851     no       no      VARIABLE 'pxwcom'                       
   642      2853     no       no      EQUATION 'PWLDEX_i'                     
   643      2858     no       no      VARIABLE 'pxwwld'                       
   644      2860     no       no      EQUATION 'PWLDEX'                       
   645      2864     no       no      VARIABLE 'piw'                          
   646      2866     no       no      EQUATION 'PREGIM_is'                    
   647      2871     no       no      VARIABLE 'piwreg'                       
   648      2873     no       no      EQUATION 'PREGIM_s'                     
   649      2878     no       no      VARIABLE 'piwcom'                       
   650      2880     no       no      EQUATION 'PWLDIM_i'                     
   651      2885     no       no      VARIABLE 'pw'                           
   652      2887     no       no      EQUATION 'PWLDOUT'                      
   653      2892     no       no      VARIABLE 'pwu'                          
   654      2894     no       no      EQUATION 'PWLDUSE'                      
   655      2907     no       no      VARIABLE 'qxw'                          
   656      2909     no       no      EQUATION 'QREGEX_ir_MARG'               
   657      2914     no       no      EQUATION 'QREGEX_ir_NMRG'               
   658      2922     no       no      VARIABLE 'qxwreg'                       
   659      2924     no       no      EQUATION 'QREGEX_r'                     
   660      2932     no       no      VARIABLE 'qxwcom'                       
   661      2934     no       no      EQUATION 'QWLDEX_i'                     
   662      2942     no       no      VARIABLE 'qxwwld'                       
   663      2944     no       no      EQUATION 'QWLDEX'                       
   664      2951     no       no      VARIABLE 'qiw'                          
   665      2953     no       no      EQUATION 'QREGIM_is'                    
   666      2961     no       no      VARIABLE 'qiwreg'                       
   667      2963     no       no      EQUATION 'QREGIM_s'                     
   668      2971     no       no      VARIABLE 'qiwcom'                       
   669      2973     no       no      EQUATION 'QWLDIM_i'                     
   670      2981     no       no      VARIABLE 'qow'                          
   671      2983     no       no      EQUATION 'QWLDOUT'                      
   672      2991     no       no      VARIABLE 'qowu'                         
   673      2993     no       no      EQUATION 'QWLDOUTU'                     
   674      3006     no       no      VARIABLE 'DTBALi'                       
   675      3012     no       no      EQUATION 'TRADEBAL_i'                   
   676      3018     no       no      VARIABLE 'DTBAL'                        
   677      3020     no       no      EQUATION 'TRADEBALANCE'                 
   678      3034     no       no      COEFFICIENT 'TBAL'                      
   679      3036     no       no      Formula for 'TBAL'                      
   680      3039     no       no      VARIABLE 'DTBALR'                       
   681      3041     no       no      EQUATION 'DTBALRATIO'                   
   682      3078     no       no      VARIABLE 'uelasev'                      
   683      3081     no       no      VARIABLE 'ueprivev'                     
   684      3084     no       no      VARIABLE 'ugev'                         
   685      3086     no       no      VARIABLE 'upev'                         
   686      3088     no       no      VARIABLE 'qsaveev'                      
   687      3090     no       no      VARIABLE 'yev'                          
   688      3092     no       no      VARIABLE 'ypev'                         
   689      3095     no       no      VARIABLE 'ygev'                         
   690      3099     no       no      COEFFICIENT 'INCOMEEV'                  
   691      3101     no       no      Formula for 'INCOMEEV'                  
   692      3103     no       no      UPDATE of 'INCOMEEV'                    
   693      3106     no       no      COEFFICIENT 'UTILPRIVEV'                
   694      3108     no       no      Formula for 'UTILPRIVEV'                
   695      3110     no       no      UPDATE of 'UTILPRIVEV'                  
   696      3113     no       no      COEFFICIENT 'UTILGOVEV'                 
   697      3115     no       no      Formula for 'UTILGOVEV'                 
   698      3117     no       no      UPDATE of 'UTILGOVEV'                   
   699      3120     no       no      COEFFICIENT 'UTILSAVEEV'                
   700      3122     no       no      Formula for 'UTILSAVEEV'                
   701      3124     no       no      UPDATE of 'UTILSAVEEV'                  
   702      3132     no       no      EQUATION 'GOVUSHD'                      
   703      3142     no       no      VARIABLE 'qpev'                         
   704      3146     no       no      COEFFICIENT 'VPAEV'                     
   705      3149     no       no      Formula for 'VPAEV'                     
   706      3151     no       no      UPDATE of 'VPAEV'                       
   707      3154     no       no      COEFFICIENT 'VPAREGEV'                  
   708      3156     no       no      Formula for 'VPAREGEV'                  
   709      3162     no       no      COEFFICIENT 'CONSHREV'                  
   710      3165     no       no      Formula for 'CONSHREV'                  
   711      3167     no       no      COEFFICIENT 'EYEV'                      
   712      3170     no       no      Formula for 'EYEV'                      
   713      3178     no       no      EQUATION 'PRIVDMNDSEV'                  
   714      3186     no       no      COEFFICIENT 'UELASPRIVEV'               
   715      3189     no       no      Formula for 'UELASPRIVEV'               
   716      3192     no       no      EQUATION 'PRIVATEUEV'                   
   717      3197     no       no      COEFFICIENT 'XWCONSHREV'                
   718      3200     no       no      Formula for 'XWCONSHREV'                
   719      3203     no       no      EQUATION 'UTILELASPRIVEV'               
   720      3218     no       no      VARIABLE 'ysaveev'                      
   721      3221     no       no      COEFFICIENT 'PRIVEXPEV'                 
   722      3224     no       no      Formula for 'PRIVEXPEV'                 
   723      3226     no       no      UPDATE of 'PRIVEXPEV'                   
   724      3232     no       no      COEFFICIENT 'GOVEXPEV'                  
   725      3235     no       no      Formula for 'GOVEXPEV'                  
   726      3237     no       no      UPDATE of 'GOVEXPEV'                    
   727      3240     no       no      COEFFICIENT 'SAVEEV'                    
   728      3243     no       no      Formula for 'SAVEEV'                    
   729      3245     no       no      UPDATE of 'SAVEEV'                      
   730      3248     no       no      COEFFICIENT 'XSHRPRIVEV'                
   731      3251     no       no      Formula for 'XSHRPRIVEV'                
   732      3254     no       no      COEFFICIENT 'XSHRGOVEV'                 
   733      3257     no       no      Formula for 'XSHRGOVEV'                 
   734      3260     no       no      COEFFICIENT 'XSHRSAVEEV'                
   735      3262     no       no      Formula for 'XSHRSAVEEV'                
   736      3265     no       no      VARIABLE 'dpavev'                       
   737      3267     no       no      EQUATION 'DPARAVEV'                     
   738      3275     no       no      EQUATION 'UTILITELASTICEV'              
   739      3280     no       no      EQUATION 'PCONSEXPEV'                   
   740      3285     no       no      EQUATION 'GOVCONSEXPEV'                 
   741      3290     no       no      EQUATION 'SAVINGEV'                     
   742      3295     no       no      EQUATION 'SAVEUEV'                      
   743      3304     no       no      COEFFICIENT 'UTILELASEV'                
   744      3307     no       no      Formula for 'UTILELASEV'                
   745      3309     no       no      UPDATE of 'UTILELASEV'                  
   746      3312     no       no      EQUATION 'INCOME_EQUIV'                 
   747      3327     no       no      VARIABLE 'EV'                           
   748      3329     no       no      EQUATION 'EVREG'                        
   749      3334     no       no      VARIABLE 'WEV'                          
   750      3336     no       no      EQUATION 'EVWLD'                        
   751      3347     no       no      COEFFICIENT 'EVSCALFACT'                
   752      3349     no       no      Formula for 'EVSCALFACT'                
   753      3352     no       no      COEFFICIENT 'VTMD'                      
   754      3354     no       no      Formula for 'VTMD'                      
   755      3357     no       no      VARIABLE 'EV_ALT'                       
   756      3359     no       no      EQUATION 'EV_DECOMPOSITION'             
   757      3398     no       no      VARIABLE 'WEV_ALT'                      
   758      3400     no       no      EQUATION 'WORLDEV'                      
   759      3404     no       no      VARIABLE 'CNTdpar'                      
   760      3406     no       no      EQUATION 'CNT_WEV_dpar'                 
   761      3414     no       no      VARIABLE 'CNTpopr'                      
   762      3416     no       no      EQUATION 'CONT_EV_pop'                  
   763      3420     no       no      VARIABLE 'CNTqor'                       
   764      3422     no       no      EQUATION 'CONT_EV_qor'                  
   765      3428     no       no      VARIABLE 'CNTqoir'                      
   766      3431     no       no      EQUATION 'CONT_EV_qoir'                 
   767      3435     no       no      VARIABLE 'CNTqfer'                      
   768      3438     no       no      EQUATION 'CONT_EV_qfer'                 
   769      3444     no       no      VARIABLE 'CNTqfeir'                     
   770      3447     no       no      EQUATION 'CONT_EV_qfeir'                
   771      3453     no       no      VARIABLE 'CNTqfeijr'                    
   772      3456     no       no      EQUATION 'CONT_EV_qfeijr'               
   773      3461     no       no      VARIABLE 'CNTqfmr'                      
   774      3464     no       no      EQUATION 'CONT_EV_qfmr'                 
   775      3470     no       no      VARIABLE 'CNTqfmir'                     
   776      3473     no       no      EQUATION 'CONT_EV_qfmir'                
   777      3479     no       no      VARIABLE 'CNTqfmijr'                    
   778      3482     no       no      EQUATION 'CONT_EV_qfmijr'               
   779      3487     no       no      VARIABLE 'CNTqfdr'                      
   780      3490     no       no      EQUATION 'CONT_EV_qfdr'                 
   781      3496     no       no      VARIABLE 'CNTqfdir'                     
   782      3499     no       no      EQUATION 'CONT_EV_qfdir'                
   783      3505     no       no      VARIABLE 'CNTqfdijr'                    
   784      3508     no       no      EQUATION 'CONT_EV_qfdijr'               
   785      3513     no       no      VARIABLE 'CNTqpmr'                      
   786      3516     no       no      EQUATION 'CONT_EV_qpmr'                 
   787      3522     no       no      VARIABLE 'CNTqpmir'                     
   788      3525     no       no      EQUATION 'CONT_EV_qpmir'                
   789      3529     no       no      VARIABLE 'CNTqpdr'                      
   790      3532     no       no      EQUATION 'CONT_EV_qpdr'                 
   791      3538     no       no      VARIABLE 'CNTqpdir'                     
   792      3541     no       no      EQUATION 'CONT_EV_qpdir'                
   793      3545     no       no      VARIABLE 'CNTqgmr'                      
   794      3548     no       no      EQUATION 'CONT_EV_qgmr'                 
   795      3554     no       no      VARIABLE 'CNTqgmir'                     
   796      3557     no       no      EQUATION 'CONT_EV_qgmir'                
   797      3561     no       no      VARIABLE 'CNTqgdr'                      
   798      3564     no       no      EQUATION 'CONT_EV_qgdr'                 
   799      3570     no       no      VARIABLE 'CNTqgdir'                     
   800      3573     no       no      EQUATION 'CONT_EV_qgdir'                
   801      3577     no       no      VARIABLE 'CNTqxsr'                      
   802      3580     no       no      EQUATION 'CONT_EV_qxsr'                 
   803      3586     no       no      VARIABLE 'CNTqxsirs'                    
   804      3589     no       no      EQUATION 'CONT_EV_qxsirs'               
   805      3594     no       no      VARIABLE 'CNTqimr'                      
   806      3597     no       no      EQUATION 'CONT_EV_qimr'                 
   807      3603     no       no      VARIABLE 'CNTqimisr'                    
   808      3606     no       no      EQUATION 'CONT_EV_qimisr'               
   809      3611     no       no      VARIABLE 'CNTalleffr'                   
   810      3613     no       no      EQUATION 'CONT_EV_alleffr'              
   811      3632     no       no      VARIABLE 'CNTalleffir'                  
   812      3635     no       no      EQUATION 'CONT_EV_alleffir_E'           
   813      3641     no       no      EQUATION 'CONT_EV_alleffir_T'           
   814      3655     no       no      VARIABLE 'CNTtotr'                      
   815      3658     no       no      EQUATION 'CONT_EV_totr'                 
   816      3667     no       no      VARIABLE 'CNTcgdsr'                     
   817      3669     no       no      EQUATION 'CNT_EV_cgdsr'                 
   818      3675     no       no      VARIABLE 'CNTendwr'                     
   819      3677     no       no      EQUATION 'CONT_EV_endwr'                
   820      3684     no       no      VARIABLE 'CNTendwir'                    
   821      3686     no       no      EQUATION 'CONT_EV_endwir'               
   822      3690     no       no      VARIABLE 'CNTtechr'                     
   823      3692     no       no      EQUATION 'CONT_EV_techr'                
   824      3705     no       no      VARIABLE 'CNTtech_aor'                  
   825      3708     no       no      EQUATION 'CONT_EV_tech_aor'             
   826      3713     no       no      VARIABLE 'CNTtech_aoir'                 
   827      3716     no       no      EQUATION 'CONT_EV_tech_aoir'            
   828      3720     no       no      VARIABLE 'CNTtech_afer'                 
   829      3723     no       no      EQUATION 'CONT_EV_tech_afer'            
   830      3729     no       no      VARIABLE 'CNTtech_afeijr'               
   831      3732     no       no      EQUATION 'CONT_EV_tech_afeijr'          
   832      3736     no       no      VARIABLE 'CNTtech_avar'                 
   833      3739     no       no      EQUATION 'CONT_EV_tech_avar'            
   834      3744     no       no      VARIABLE 'CNTtech_avajr'                
   835      3747     no       no      EQUATION 'CONT_EV_tech_avajr'           
   836      3751     no       no      VARIABLE 'CNTtech_afr'                  
   837      3754     no       no      EQUATION 'CONT_EV_tech_afr'             
   838      3761     no       no      VARIABLE 'CNTtech_afijr'                
   839      3764     no       no      EQUATION 'CONT_EV_tech_afijr'           
   840      3769     no       no      VARIABLE 'CNTtech_atrr'                 
   841      3772     no       no      EQUATION 'CONT_EV_tech_atrr'            
   842      3779     no       no      VARIABLE 'CNTtech_afmfdsd'              
   843      3782     no       no      EQUATION 'CONT_EV_tech_afmfdsd'         
   844      3787     no       no      VARIABLE 'CNTtech_amsr'                 
   845      3789     no       no      EQUATION 'CONT_EV_tech_amsr'            
   846      3795     no       no      VARIABLE 'CNTtech_amsirs'               
   847      3798     no       no      EQUATION 'CONT_EV_tech_amsirs'          
   848      3802     no       no      VARIABLE 'CNTkbr'                       
   849      3805     no       no      EQUATION 'CONT_EV_kbr'                  
   850      3818     no       no      COEFFICIENT 'SX_IR'                     
   851      3820     no       no      Formula for 'SX_IR'                     
   852      3825     no       no      Formula for 'SX_IR'                     
   853      3831     no       no      COEFFICIENT 'VTICOMM'                   
   854      3833     no       no      Formula for 'VTICOMM'                   
   855      3836     no       no      COEFFICIENT 'VIWDIRALL'                 
   856      3838     no       no      Formula for 'VIWDIRALL'                 
   857      3840     no       no      Formula for 'VIWDIRALL'                 
   858      3843     no       no      COEFFICIENT 'VIWDATOT'                  
   859      3845     no       no      Formula for 'VIWDATOT'                  
   860      3848     no       no      COEFFICIENT 'SM_IR'                     
   861      3850     no       no      Formula for 'SM_IR'                     
   862      3853     no       no      ZERODIVIDE instruction                  
   863      3854     no       no      COEFFICIENT 'SX_IRS'                    
   864      3856     no       no      Formula for 'SX_IRS'                    
   865      3858     no       no      Formula for 'SX_IRS'                    
   866      3860     no       no      ZERODIVIDE instruction                  
   867      3862     no       no      COEFFICIENT 'SXT_IR'                    
   868      3864     no       no      Formula for 'SXT_IR'                    
   869      3867     no       no      VARIABLE 'px_ir'                        
   870      3869     no       no      EQUATION 'EXPPRICE_MARG'                
   871      3874     no       no      EQUATION 'EXPPRICE_NMRG'                
   872      3879     no       no      COEFFICIENT 'SM_IRS'                    
   873      3881     no       no      Formula for 'SM_IRS'                    
   874      3884     no       no      COEFFICIENT 'SMT_IR'                    
   875      3886     no       no      Formula for 'SMT_IR'                    
   876      3889     no       no      VARIABLE 'pm_ir'                        
   877      3891     no       no      EQUATION 'IMPPRICE1_MARG'               
   878      3896     no       no      EQUATION 'IMPPRICE1_NMRG'               
   879      3901     no       no      COEFFICIENT 'SW_IR'                     
   880      3903     no       no      Formula for 'SW_IR'                     
   881      3907     no       no      Formula for 'SW_IR'                     
   882      3911     no       no      VARIABLE 'px_i'                         
   883      3913     no       no      EQUATION 'WRLDPRICEi'                   
   884      3918     no       no      COEFFICIENT 'SW_I'                      
   885      3920     no       no      Formula for 'SW_I'                      
   886      3925     no       no      Formula for 'SW_I'                      
   887      3931     no       no      VARIABLE 'px_'                          
   888      3933     no       no      EQUATION 'WRLDPRICE'                    
   889      3937     no       no      VARIABLE 'c1_ir'                        
   890      3939     no       no      EQUATION 'c1_irEQ'                      
   891      3944     no       no      VARIABLE 'c2_ir'                        
   892      3946     no       no      EQUATION 'c2_irEQ'                      
   893      3951     no       no      VARIABLE 'c3_ir'                        
   894      3953     no       no      EQUATION 'c3_irEQ'                      
   895      3958     no       no      VARIABLE 'c1_r'                         
   896      3960     no       no      EQUATION 'c1_rEQ'                       
   897      3965     no       no      VARIABLE 'c2_r'                         
   898      3967     no       no      EQUATION 'c2_rEQ'                       
   899      3972     no       no      VARIABLE 'c3_r'                         
   900      3974     no       no      EQUATION 'c3_rEQ'                       
   901      3979     no       no      VARIABLE 'tot2'                         
   902      3981     no       no      EQUATION 'TOT2eq'                       




 ============
 ++ SET TABLE
 ============

                    Defined   [Max] Inter             Set numbers this
  Number    Name    at line    Size temp? Elements    is subset of
  ---------------------------------------------------------------------
     1  REG           156 [      10]  no   read 
     2  TRAD_COMM     159 [      10]  no   read      7     8     9
     3  MARG_COMM     162 [      10]  no   read      2     7     8     9

     4  NMRG_COMM     167 [       0]  no   other     2     7     8     9

     5  CGDS_COMM     169 [       1]  no   read      7     9
     6  ENDW_COMM     172 [       5]  no   read      8     9
     7  PROD_COMM     175 [       0]  no   other     9
     8  DEMD_COMM     177 [       0]  no   other     9
     9  NSAV_COMM     179 [       0]  no   other
    10  ENDWS_COMM    226 [       5]  no   other     6     8     9
    11  ENDWM_COMM    229 [       0]  no   other     6     8     9
    12  ENDWC_COMM    232         1   no   fixed     6     8     9




 ===============
 ++ SUBSET TABLE
 ===============

  Number  Lt Set  Lt Set        Big set  Big set
          number  name          number   name   
  ---------------------------------------------------
       1       3  MARG_COMM           2  TRAD_COMM   
       2       4  NMRG_COMM           2  TRAD_COMM   
       3       2  TRAD_COMM           7  PROD_COMM   
       4       5  CGDS_COMM           7  PROD_COMM   
       5       3  MARG_COMM           7  PROD_COMM   
       6       4  NMRG_COMM           7  PROD_COMM   
       7       6  ENDW_COMM           8  DEMD_COMM   
       8       2  TRAD_COMM           8  DEMD_COMM   
       9       3  MARG_COMM           8  DEMD_COMM   
      10       4  NMRG_COMM           8  DEMD_COMM   
      11       8  DEMD_COMM           9  NSAV_COMM   
      12       5  CGDS_COMM           9  NSAV_COMM   
      13       2  TRAD_COMM           9  NSAV_COMM   
      14       3  MARG_COMM           9  NSAV_COMM   
      15       4  NMRG_COMM           9  NSAV_COMM   
      16       6  ENDW_COMM           9  NSAV_COMM   
      17       7  PROD_COMM           9  NSAV_COMM   
      18      10  ENDWS_COMM          6  ENDW_COMM   
      19      10  ENDWS_COMM          8  DEMD_COMM   
      20      10  ENDWS_COMM          9  NSAV_COMM   
      21      11  ENDWM_COMM          6  ENDW_COMM   
      22      11  ENDWM_COMM          8  DEMD_COMM   
      23      11  ENDWM_COMM          9  NSAV_COMM   
      24      12  ENDWC_COMM          6  ENDW_COMM   
      25      12  ENDWC_COMM          8  DEMD_COMM   
      26      12  ENDWC_COMM          9  NSAV_COMM   




 =============
 ++ FILE TABLE
 =============

         Logical            Defined  File  File
  Number  Name              at line  Type  Form  Actual name (if given)
  --------------------------------------------------------------------
     1  GTAPSETS               108    old  head
     2  GTAPDATA               110    old  head
     3  GTAPPARM               112    old  head




 =================
 ++ VARIABLE TABLE
 =================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1   psave             280     1  perc       1
     2   qsave             282     1  perc       1
     3   pgd               296     2  perc       2     1
     4   qgd               298     2  perc       2     1
     5   pm                307     2  perc       9     1
     6   pgm               316     2  perc       2     1
     7   qgm               318     2  perc       2     1
     8   pim               327     2  perc       2     1
     9   ppd               341     2  perc       2     1
    10   qpd               343     2  perc       2     1
    11   ppm               359     2  perc       2     1
    12   qpm               361     2  perc       2     1
    13   ps                382     2  perc       9     1
    14   qo                384     2  perc       9     1
    15   pfe               393     3  perc       6     7     1
    16   qfe               395     3  perc       6     7     1
    17   pfd               404     3  perc       2     7     1
    18   qfd               406     3  perc       2     7     1
    19   pfm               415     3  perc       2     7     1
    20   qfm               417     3  perc       2     7     1
    21   pmes              426     3  perc      10     7     1
    22   kb                456     1  perc       1
    23   pcgds             458     1  perc       1
    24   pms               476     3  perc       2     1     1
    25   qxs               478     3  perc       2     1     1
    26   pcif              487     3  perc       2     1     1
    27   pfob              496     3  perc       2     1     1
    28   qst               513     2  perc       3     1
    29   y                 535     1  perc       1
    30   pop               537     1  perc       1
    31   qoes              539     3  perc      10     7     1
    32   endwslack         541     2  perc       6     1
    33   pgov              548     1  perc       1
    34   yg                550     1  perc       1
    35   ug                553     1  perc       1
    36   ppriv             555     1  perc       1
    37   uepriv            558     1  perc       1
    38   yp                561     1  perc       1
    39   up                563     1  perc       1
    40   to                565     2  perc       9     1
    41   qim               572     2  perc       2     1
    42   globalcgds        574     0  perc
    43   pcgdswld          576     0  perc
    44   del_taxrgc        598     1  chng       1
    45   del_taxrpc        600     1  chng       1
    46   del_taxriu        602     1  chng       1
    47   del_taxrfu        604     1  chng       1
    48   del_taxrout       606     1  chng       1
    49   del_taxrexp       608     1  chng       1
    50   del_taxrimp       610     1  chng       1
    51   del_taxrinc       612     1  chng       1
    52   pg                875     2  perc       2     1
    53   qg                877     2  perc       2     1
    54   tgd               905     2  perc       2     1
    55   tgm               908     2  perc       2     1
    56   pp                968     2  perc       2     1
    57   qp                970     2  perc       2     1
    58   tp               1068     1  perc       1
    59   tpd              1080     2  perc       2     1
    60   atpd             1082     2  perc       2     1
    61   tpm              1094     2  perc       2     1
    62   atpm             1096     2  perc       2     1
    63   pva              1180     2  perc       7     1
    64   qva              1182     2  perc       7     1
    65   pf               1184     3  perc       2     7     1
    66   qf               1186     3  perc       2     7     1
    67   ao               1188     2  perc       7     1
    68   ava              1190     2  perc       7     1
    69   af               1192     3  perc       2     7     1
    70   afe              1194     3  perc       6     7     1
    71   ams              1196     3  perc       2     1     1
    72   aosec            1204     1  perc       7
    73   aoreg            1206     1  perc       1
    74   aoall            1208     2  perc       7     1
    75   avasec           1215     1  perc       7
    76   avareg           1217     1  perc       1
    77   avaall           1219     2  perc       7     1
    78   afcom            1243     1  perc       2
    79   afsec            1245     1  perc       7
    80   afreg            1247     1  perc       1
    81   afall            1249     3  perc       2     7     1
    82   tfd              1272     3  perc       2     7     1
    83   tfm              1284     3  perc       2     7     1
    84   tf               1331     3  perc       6     7     1
    85   afecom           1344     1  perc       6
    86   afesec           1346     1  perc       7
    87   afereg           1348     1  perc       1
    88   afeall           1350     3  perc       6     7     1
    89   profitslack      1422     2  perc       7     1
    90   rental           1471     1  perc       1
    91   ke               1473     1  perc       1
    92   rore             1475     1  perc       1
    93   rorc             1477     1  perc       1
    94   qcgds            1479     1  perc       1
    95   ksvces           1487     1  perc       1
    96   EXPAND           1597     2  perc      12     1
    97   rorg             1623     0  perc
    98   cgdslack         1625     1  perc       1
    99   psaveslack       1672     1  perc       1
   100   tx               1710     2  perc       2     1
   101   txs              1712     3  perc       2     1     1
   102   tm               1742     2  perc       2     1
   103   tms              1744     3  perc       2     1     1
   104   pr               1769     2  perc       2     1
   105   qtmfsd           1825     4  perc       3     2     1     1
   106   atmfsd           1831     4  perc       3     2     1     1
   107   atm              1838     1  perc       2
   108   atf              1840     1  perc       2
   109   ats              1842     1  perc       1
   110   atd              1844     1  perc       1
   111   atall            1846     4  perc       3     2     1     1
   112   ptrans           1848     3  perc       2     1     1
   113   qtm              1853     1  perc       3
   114   pt               1855     1  perc       3
   115   uelas            2069     1  perc       1
   116   dppriv           2072     1  perc       1
   117   dpgov            2074     1  perc       1
   118   dpsave           2076     1  perc       1
   119   fincome          2133     1  perc       1
   120   del_indtaxr      2142     1  chng       1
   121   del_ttaxr        2151     1  chng       1
   122   incomeslack      2165     1  perc       1
   123   dpav             2196     1  perc       1
   124   p                2231     1  perc       1
   125   au               2241     1  perc       1
   126   dpsum            2243     1  perc       1
   127   u                2295     1  perc       1
   128   qds              2344     2  perc       2     1
   129   tradslack        2369     2  perc       2     1
   130   walras_sup       2448     0  perc
   131   walras_dem       2459     0  perc
   132   walraslack       2470     0  perc
   133   vxwfob           2521     2  perc       2     1
   134   viwcif           2523     2  perc       2     1
   135   vxwreg           2525     1  perc       1
   136   viwreg           2527     1  perc       1
   137   pfactreal        2556     2  perc       6     1
   138   pfactor          2572     1  perc       1
   139   pfactwld         2583     0  perc
   140   psw              2597     1  perc       1
   141   pdw              2611     1  perc       1
   142   tot              2623     1  perc       1
   143   vgdp             2650     1  perc       1
   144   pgdp             2664     1  perc       1
   145   qgdp             2677     1  perc       1
   146   compvalad        2693     2  perc       7     1
   147   pxw              2719     2  perc       2     1
   148   vxwcom           2780     1  perc       2
   149   vxwwld           2787     0  perc
   150   viwcom           2804     1  perc       2
   151   valuew           2811     1  perc       2
   152   valuewu          2818     1  perc       2
   153   pxwreg           2844     1  perc       1
   154   pxwcom           2851     1  perc       2
   155   pxwwld           2858     0  perc
   156   piw              2864     2  perc       2     1
   157   piwreg           2871     1  perc       1
   158   piwcom           2878     1  perc       2
   159   pw               2885     1  perc       2
   160   pwu              2892     1  perc       2
   161   qxw              2907     2  perc       2     1
   162   qxwreg           2922     1  perc       1
   163   qxwcom           2932     1  perc       2
   164   qxwwld           2942     0  perc
   165   qiw              2951     2  perc       2     1
   166   qiwreg           2961     1  perc       1
   167   qiwcom           2971     1  perc       2
   168   qow              2981     1  perc       2
   169   qowu             2991     1  perc       2
   170   DTBALi           3006     2  chng       2     1
   171   DTBAL            3018     1  chng       1
   172   DTBALR           3039     1  chng       1
   173   uelasev          3078     1  perc       1
   174   ueprivev         3081     1  perc       1
   175   ugev             3084     1  perc       1
   176   upev             3086     1  perc       1
   177   qsaveev          3088     1  perc       1
   178   yev              3090     1  perc       1
   179   ypev             3092     1  perc       1
   180   ygev             3095     1  perc       1
   181   qpev             3142     2  perc       2     1
   182   ysaveev          3218     1  perc       1
   183   dpavev           3265     1  perc       1
   184   EV               3327     1  chng       1
   185   WEV              3334     0  chng
   186   EV_ALT           3357     1  chng       1
   187   WEV_ALT          3398     0  chng
   188   CNTdpar          3404     1  chng       1
   189   CNTpopr          3414     1  chng       1
   190   CNTqor           3420     1  chng       1
   191   CNTqoir          3428     2  chng       9     1
   192   CNTqfer          3435     1  chng       1
   193   CNTqfeir         3444     2  chng       6     1
   194   CNTqfeijr        3453     3  chng       6     7     1
   195   CNTqfmr          3461     1  chng       1
   196   CNTqfmir         3470     2  chng       2     1
   197   CNTqfmijr        3479     3  chng       2     7     1
   198   CNTqfdr          3487     1  chng       1
   199   CNTqfdir         3496     2  chng       2     1
   200   CNTqfdijr        3505     3  chng       2     7     1
   201   CNTqpmr          3513     1  chng       1
   202   CNTqpmir         3522     2  chng       2     1
   203   CNTqpdr          3529     1  chng       1
   204   CNTqpdir         3538     2  chng       2     1
   205   CNTqgmr          3545     1  chng       1
   206   CNTqgmir         3554     2  chng       2     1
   207   CNTqgdr          3561     1  chng       1
   208   CNTqgdir         3570     2  chng       2     1
   209   CNTqxsr          3577     1  chng       1
   210   CNTqxsirs        3586     3  chng       2     1     1
   211   CNTqimr          3594     1  chng       1
   212   CNTqimisr        3603     3  chng       2     1     1
   213   CNTalleffr       3611     1  chng       1
   214   CNTalleffir      3632     2  chng       8     1
   215   CNTtotr          3655     1  chng       1
   216   CNTcgdsr         3667     1  chng       1
   217   CNTendwr         3675     1  chng       1
   218   CNTendwir        3684     2  chng       6     1
   219   CNTtechr         3690     1  chng       1
   220   CNTtech_aor      3705     1  chng       1
   221   CNTtech_aoir     3713     2  chng       7     1
   222   CNTtech_afer     3720     1  chng       1
   223   CNTtech_afeijr   3729     3  chng       6     7     1
   224   CNTtech_avar     3736     1  chng       1
   225   CNTtech_avajr    3744     2  chng       7     1
   226   CNTtech_afr      3751     1  chng       1
   227   CNTtech_afijr    3761     3  chng       2     7     1
   228   CNTtech_atrr     3769     1  chng       1
   229   CNTtech_afmfdsd  3779     4  chng       3     2     1     1
   230   CNTtech_amsr     3787     1  chng       1
   231   CNTtech_amsirs   3795     3  chng       2     1     1
   232   CNTkbr           3802     1  chng       1
   233   px_ir            3867     2  perc       2     1
   234   pm_ir            3889     2  perc       2     1
   235   px_i             3911     1  perc       2
   236   px_              3931     0  perc
   237   c1_ir            3937     2  perc       2     1
   238   c2_ir            3944     2  perc       2     1
   239   c3_ir            3951     2  perc       2     1
   240   c1_r             3958     1  perc       1
   241   c2_r             3965     1  perc       1
   242   c3_r             3972     1  perc       1
   243   tot2             3979     1  perc       1




 ====================
 ++ COEFFICIENT TABLE
 ====================

                        Defined  No            Arguments range
  Number    Name        at line  Args Type     over sets numbered
  ------------------------------------------------------------
     1    VERNUM           149     0  real
     2    SIZE_TRAD        189     0  real
     3    SIZE_ENDW        193     0  real
     4    SIZE_DEMD        197     0  real
     5    SIZE_CGDS        204     0  real
     6    SIZE_PROD        208     0  real
     7    SLUG             221     1  int        6
     8    SAVE             284     1  real       1
     9    VDGA             300     2  real       2     1
    10    VDGM             309     2  real       2     1
    11    VIGA             320     2  real       2     1
    12    VIGM             329     2  real       2     1
    13    VDPA             345     2  real       2     1
    14    VDPM             352     2  real       2     1
    15    VIPA             363     2  real       2     1
    16    VIPM             370     2  real       2     1
    17    EVOA             386     2  real       6     1
    18    EVFA             397     3  real       6     7     1
    19    VDFA             408     3  real       2     7     1
    20    VIFA             419     3  real       2     7     1
    21    VFM              428     3  real       6     7     1
    22    VIFM             437     3  real       2     7     1
    23    VDFM             444     3  real       2     7     1
    24    VDEP             460     1  real       1
    25    VIMS             480     3  real       2     1     1
    26    VIWS             489     3  real       2     1     1
    27    VXWD             498     3  real       2     1     1
    28    VXMD             505     3  real       2     1     1
    29    VST              515     2  real       3     1
    30    VFA              635     3  real       8     7     1
    31    VOA              642     2  real       9     1
    32    VDM              649     2  real       2     1
    33    VOM              654     2  real       9     1
    34    VGA              696     2  real       2     1
    35    GOVEXP           700     1  real       1
    36    VPA              706     2  real       2     1
    37    PRIVEXP          710     1  real       1
    38    INCOME           716     1  real       1
    39    DGTAX            726     2  real       2     1
    40    IGTAX            730     2  real       2     1
    41    TGC              734     1  real       1
    42    DPTAX            739     2  real       2     1
    43    IPTAX            743     2  real       2     1
    44    TPC              747     1  real       1
    45    DFTAX            752     3  real       2     7     1
    46    IFTAX            756     3  real       2     7     1
    47    TIU              760     1  real       1
    48    ETAX             765     3  real       6     7     1
    49    TFU              769     1  real       1
    50    PTAX             774     2  real       9     1
    51    TOUT             778     1  real       1
    52    XTAXD            783     3  real       2     1     1
    53    TEX              787     1  real       1
    54    MTAX             792     3  real       2     1     1
    55    TIM              796     1  real       1
    56    ESUBD            807     1  real       2
    57    REGINV           814     1  real       1
    58    NETINV           818     1  real       1
    59    GLOBINV          822     0  real
    60    CONSHR           828     2  real       2     1
    61    INCPAR           832     2  real       2     1
    62    UELASPRIV        837     1  real       1
    63    GMSHR            921     2  real       2     1
    64    XWCONSHR         993     2  real       2     1
    65    SUBPAR          1010     2  real       2     1
    66    ALPHA           1019     2  real       2     1
    67    APE             1024     3  real       2     2     1
    68    EY              1035     2  real       2     1
    69    EP              1044     3  real       2     2     1
    70    LevTPD          1076     2  real       2     1
    71    PMSHR           1117     2  real       2     1
    72    ESUBT           1226     1  real       7
    73    FMSHR           1305     3  real       2     7     1
    74    VVA             1357     2  real       7     1
    75    SVADEFAULT      1361     1  real       6
    76    SVA             1367     3  real       6     7     1
    77    ESUBVA          1387     1  real       7
    78    STC             1428     3  real       8     7     1
    79    VKB             1529     1  real       1
    80    INVKERATIO      1541     1  real       1
    81    GRNETRATIO      1557     1  real       1
    82    RORFLEX         1571     1  real       1
    83    RORDELTA        1609     0  int 
    84    MSHRS           1760     3  real       2     1     1
    85    ESUBM           1787     1  real       2
    86    VTMFSD          1861     4  real       3     2     1     1
    87    VTFSD           1869     3  real       2     1     1
    88    VTMUSE          1878     1  real       3
    89    VTMPROV         1883     1  real       3
    90    VTRPROV         1891     1  real       1
    91    VT              1896     0  real
    92    VTMUSESHR       1925     4  real       3     2     1     1
    93    VTSUPPSHR       1945     2  real       3     1
    94    VTUSE           1967     0  real
    95    VTFSD_MSH       1974     4  real       3     2     1     1
    96    VIWSCOST        2005     3  real       2     1     1
    97    FOBSHR          2011     3  real       2     1     1
    98    TRNSHR          2017     3  real       2     1     1
    99    XSHRPRIV        2054     1  real       1
   100    XSHRGOV         2059     1  real       1
   101    XSHRSAVE        2064     1  real       1
   102    TINC            2089     1  real       1
   103    REVSHR          2101     3  real       6     7     1
   104    ETRAE           2110     1  real       6
   105    FY              2129     1  real       1
   106    INDTAX          2171     1  real       1
   107    DPARSUM         2246     1  real       1
   108    UTILELAS        2253     1  real       1
   109    DPARPRIV        2259     1  real       1
   110    DPARGOV         2264     1  real       1
   111    DPARSAVE        2269     1  real       1
   112    UTILPRIV        2274     1  real       1
   113    UTILGOV         2281     1  real       1
   114    UTILSAVE        2288     1  real       1
   115    SHRDFM          2329     3  real       2     7     1
   116    SHRDPM          2334     2  real       2     1
   117    SHRDGM          2339     2  real       2     1
   118    SHRDM           2354     2  real       2     1
   119    SHRST           2359     2  real       3     1
   120    SHRXMD          2364     3  real       2     1     1
   121    VIM             2393     2  real       2     1
   122    SHRIFM          2398     3  real       2     7     1
   123    SHRIPM          2403     2  real       2     1
   124    SHRIGM          2408     2  real       2     1
   125    SHREM           2421     3  real      11     7     1
   126    VXW             2530     2  real       2     1
   127    VXWREGION       2537     1  real       1
   128    VIW             2542     2  real       2     1
   129    VIWREGION       2546     1  real       1
   130    VENDWREG        2567     1  real       1
   131    VENDWWLD        2579     0  real
   132    GDP             2635     1  real       1
   133    VXWCOMMOD       2722     1  real       2
   134    VXWLD           2727     0  real
   135    VIWCOMMOD       2732     1  real       2
   136    PW_PM           2737     2  real       2     1
   137    VOW             2741     2  real       2     1
   138    VWOW            2748     1  real       2
   139    VWOU            2753     1  real       2
   140    TBAL            3034     1  real       1
   141    INCOMEEV        3099     1  real       1
   142    UTILPRIVEV      3106     1  real       1
   143    UTILGOVEV       3113     1  real       1
   144    UTILSAVEEV      3120     1  real       1
   145    VPAEV           3146     2  real       2     1
   146    VPAREGEV        3154     1  real       1
   147    CONSHREV        3162     2  real       2     1
   148    EYEV            3167     2  real       2     1
   149    UELASPRIVEV     3186     1  real       1
   150    XWCONSHREV      3197     2  real       2     1
   151    PRIVEXPEV       3221     1  real       1
   152    GOVEXPEV        3232     1  real       1
   153    SAVEEV          3240     1  real       1
   154    XSHRPRIVEV      3248     1  real       1
   155    XSHRGOVEV       3254     1  real       1
   156    XSHRSAVEEV      3260     1  real       1
   157    UTILELASEV      3304     1  real       1
   158    EVSCALFACT      3347     1  real       1
   159    VTMD            3352     2  real       3     1
   160    SX_IR           3818     2  real       2     1
   161    VTICOMM         3831     2  real       3     1
   162    VIWDIRALL       3836     2  real       2     1
   163    VIWDATOT        3843     1  real       1
   164    SM_IR           3848     2  real       2     1
   165    SX_IRS          3854     3  real       2     1     1
   166    SXT_IR          3862     2  real       3     1
   167    SM_IRS          3879     3  real       2     1     1
   168    SMT_IR          3884     2  real       3     1
   169    SW_IR           3901     2  real       2     1
   170    SW_I            3918     1  real       2




 =================
 ++ EQUATION TABLE
 =================

           Defined     Semantic                        ALL quantifiers range
  Number   at line      Error?   Equation name         over sets numbered
  --------------------------------------------------------------------------
     1         885       no      GPRICEINDEX                1
     2         890       no      GOVDMNDS                   2     1
     3         895       no      GOVU                       1
     4         911       no      GHHDPRICE                  2     1
     5         916       no      GHHIPRICES                 2     1
     6         926       no      GCOMPRICE                  2     1
     7         931       no      GHHLDAGRIMP                2     1
     8         936       no      GHHLDDOM                   2     1
     9         941       no      TGCRATIO                   1
    10         978       no      PHHLDINDEX                 1
    11         983       no      PRIVATEU                   1
    12         999       no      UTILELASPRIV               1
    13        1052       no      PRIVDMNDS                  2     1
    14        1084       no      TPDSHIFT                   2     1
    15        1089       no      PHHDPRICE                  2     1
    16        1098       no      TPMSHIFT                   2     1
    17        1103       no      PHHIPRICES                 2     1
    18        1108       no      TPCRATIO                   1
    19        1122       no      PCOMPRICE                  2     1
    20        1127       no      PHHLDDOM                   2     1
    21        1132       no      PHHLDAGRIMP                2     1
    22        1210       no      AOWORLD                    7     1
    23        1221       no      AVAWORLD                   7     1
    24        1232       no      VADEMAND                   7     1
    25        1251       no      AFWORLD                    2     7     1
    26        1256       no      INTDEMAND                  2     7     1
    27        1274       no      DMNDDPRICE                 2     7     1
    28        1286       no      DMNDIPRICES                2     7     1
    29        1296       no      TIURATIO                   1
    30        1311       no      ICOMPRICE                  2     7     1
    31        1316       no      INDIMP                     2     7     1
    32        1321       no      INDDOM                     2     7     1
    33        1334       no      MPFACTPRICE               11     7     1
    34        1339       no      SPFACTPRICE               10     7     1
    35        1352       no      AFEWORLD                   6     7     1
    36        1373       no      VAPRICE                    7     1
    37        1378       no      TFURATIO                   1
    38        1393       no      ENDWDEMAND                 6     7     1
    39        1405       no      OUTPUTPRICES               7     1
    40        1415       no      TOUTRATIO                  1
    41        1433       no      ZEROPROFITS                7     1
    42        1489       no      KAPSVCES                   1
    43        1499       no      KAPRENTAL                  1
    44        1505       no      CAPGOODS                   1
    45        1515       no      PRCGOODS                   1
    46        1520       no      KBEGINNING                 1
    47        1547       no      KEND                       1
    48        1566       no      RORCURRENT                 1
    49        1585       no      ROREXPECTED                1
    50        1599       no      BALDWIN                   12     1
    51        1632       no      RORGLOBAL                  1
    52        1645       no      GLOBALINV           
    53        1663       no      PRICGDS             
    54        1682       no      SAVEPRICE                  1
    55        1722       no      EXPRICES                   2     1     1
    56        1727       no      TEXPRATIO                  1
    57        1755       no      MKTPRICES                  2     1     1
    58        1764       no      DPRICEIMP                  2     1
    59        1771       no      PRICETGT                   2     1
    60        1793       no      IMPORTDEMAND               2     1     1
    61        1800       no      TIMPRATIO                  1
    62        1906       no      QTRANS_MFSD                3     2     1     1

    63        1933       no      TRANS_DEMAND               3
    64        1952       no      PTRANSPORT                 3
    65        1983       no      TRANSCOSTINDEX             2     1     1
    66        1989       no      TRANSTECHANGE              3     2     1     1

    67        1994       no      TRANSVCES                  3     1
    68        2022       no      FOBCIF                     2     1     1
    69        2084       no      FACTORINCPRICES            6     1
    70        2094       no      TINCRATIO                  1
    71        2105       no      ENDW_PRICE                10     1
    72        2119       no      ENDW_SUPPLY               10     7     1
    73        2135       no      FACTORINCOME               1
    74        2144       no      DINDTAXRATIO               1
    75        2153       no      DTAXRATIO                  1
    76        2176       no      REGIONALINCOME             1
    77        2198       no      DPARAV                     1
    78        2206       no      UTILITELASTIC              1
    79        2211       no      PRIVCONSEXP                1
    80        2216       no      GOVCONSEXP                 1
    81        2221       no      SAVING                     1
    82        2233       no      PRICEINDEXREG              1
    83        2297       no      UTILITY                    1
    84        2307       no      DISTPARSUM                 1
    85        2346       no      MKTCLDOM                   2     1
    86        2377       no      MKTCLTRD_MARG              3     1
    87        2385       no      MKTCLTRD_NMRG              4     1
    88        2413       no      MKTCLIMP                   2     1
    89        2426       no      MKTCLENDWM                11     1
    90        2435       no      MKTCLENDWS                10     7     1
    91        2450       no      WALRAS_S            
    92        2461       no      WALRAS_D            
    93        2477       no      WALRAS              
    94        2558       no      REALRETURN                 6     1
    95        2574       no      PRIMFACTPR                 1
    96        2585       no      PRIMFACTPRWLD       
    97        2599       no      REGSUPRICE                 1
    98        2613       no      REGDEMPRICE                1
    99        2625       no      TOTeq                      1
   100        2652       no      VGDP_r                     1
   101        2666       no      PGDP_r                     1
   102        2679       no      QGDP_r                     1
   103        2695       no      COMPVALADEQ                7     1
   104        2763       no      VREGEX_ir_MARG             3     1
   105        2769       no      VREGEX_ir_NMRG             4     1
   106        2775       no      VREGEX_r                   1
   107        2782       no      VWLDEX_i                   2
   108        2789       no      VWLDEX              
   109        2793       no      VREGIM_is                  2     1
   110        2799       no      VREGIM_s                   1
   111        2806       no      VWLDIM_i                   2
   112        2813       no      VWLDOUT                    2
   113        2820       no      VWLDOUTUSE                 2
   114        2833       no      PREGEX_ir_MARG             3     1
   115        2839       no      PREGEX_ir_NMRG             4     1
   116        2846       no      PREGEX_r                   1
   117        2853       no      PWLDEX_i                   2
   118        2860       no      PWLDEX              
   119        2866       no      PREGIM_is                  2     1
   120        2873       no      PREGIM_s                   1
   121        2880       no      PWLDIM_i                   2
   122        2887       no      PWLDOUT                    2
   123        2894       no      PWLDUSE                    2
   124        2909       no      QREGEX_ir_MARG             3     1
   125        2914       no      QREGEX_ir_NMRG             4     1
   126        2924       no      QREGEX_r                   1
   127        2934       no      QWLDEX_i                   2
   128        2944       no      QWLDEX              
   129        2953       no      QREGIM_is                  2     1
   130        2963       no      QREGIM_s                   1
   131        2973       no      QWLDIM_i                   2
   132        2983       no      QWLDOUT                    2
   133        2993       no      QWLDOUTU                   2
   134        3012       no      TRADEBAL_i                 2     1
   135        3020       no      TRADEBALANCE               1
   136        3041       no      DTBALRATIO                 1
   137        3132       no      GOVUSHD                    1
   138        3178       no      PRIVDMNDSEV                2     1
   139        3192       no      PRIVATEUEV                 1
   140        3203       no      UTILELASPRIVEV             1
   141        3267       no      DPARAVEV                   1
   142        3275       no      UTILITELASTICEV            1
   143        3280       no      PCONSEXPEV                 1
   144        3285       no      GOVCONSEXPEV               1
   145        3290       no      SAVINGEV                   1
   146        3295       no      SAVEUEV                    1
   147        3312       no      INCOME_EQUIV               1
   148        3329       no      EVREG                      1
   149        3336       no      EVWLD               
   150        3359       no      EV_DECOMPOSITION           1
   151        3400       no      WORLDEV             
   152        3406       no      CNT_WEV_dpar               1
   153        3416       no      CONT_EV_pop                1
   154        3422       no      CONT_EV_qor                1
   155        3431       no      CONT_EV_qoir               9     1
   156        3438       no      CONT_EV_qfer               1
   157        3447       no      CONT_EV_qfeir              6     1
   158        3456       no      CONT_EV_qfeijr             6     7     1
   159        3464       no      CONT_EV_qfmr               1
   160        3473       no      CONT_EV_qfmir              2     1
   161        3482       no      CONT_EV_qfmijr             2     7     1
   162        3490       no      CONT_EV_qfdr               1
   163        3499       no      CONT_EV_qfdir              2     1
   164        3508       no      CONT_EV_qfdijr             2     7     1
   165        3516       no      CONT_EV_qpmr               1
   166        3525       no      CONT_EV_qpmir              2     1
   167        3532       no      CONT_EV_qpdr               1
   168        3541       no      CONT_EV_qpdir              2     1
   169        3548       no      CONT_EV_qgmr               1
   170        3557       no      CONT_EV_qgmir              2     1
   171        3564       no      CONT_EV_qgdr               1
   172        3573       no      CONT_EV_qgdir              2     1
   173        3580       no      CONT_EV_qxsr               1
   174        3589       no      CONT_EV_qxsirs             2     1     1
   175        3597       no      CONT_EV_qimr               1
   176        3606       no      CONT_EV_qimisr             2     1     1
   177        3613       no      CONT_EV_alleffr            1
   178        3635       no      CONT_EV_alleffir_E         6     1
   179        3641       no      CONT_EV_alleffir_T         2     1
   180        3658       no      CONT_EV_totr               1
   181        3669       no      CNT_EV_cgdsr               1
   182        3677       no      CONT_EV_endwr              1
   183        3686       no      CONT_EV_endwir             6     1
   184        3692       no      CONT_EV_techr              1
   185        3708       no      CONT_EV_tech_aor           1
   186        3716       no      CONT_EV_tech_aoir          7     1
   187        3723       no      CONT_EV_tech_afer          1
   188        3732       no      CONT_EV_tech_afeijr        6     7     1
   189        3739       no      CONT_EV_tech_avar          1
   190        3747       no      CONT_EV_tech_avajr         7     1
   191        3754       no      CONT_EV_tech_afr           1
   192        3764       no      CONT_EV_tech_afijr         2     7     1
   193        3772       no      CONT_EV_tech_atrr          1
   194        3782       no      CONT_EV_tech_afmfdsd       3     2     1     1

   195        3789       no      CONT_EV_tech_amsr          1
   196        3798       no      CONT_EV_tech_amsirs        2     1     1
   197        3805       no      CONT_EV_kbr                1
   198        3869       no      EXPPRICE_MARG              3     1
   199        3874       no      EXPPRICE_NMRG              4     1
   200        3891       no      IMPPRICE1_MARG             3     1
   201        3896       no      IMPPRICE1_NMRG             4     1
   202        3913       no      WRLDPRICEi                 2
   203        3933       no      WRLDPRICE           
   204        3939       no      c1_irEQ                    2     1
   205        3946       no      c2_irEQ                    2     1
   206        3953       no      c3_irEQ                    2     1
   207        3960       no      c1_rEQ                     1
   208        3967       no      c2_rEQ                     1
   209        3974       no      c3_rEQ                     1
   210        3981       no      TOT2eq                     1




 ================
 ++ FORMULA TABLE
 ================

           Defined   Semantic      LHS                RHS
  Number   at line    Error?    coefficient       coefficient numbers
  -------------------------------------------------------------------
     1         191     no      SIZE_TRAD   
     2         195     no      SIZE_ENDW   
     3         199     no      SIZE_DEMD   
     4         201     no      Assertion          4     2     3
     5         206     no      SIZE_CGDS   
     6         210     no      SIZE_PROD   
     7         212     no      Assertion          6     2     5
     8         226     no      Fm for Set         7
     9         637     no      VFA               18
    10         639     no      VFA               19    20
    11         644     no      VOA               17
    12         646     no      VOA               30
    13         651     no      VDM               14    10    23
    14         656     no      VOM               21
    15         658     no      VOM               32    28    29
    16         660     no      VOM               32    28
    17         662     no      VOM               31
    18         698     no      VGA                9    11
    19         702     no      GOVEXP            34
    20         708     no      VPA               13    15
    21         712     no      PRIVEXP           36
    22         718     no      INCOME            37    35     8
    23         728     no      DGTAX              9    10
    24         732     no      IGTAX             11    12
    25         736     no      TGC               39    40
    26         741     no      DPTAX             13    14
    27         745     no      IPTAX             15    16
    28         749     no      TPC               42    43
    29         754     no      DFTAX             19    23
    30         758     no      IFTAX             20    22
    31         762     no      TIU               45    46
    32         767     no      ETAX              30    21
    33         771     no      TFU               48
    34         776     no      PTAX              33    31
    35         780     no      TOUT              50
    36         785     no      XTAXD             27    28
    37         789     no      TEX               52
    38         794     no      MTAX              25    26
    39         798     no      TIM               54
    40         816     no      REGINV            31
    41         820     no      NETINV            31    24
    42         824     no      GLOBINV           58
    43         830     no      CONSHR            36
    44         840     no      UELASPRIV         60    61
    45         923     no      GMSHR             11    34
    46         996     no      XWCONSHR          60    61    62
    47        1021     no      ALPHA             65
    48        1026     no      APE               66    60
    49        1029     no      APE               66    60
    50        1037     no      EY                60    61    66
    51        1047     no      EP          
    52        1049     no      EP                67    68    60
    53        1078     no      LevTPD            13    14
    54        1119     no      PMSHR             15    36
    55        1308     no      FMSHR             20    30
    56        1359     no      VVA               30
    57        1363     no      SVADEFAULT        30    74
    58        1369     no      SVA               74    30
    59        1371     no      SVA               74    75
    60        1430     no      STC               30
    61        1544     no      INVKERATIO        57    79    58
    62        1559     no      GRNETRATIO        31    24
    63        1762     no      MSHRS             25
    64        1871     no      VTFSD             86
    65        1880     no      VTMUSE            86
    66        1885     no      VTMPROV           29
    67        1893     no      VTRPROV           29
    68        1898     no      VT                29
    69        1927     no      VTMUSESHR         87    91
    70        1929     no      VTMUSESHR         88    86
    71        1947     no      VTSUPPSHR         90    91
    72        1949     no      VTSUPPSHR         89    29
    73        1969     no      VTUSE             86
    74        1976     no      VTFSD_MSH         87    86
    75        1979     no      VTFSD_MSH         87    88    94
    76        2007     no      VIWSCOST          27    87
    77        2013     no      FOBSHR            27    96
    78        2019     no      TRNSHR            97
    79        2056     no      XSHRPRIV          37    38
    80        2061     no      XSHRGOV           35    38
    81        2066     no      XSHRSAVE           8    38
    82        2091     no      TINC              50
    83        2103     no      REVSHR            21
    84        2131     no      FY                33    24
    85        2173     no      INDTAX            44    41    47    49    51
                                                 53    55
    86        2255     no      UTILELAS          62    99   100   101   107

    87        2261     no      DPARPRIV          62    99   108
    88        2266     no      DPARGOV          100   108
    89        2271     no      DPARSAVE         101   108
    90        2276     no      UTILPRIV    
    91        2283     no      UTILGOV     
    92        2290     no      UTILSAVE    
    93        2331     no      SHRDFM            23    32
    94        2336     no      SHRDPM            14    32
    95        2341     no      SHRDGM            10    32
    96        2356     no      SHRDM             32    33
    97        2361     no      SHRST             29    33
    98        2366     no      SHRXMD            28    33
    99        2395     no      VIM               22    16    12
   100        2400     no      SHRIFM            22   121
   101        2405     no      SHRIPM            16   121
   102        2410     no      SHRIGM            12   121
   103        2423     no      SHREM             21    33
   104        2532     no      VXW               27    29
   105        2534     no      VXW               27
   106        2539     no      VXWREGION        126
   107        2544     no      VIW               26
   108        2548     no      VIWREGION        128
   109        2569     no      VENDWREG          33
   110        2581     no      VENDWWLD         130
   111        2637     no      GDP               36    34    31    27    29
                                                 26
   112        2724     no      VXWCOMMOD        126
   113        2729     no      VXWLD            127
   114        2734     no      VIWCOMMOD        128
   115        2739     no      PW_PM             27    28
   116        2743     no      VOW               32   136    27    29
   117        2745     no      VOW               32   136    27
   118        2750     no      VWOW             137
   119        2755     no      VWOU              36    34    30
   120        3036     no      TBAL             127   129
   121        3101     no      INCOMEEV          38
   122        3108     no      UTILPRIVEV       112
   123        3115     no      UTILGOVEV        113
   124        3122     no      UTILSAVEEV       114
   125        3149     no      VPAEV             36
   126        3156     no      VPAREGEV         145
   127        3165     no      CONSHREV         145   146
   128        3170     no      EYEV             147    61    66
   129        3189     no      UELASPRIVEV      147    61
   130        3200     no      XWCONSHREV       147    61   149
   131        3224     no      PRIVEXPEV         37
   132        3235     no      GOVEXPEV          35
   133        3243     no      SAVEEV             8
   134        3251     no      XSHRPRIVEV       151   141
   135        3257     no      XSHRGOVEV        152   141
   136        3262     no      XSHRSAVEEV       153   141
   137        3307     no      UTILELASEV       108
   138        3349     no      EVSCALFACT       157   108   141    38
   139        3354     no      VTMD              86
   140        3820     no      SX_IR             27    29
   141        3825     no      SX_IR             27    29
   142        3833     no      VTICOMM           86
   143        3838     no      VIWDIRALL         27   161
   144        3840     no      VIWDIRALL         27
   145        3845     no      VIWDATOT         162
   146        3850     no      SM_IR            162   163
   147        3856     no      SX_IRS            27    29
   148        3858     no      SX_IRS            27
   149        3864     no      SXT_IR            29    27
   150        3881     no      SM_IRS            27   162
   151        3886     no      SMT_IR           161   162
   152        3903     no      SW_IR             27    29
   153        3907     no      SW_IR             27
   154        3920     no      SW_I              27    29
   155        3925     no      SW_I              27    29




 ===============
 ++ UPDATE TABLE
 ===============

           Defined   Semantic    Updated         RHS coeff/var nos
  Number   at line    Error?    coefficient       (vars are negative)
  -------------------------------------------------------------------
     1         153     no      VERNUM             1
     2         286     no      SAVE               8    -1    -2
     3         302     no      VDGA               9    -3    -4
     4         311     no      VDGM              10    -5    -4
     5         322     no      VIGA              11    -6    -7
     6         331     no      VIGM              12    -8    -7
     7         347     no      VDPA              13    -9   -10
     8         354     no      VDPM              14    -5   -10
     9         365     no      VIPA              15   -11   -12
    10         372     no      VIPM              16    -8   -12
    11         388     no      EVOA              17   -13   -14
    12         399     no      EVFA              18   -15   -16
    13         410     no      VDFA              19   -17   -18
    14         421     no      VIFA              20   -19   -20
    15         430     no      VFM               21    -5   -16
    16         432     no      VFM               21   -21   -16
    17         439     no      VIFM              22    -8   -20
    18         446     no      VDFM              23    -5   -18
    19         462     no      VDEP              24   -22   -23
    20         482     no      VIMS              25   -24   -25
    21         491     no      VIWS              26   -26   -25
    22         500     no      VXWD              27   -27   -25
    23         508     no      VXMD              28    -5   -25
    24         518     no      VST               29    -5   -28
    25        1531     no      VKB               79   -23   -22
    26        1864     no      VTMFSD            86  -114  -105
    27        2250     no      DPARSUM          107  -126
    28        2278     no      UTILPRIV         112   -39
    29        2285     no      UTILGOV          113   -35
    30        2292     no      UTILSAVE         114    -2   -30
    31        3103     no      INCOMEEV         141  -178
    32        3110     no      UTILPRIVEV       142  -176
    33        3117     no      UTILGOVEV        143  -175
    34        3124     no      UTILSAVEEV       144  -177   -30
    35        3151     no      VPAEV            145  -181
    36        3226     no      PRIVEXPEV        151  -179
    37        3237     no      GOVEXPEV         152  -180
    38        3245     no      SAVEEV           153  -182
    39        3309     no      UTILELASEV       157  -173




 =============
 ++ READ TABLE
 =============

           Defined    Semantic  Coefficient   File number
  Number   at line     Error?    read into     read from   Header
  ---------------------------------------------------------------
     1        151       no      VERNUM              2       DVER
     2        223       no      SLUG                3       SLUG
     3        288       no      SAVE                2       SAVE
     4        304       no      VDGA                2       VDGA
     5        313       no      VDGM                2       VDGM
     6        324       no      VIGA                2       VIGA
     7        333       no      VIGM                2       VIGM
     8        349       no      VDPA                2       VDPA
     9        356       no      VDPM                2       VDPM
    10        367       no      VIPA                2       VIPA
    11        374       no      VIPM                2       VIPM
    12        390       no      EVOA                2       EVOA
    13        401       no      EVFA                2       EVFA
    14        412       no      VDFA                2       VDFA
    15        423       no      VIFA                2       VIFA
    16        434       no      VFM                 2       VFM 
    17        441       no      VIFM                2       VIFM
    18        448       no      VDFM                2       VDFM
    19        464       no      VDEP                2       VDEP
    20        484       no      VIMS                2       VIMS
    21        493       no      VIWS                2       VIWS
    22        502       no      VXWD                2       VXWD
    23        510       no      VXMD                2       VXMD
    24        520       no      VST                 2       VST 
    25        810       no      ESUBD               3       ESBD
    26        835       no      INCPAR              3       INCP
    27       1013       no      SUBPAR              3       SUBP
    28       1229       no      ESUBT               3       ESBT
    29       1390       no      ESUBVA              3       ESBV
    30       1533       no      VKB                 2       VKB 
    31       1574       no      RORFLEX             3       RFLX
    32       1612       no      RORDELTA            3       RDLT
    33       1790       no      ESUBM               3       ESBM
    34       1866       no      VTMFSD              2       VTWR
    35       2113       no      ETRAE               3       ETRE
    36       2248       no      DPARSUM             2       DPSM




 ===================
 ++ ZERODIVIDE TABLE
 ===================

           Defined          Coefficient or
  Number   at line   Type   real value specified
  -----------------------------------------------
     1       1077     ZDZ   1                   
     2       1079     ZDZ   (Turned OFF)
     3       1307     ZDZ   0.5                 
     4       1310     ZDZ   (Turned OFF)
     5       2010     ZDZ   1                   
     6       2015     ZDZ   (Turned OFF)
     7       3853     ZDZ   0                   
     8       3860     ZDZ   (Turned OFF)


   
 ======================
 ++ INPUT CHECK SUMMARY
 ======================

 Total number of statements is 902.
 There are NO syntax errors or semantic problems.


 ******************************************************************************
 -3-
 -->                     Starting CONDENSATION

 ******************************************************************************



 ==================================================
 +1+
 ++> Task   1 - Substituting out variable 'pgov'
 ==================================================


  >> Equation number   1 selected for substitution.
     Equation name is 'GPRICEINDEX'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GOVDMNDS (equation number   2)
     GOVU (equation number   3)
     PRICEINDEXREG (equation number  82)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 1.

 ==================================================
 +2+
 ++> Task   2 - Substituting out variable 'qg'
 ==================================================


  >> Equation number   2 selected for substitution.
     Equation name is 'GOVDMNDS'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GHHLDAGRIMP (equation number   7)
     GHHLDDOM (equation number   8)
     VGDP_r (equation number 100)

 To simplify the 'pop' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00171(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,VGA(i,r))


 To simplify the 'pg' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00172(i,r)

  equal to the following expression: 
 
          -VGA(i,r) * {-1.0 + 1.0} + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(i,r)

           / GOVEXP(r))

     QGDP_r (equation number 102)

 To simplify the 'pg' part of equation 'QGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00173(i,r)

  equal to the following expression: 
 
          VGA(i,r) + -SUM(XX01,TRAD_COMM,VGA(XX01,r) * VGA(i,r) / GOVEXP(r))

     VWLDOUTUSE (equation number 113)
     QWLDOUTU (equation number 133)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 2.

 ==================================================
 +3+
 ++> Task   3 - Substituting out variable 'pgd'
 ==================================================


  >> Equation number   4 selected for substitution.
     Equation name is 'GHHDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GCOMPRICE (equation number   6)
     GHHLDDOM (equation number   8)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 3.

 ==================================================
 +4+
 ++> Task   4 - Substituting out variable 'pgm'
 ==================================================


  >> Equation number   5 selected for substitution.
     Equation name is 'GHHIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GCOMPRICE (equation number   6)
     GHHLDAGRIMP (equation number   7)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 4.

 ==================================================
 +5+
 ++> Task   5 - Substituting out variable 'pg'
 ==================================================


  >> Equation number   6 selected for substitution.
     Equation name is 'GCOMPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     GOVU (equation number   3)
     GHHLDAGRIMP (equation number   7)
     GHHLDDOM (equation number   8)
     PRICEINDEXREG (equation number  82)
     VGDP_r (equation number 100)
     PGDP_r (equation number 101)
     QGDP_r (equation number 102)
     VWLDOUTUSE (equation number 113)
     PWLDUSE (equation number 123)
     QWLDOUTU (equation number 133)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 5.

 ==================================================
 +6+
 ++> Task   6 - Substituting out variable 'qgm'
 ==================================================


  >> Equation number   7 selected for substitution.
     Equation name is 'GHHLDAGRIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TGCRATIO (equation number   9)

 To simplify the 'pm' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00174(i,r)

  equal to the following expression: 
 
          -{DGTAX(i,r) + IGTAX(i,r) * [-1.0 + ESUBD(i)] * [1 - GMSHR(i,r)]} + -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1 - 

          GMSHR(i,r)})


 To simplify the 'pim' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00175(i,r)

  equal to the following expression: 
 
          -IGTAX(i,r) * {1.0 - [ESUBD(i) - (-1.0 + ESUBD(i)) * GMSHR(i,r)]} + -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))


 To simplify the 'pop' part of equation 'TGCRATIO', we will set
 
          (ALL,r,REG) C00176(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IGTAX(i,r))


 To simplify the 'tgd' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00177(i,r)

  equal to the following expression: 
 
          -{VDGA(i,r) + IGTAX(i,r) * [-1.0 + ESUBD(i)] * [1 - GMSHR(i,r)]} + -

          SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1 - 

          GMSHR(i,r)})


 To simplify the 'tgm' part of equation 'TGCRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00178(i,r)

  equal to the following expression: 
 
          -{VIGA(i,r) - IGTAX(i,r) * [-(-1.0 + ESUBD(i)) * GMSHR(i,r) + 

          ESUBD(i)]} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r)

           * GMSHR(i,r))

     MKTCLIMP (equation number  88)
     EV_DECOMPOSITION (equation number 150)

 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00179(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-1.0 + ESUBD(i)} * {1 - 

          GMSHR(i,r)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * {1 - GMSHR(i,r)})


 To simplify the 'pim' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00180(i,r)

  equal to the following expression: 
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {ESUBD(i) - [-1.0 + ESUBD(i)]

           * GMSHR(i,r)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))


 To simplify the 'pop' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00181(r)

  equal to the following expression: 
 
          -{0.01   * EVSCALFACT(r) * [SUM(i,NSAV_COMM,-PTAX(i,r)) + 

          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r))) + SUM(i,TRAD_COMM,

          SUM(j,PROD_COMM,-IFTAX(i,j,r))) + SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-

          DFTAX(i,j,r))) + SUM(i,TRAD_COMM,-IPTAX(i,r)) + SUM(i,TRAD_COMM,-

          DPTAX(i,r)) + SUM(i,TRAD_COMM,IGTAX(i,r) * (1.0 - 1.0)) + 

          SUM(i,TRAD_COMM,-DGTAX(i,r)) + SUM(i,TRAD_COMM,SUM(s,REG,-XTAXD(i,r,

          s))) + SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r))) + SUM(i,ENDW_COMM,-

          VOA(i,r)) + VDEP(r)] + 0.01   * INCOMEEV(r)}


 To simplify the 'ug' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00182(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,IGTAX(i,r))


 To simplify the 'tgm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00183(i,r)

  equal to the following expression: 
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-[-1.0 + ESUBD(i)] * GMSHR(i,

          r) + ESUBD(i)} + -0.01   * EVSCALFACT(r) * SUM(XX01,TRAD_COMM,

          IGTAX(XX01,r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))

     CONT_EV_qgmr (equation number 169)

 To simplify the 'pm' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00184(i,r)

  equal to the following expression: 
 
          -IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {-1.0 + ESUBD(i)} * {1 - 

          GMSHR(i,r)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * {1 - GMSHR(i,r)})


 To simplify the 'pim' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00185(i,r)

  equal to the following expression: 
 
          IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {ESUBD(i) - [-1.0 + ESUBD(i)]

           * GMSHR(i,r)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))


 To simplify the 'pop' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,r,REG) C00186(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {1.0 - 1.0})


 To simplify the 'ug' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,r,REG) C00187(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IGTAX(i,r) * 0.01   * EVSCALFACT(r))


 To simplify the 'tgm' part of equation 'CONT_EV_qgmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00188(i,r)

  equal to the following expression: 
 
          IGTAX(i,r) * 0.01   * EVSCALFACT(r) * {-[-1.0 + ESUBD(i)] * GMSHR(i,

          r) + ESUBD(i)} + -SUM(XX01,TRAD_COMM,IGTAX(XX01,r) * 0.01   * 

          EVSCALFACT(r) * VGA(i,r) / GOVEXP(r) * GMSHR(i,r))

     CONT_EV_qgmir (equation number 170)
     CONT_EV_alleffr (equation number 177)

 To simplify the 'pop' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00189(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * {SUM(i,NSAV_COMM,-PTAX(i,r)) + 

          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-ETAX(i,j,r))) + SUM(i,TRAD_COMM,

          SUM(j,PROD_COMM,-IFTAX(i,j,r))) + SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-

          DFTAX(i,j,r))) + SUM(i,TRAD_COMM,-IPTAX(i,r)) + SUM(i,TRAD_COMM,-

          DPTAX(i,r)) + SUM(i,TRAD_COMM,IGTAX(i,r) * [1.0 - 1.0]) + 

          SUM(i,TRAD_COMM,-DGTAX(i,r)) + SUM(i,TRAD_COMM,SUM(s,REG,-XTAXD(i,r,

          s))) + SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r)))}

     CONT_EV_alleffir_T (equation number 179)

 To simplify the 'pop' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00190(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * {-PTAX(i,r) + SUM(j,PROD_COMM,-IFTAX(i,j,r)

          ) + SUM(j,PROD_COMM,-DFTAX(i,j,r)) - IPTAX(i,r) - DPTAX(i,r) + 

          IGTAX(i,r) * [1.0 - 1.0] - DGTAX(i,r) + SUM(s,REG,-XTAXD(i,r,s)) + 

          SUM(s,REG,-MTAX(i,s,r))}


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 6.

 ==================================================
 +7+
 ++> Task   7 - Substituting out variable 'qp'
 ==================================================


  >> Equation number  13 selected for substitution.
     Equation name is 'PRIVDMNDS'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     UTILELASPRIV (equation number  12)

 To simplify the 'pop' part of equation 'UTILELASPRIV', we will set
 
          (ALL,r,REG) C00191(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-XWCONSHR(i,r) * {-1.0 + EY(i,r)})


 To simplify the 'yp' part of equation 'UTILELASPRIV', we will set
 
          (ALL,r,REG) C00192(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,XWCONSHR(i,r) * {EY(i,r) - 1.0})


 To simplify the 'pp' part of equation 'UTILELASPRIV', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00193(i,r)

  equal to the following expression: 
 
          -XWCONSHR(i,r) + -SUM(XX01,TRAD_COMM,XWCONSHR(XX01,r) * EP(XX01,i,r))

     PHHLDDOM (equation number  20)
     PHHLDAGRIMP (equation number  21)
     VGDP_r (equation number 100)

 To simplify the 'pop' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00194(r)

  equal to the following expression: 
 
          C00171(r) + SUM(i,TRAD_COMM,VPA(i,r) * {-1.0 + EY(i,r)})


 To simplify the 'yp' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00195(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-VPA(i,r) * EY(i,r))


 To simplify the 'pp' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00196(i,r)

  equal to the following expression: 
 
          -VPA(i,r) + SUM(XX01,TRAD_COMM,-VPA(XX01,r) * EP(XX01,i,r))

     QGDP_r (equation number 102)

 To simplify the 'pp' part of equation 'QGDP_r', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00197(k,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-VPA(i,r) * EP(i,k,r))

     VWLDOUTUSE (equation number 113)
     QWLDOUTU (equation number 133)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 7.

 ==================================================
 +8+
 ++> Task   8 - Substituting out variable 'ppd'
 ==================================================


  >> Equation number  15 selected for substitution.
     Equation name is 'PHHDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     PCOMPRICE (equation number  19)
     PHHLDDOM (equation number  20)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 8.

 ==================================================
 +9+
 ++> Task   9 - Substituting out variable 'ppm'
 ==================================================


  >> Equation number  17 selected for substitution.
     Equation name is 'PHHIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     PCOMPRICE (equation number  19)
     PHHLDAGRIMP (equation number  21)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 9.

 ==================================================
 +10+
 ++> Task  10 - Substituting out variable 'qpm'
 ==================================================


  >> Equation number  21 selected for substitution.
     Equation name is 'PHHLDAGRIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TPCRATIO (equation number  18)

 To simplify the 'pop' part of equation 'TPCRATIO', we will set
 
          (ALL,r,REG) C00198(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-IPTAX(i,r) * {-1.0 + EY(i,r)})


 To simplify the 'yp' part of equation 'TPCRATIO', we will set
 
          (ALL,r,REG) C00199(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * EY(i,r))


 To simplify the 'pp' part of equation 'TPCRATIO', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00200(k,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * EP(i,k,r)) + -IPTAX(k,r) * ESUBD(k)

     MKTCLIMP (equation number  88)
     EV_DECOMPOSITION (equation number 150)

 To simplify the 'pop' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00201(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,0.01   * EVSCALFACT(r) * IPTAX(i,r) * {-1.0 + EY(i,r)

          }) + C00181(r)


 To simplify the 'yp' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00202(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IPTAX(i,r) * EY(i,r))


 To simplify the 'pp' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00203(k,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IPTAX(i,r) * EP(i,k,r)) + -

          0.01   * EVSCALFACT(r) * IPTAX(k,r) * ESUBD(k)

     CONT_EV_qpmr (equation number 165)

 To simplify the 'pop' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,r,REG) C00204(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * 0.01   * EVSCALFACT(r) * {-[-1.0 + 

          EY(i,r)] - 1.0})


 To simplify the 'yp' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,r,REG) C00205(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * 0.01   * EVSCALFACT(r) * EY(i,r))


 To simplify the 'pp' part of equation 'CONT_EV_qpmr', we will set
 
          (ALL,k,TRAD_COMM) (ALL,r,REG) C00206(k,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IPTAX(i,r) * 0.01   * EVSCALFACT(r) * EP(i,k,r)) + -

          IPTAX(k,r) * 0.01   * EVSCALFACT(r) * ESUBD(k)

     CONT_EV_qpmir (equation number 166)
     CONT_EV_alleffr (equation number 177)

 To simplify the 'pop' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00207(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,0.01   * EVSCALFACT(r) * IPTAX(i,r) * {-1.0 + EY(i,r)

          }) + C00189(r)

     CONT_EV_alleffir_T (equation number 179)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 10.

 ==================================================
 +11+
 ++> Task  11 - Substituting out variable 'ao'
 ==================================================


  >> Equation number  22 selected for substitution.
     Equation name is 'AOWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VADEMAND (equation number  24)
     INTDEMAND (equation number  26)
     ZEROPROFITS (equation number  41)

 To simplify the 'ava' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00208(j,r)

  equal to the following expression: 
 
          -SUM(i,ENDW_COMM,-STC(i,j,r))

     EV_DECOMPOSITION (equation number 150)

 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00209(r)

  equal to the following expression: 
 
          SUM(i,PROD_COMM,-0.01   * EVSCALFACT(r) * VOA(i,r))

     CONT_EV_techr (equation number 184)

 To simplify the 'aoreg' part of equation 'CONT_EV_techr', we will set
 
          (ALL,r,REG) C00210(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,PROD_COMM,VOA(i,r))

     CONT_EV_tech_aor (equation number 185)
     CONT_EV_tech_aoir (equation number 186)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 11.

 ==================================================
 +12+
 ++> Task  12 - Substituting out variable 'ava'
 ==================================================


  >> Equation number  23 selected for substitution.
     Equation name is 'AVAWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VADEMAND (equation number  24)
     ZEROPROFITS (equation number  41)
     EV_DECOMPOSITION (equation number 150)

 To simplify the 'avareg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00211(r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VVA(j,r))

     CONT_EV_techr (equation number 184)
     CONT_EV_tech_avar (equation number 189)

 To simplify the 'avareg' part of equation 'CONT_EV_tech_avar', we will set
 
          (ALL,r,REG) C00212(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VVA(j,r))

     CONT_EV_tech_avajr (equation number 190)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 12.

 ==================================================
 +13+
 ++> Task  13 - Substituting out variable 'qva'
 ==================================================


  >> Equation number  24 selected for substitution.
     Equation name is 'VADEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ENDWDEMAND (equation number  38)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 13.

 ==================================================
 +14+
 ++> Task  14 - Substituting out variable 'af'
 ==================================================


  >> Equation number  25 selected for substitution.
     Equation name is 'AFWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INTDEMAND (equation number  26)
     ZEROPROFITS (equation number  41)

 To simplify the 'afsec' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00213(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,STC(i,j,r))

     EV_DECOMPOSITION (equation number 150)

 To simplify the 'afcom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00214(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afsec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00215(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00216(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

          )

     CONT_EV_techr (equation number 184)

 To simplify the 'afcom' part of equation 'CONT_EV_techr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00217(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,r) + VDFA(i,j,r)}

          )


 To simplify the 'afsec' part of equation 'CONT_EV_techr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00218(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,r) + VDFA(i,j,r)}

          )


 To simplify the 'afreg' part of equation 'CONT_EV_techr', we will set
 
          (ALL,r,REG) C00219(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * {VIFA(i,j,

          r) + VDFA(i,j,r)}))

     CONT_EV_tech_afr (equation number 191)

 To simplify the 'afcom' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00220(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VIFA(i,j,r) + VDFA(i,j,r))


 To simplify the 'afsec' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00221(j,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,VIFA(i,j,r) + VDFA(i,j,r))


 To simplify the 'afreg' part of equation 'CONT_EV_tech_afr', we will set
 
          (ALL,r,REG) C00222(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,SUM(i,TRAD_COMM,VIFA(i,j,r)

           + VDFA(i,j,r)))

     CONT_EV_tech_afijr (equation number 192)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 14.

 ==================================================
 +15+
 ++> Task  15 - Substituting out variable 'qf'
 ==================================================


  >> Equation number  26 selected for substitution.
     Equation name is 'INTDEMAND'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INDIMP (equation number  31)
     INDDOM (equation number  32)
     VWLDOUTUSE (equation number 113)

 To simplify the 'aosec' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,j,PROD_COMM) C00223(i,j)

  equal to the following expression: 
 
          SUM(s,REG,-VFA(i,j,s) * {-1.0 + ESUBT(j)})


 To simplify the 'aoreg' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00224(i,s)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-VFA(i,j,s) * {-1.0 + ESUBT(j)})


 To simplify the 'afcom' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) C00225(i)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,SUM(s,REG,-VFA(i,j,s) * {-1.0 + ESUBT(j)}))

     QWLDOUTU (equation number 133)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 15.

 ==================================================
 +16+
 ++> Task  16 - Substituting out variable 'pfd'
 ==================================================


  >> Equation number  27 selected for substitution.
     Equation name is 'DMNDDPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ICOMPRICE (equation number  30)
     INDDOM (equation number  32)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 16.

 ==================================================
 +17+
 ++> Task  17 - Substituting out variable 'pfm'
 ==================================================


  >> Equation number  28 selected for substitution.
     Equation name is 'DMNDIPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ICOMPRICE (equation number  30)
     INDIMP (equation number  31)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 17.

 ==================================================
 +18+
 ++> Task  18 - Substituting out variable 'pf'
 ==================================================


  >> Equation number  30 selected for substitution.
     Equation name is 'ICOMPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     INDIMP (equation number  31)
     INDDOM (equation number  32)
     ZEROPROFITS (equation number  41)
     VWLDOUTUSE (equation number 113)

 To simplify the 'pm' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00226(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * {1.0 - 1.0} * {1 - GMSHR(i,s)} + SUM(j,PROD_COMM,{-VFA(i,

          j,s) + VFA(i,j,s) * ESUBT(j)} * {1 - FMSHR(i,j,s)})


 To simplify the 'pim' part of equation 'VWLDOUTUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00227(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * {1.0 - 1.0} * GMSHR(i,s) + SUM(j,PROD_COMM,{-VFA(i,j,s)

           + VFA(i,j,s) * ESUBT(j)} * FMSHR(i,j,s))

     PWLDUSE (equation number 123)

 To simplify the 'pm' part of equation 'PWLDUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00228(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * {1 - GMSHR(i,s)} + SUM(j,PROD_COMM,-VFA(i,j,s) * {1 - 

          FMSHR(i,j,s)})


 To simplify the 'pim' part of equation 'PWLDUSE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00229(i,s)

  equal to the following expression: 
 
          -VGA(i,s) * GMSHR(i,s) + SUM(j,PROD_COMM,-VFA(i,j,s) * FMSHR(i,j,s))

     QWLDOUTU (equation number 133)

 To simplify the 'pm' part of equation 'QWLDOUTU', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00230(i,s)

  equal to the following expression: 
 
          VGA(i,s) * {1 - GMSHR(i,s)} + SUM(j,PROD_COMM,VFA(i,j,s) * ESUBT(j)

           * {1 - FMSHR(i,j,s)})


 To simplify the 'pim' part of equation 'QWLDOUTU', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00231(i,s)

  equal to the following expression: 
 
          VGA(i,s) * GMSHR(i,s) + SUM(j,PROD_COMM,VFA(i,j,s) * ESUBT(j) * 

          FMSHR(i,j,s))


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 18.

 ==================================================
 +19+
 ++> Task  19 - Substituting out variable 'qfm'
 ==================================================


  >> Equation number  31 selected for substitution.
     Equation name is 'INDIMP'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TIURATIO (equation number  29)

 To simplify the 'pm' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00232(i,r)

  equal to the following expression: 
 
          -{SUM(j,PROD_COMM,DFTAX(i,j,r)) + SUM(j,PROD_COMM,IFTAX(i,j,r) * [-

          ESUBT(j) + ESUBD(i)] * [1 - FMSHR(i,j,r)])}


 To simplify the 'pim' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00233(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * {1.0 - [ESUBD(i) - (-ESUBT(j) + 

          ESUBD(i)) * FMSHR(i,j,r)]})


 To simplify the 'ps' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00234(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * ESUBT(j))


 To simplify the 'qo' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00235(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r))


 To simplify the 'aosec' part of equation 'TIURATIO', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00236(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j)})


 To simplify the 'aoreg' part of equation 'TIURATIO', we will set
 
          (ALL,r,REG) C00237(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j)}))


 To simplify the 'afcom' part of equation 'TIURATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00238(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * {-1.0 + ESUBT(j)})

     MKTCLIMP (equation number  88)

 To simplify the 'pm' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00239(i,r)

  equal to the following expression: 
 
          -SHRIGM(i,r) * {-1.0 + ESUBD(i)} * {1 - GMSHR(i,r)} + 

          SUM(j,PROD_COMM,-SHRIFM(i,j,r) * {-ESUBT(j) + ESUBD(i)} * {1 - 

          FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00240(i,r)

  equal to the following expression: 
 
          SHRIGM(i,r) * {ESUBD(i) - [-1.0 + ESUBD(i)] * GMSHR(i,r)} + SHRIPM(i,

          r) * ESUBD(i) + SUM(j,PROD_COMM,SHRIFM(i,j,r) * {ESUBD(i) - [-

          ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})


 To simplify the 'aoreg' part of equation 'MKTCLIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00241(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-SHRIFM(i,j,r) * {-1.0 + ESUBT(j)})

     EV_DECOMPOSITION (equation number 150)

 To simplify the 'pm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00242(i,r)

  equal to the following expression: 
 
          C00179(i,r) + SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r)

           * {-ESUBT(j) + ESUBD(i)} * {1 - FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00243(i,r)

  equal to the following expression: 
 
          C00180(i,r) + 0.01   * EVSCALFACT(r) * IPTAX(i,r) * ESUBD(i) + 

          SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {ESUBD(i) - [

          -ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})


 To simplify the 'ps' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00244(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * ESUBT(j))


 To simplify the 'qo' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00245(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r))


 To simplify the 'aosec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00246(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + -0.01   * EVSCALFACT(r) * VOA(j,r)


 To simplify the 'aoreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00247(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j)})) + C00209(r)


 To simplify the 'afcom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00248(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + C00214(i,r)


 To simplify the 'afsec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00249(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)}) + C00215(j,r)


 To simplify the 'afreg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00250(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j)})) + C00216(r)

     CONT_EV_qfmr (equation number 159)

 To simplify the 'pm' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00251(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-ESUBT(j)

           + ESUBD(i)} * {1 - FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00252(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {ESUBD(i)

           - [-ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})


 To simplify the 'ps' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00253(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * ESUBT(j))


 To simplify the 'qo' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00254(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r))


 To simplify the 'pop' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,r,REG) C00255(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * 

          EVSCALFACT(r)))


 To simplify the 'aosec' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00256(j,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j)})


 To simplify the 'aoreg' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,r,REG) C00257(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * 

          EVSCALFACT(r) * {-1.0 + ESUBT(j)}))


 To simplify the 'afcom' part of equation 'CONT_EV_qfmr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00258(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,IFTAX(i,j,r) * 0.01   * EVSCALFACT(r) * {-1.0 + 

          ESUBT(j)})

     CONT_EV_qfmir (equation number 160)

 To simplify the 'pop' part of equation 'CONT_EV_qfmir', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00259(i,r)

  equal to the following expression: 
 
          -SUM(j,PROD_COMM,-IFTAX(i,j,r) * 0.01   * EVSCALFACT(r))

     CONT_EV_qfmijr (equation number 161)
     CONT_EV_alleffr (equation number 177)

 To simplify the 'aosec' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00260(j,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)})


 To simplify the 'aoreg' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,r,REG) C00261(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,

          r) * {-1.0 + ESUBT(j)}))


 To simplify the 'afcom' part of equation 'CONT_EV_alleffr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00262(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {-1.0 + 

          ESUBT(j)})

     CONT_EV_alleffir_T (equation number 179)

 To simplify the 'pm' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00263(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * IGTAX(i,r) * {-1.0 + ESUBD(i)} * {1 - 

          GMSHR(i,r)} + SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * IFTAX(i,j,r)

           * {-ESUBT(j) + ESUBD(i)} * {1 - FMSHR(i,j,r)})


 To simplify the 'pim' part of equation 'CONT_EV_alleffir_T', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00264(i,r)

  equal to the following expression: 
 
          0.01   * EVSCALFACT(r) * IGTAX(i,r) * {ESUBD(i) - [-1.0 + ESUBD(i)]

           * GMSHR(i,r)} + 0.01   * EVSCALFACT(r) * IPTAX(i,r) * ESUBD(i) + 

          SUM(j,PROD_COMM,0.01   * EVSCALFACT(r) * IFTAX(i,j,r) * {ESUBD(i) - [

          -ESUBT(j) + ESUBD(i)] * FMSHR(i,j,r)})


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 19.

 ==================================================
 +20+
 ++> Task  20 - Substituting out variable 'afe'
 ==================================================


  >> Equation number  35 selected for substitution.
     Equation name is 'AFEWORLD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     VAPRICE (equation number  36)

 To simplify the 'afesec' part of equation 'VAPRICE', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00265(j,r)

  equal to the following expression: 
 
          -SUM(k,ENDW_COMM,-SVA(k,j,r))

     ENDWDEMAND (equation number  38)
     ZEROPROFITS (equation number  41)

 To simplify the 'afesec' part of equation 'ZEROPROFITS', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00266(j,r)

  equal to the following expression: 
 
          SUM(i,ENDW_COMM,STC(i,j,r))

     EV_DECOMPOSITION (equation number 150)

 To simplify the 'afecom' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00267(i,r)

  equal to the following expression: 
 
          SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afesec' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00268(j,r)

  equal to the following expression: 
 
          SUM(i,ENDW_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))


 To simplify the 'afereg' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00269(r)

  equal to the following expression: 
 
          SUM(i,ENDW_COMM,SUM(j,PROD_COMM,-0.01   * EVSCALFACT(r) * VFA(i,j,r))

          )

     CONT_EV_techr (equation number 184)
     CONT_EV_tech_afer (equation number 187)

 To simplify the 'afecom' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,i,ENDW_COMM) (ALL,r,REG) C00270(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,VFA(i,j,r))


 To simplify the 'afesec' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,j,PROD_COMM) (ALL,r,REG) C00271(j,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,ENDW_COMM,VFA(i,j,r))


 To simplify the 'afereg' part of equation 'CONT_EV_tech_afer', we will set
 
          (ALL,r,REG) C00272(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(j,PROD_COMM,SUM(i,ENDW_COMM,VFA(i,j,r))

          )

     CONT_EV_tech_afeijr (equation number 188)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 20.

 ==================================================
 +21+
 ++> Task  21 - Substituting out variable 'pva'
 ==================================================


  >> Equation number  36 selected for substitution.
     Equation name is 'VAPRICE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     ENDWDEMAND (equation number  38)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 21.

 ==================================================
 +22+
 ++> Task  22 - Substituting out variable 'pms'
 ==================================================


  >> Equation number  57 selected for substitution.
     Equation name is 'MKTPRICES'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     DPRICEIMP (equation number  58)

 To simplify the 'tm' part of equation 'DPRICEIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00273(i,s)

  equal to the following expression: 
 
          -SUM(k,REG,MSHRS(i,k,s))

     IMPORTDEMAND (equation number  60)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 22.

 ==================================================
 +23+
 ++> Task  23 - Substituting out variable 'qtmfsd'
 ==================================================


  >> Equation number  62 selected for substitution.
     Equation name is 'QTRANS_MFSD'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TRANS_DEMAND (equation number  63)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 23.

 ==================================================
 +24+
 ++> Task  24 - Substituting out variable 'ptrans'
 ==================================================


  >> Equation number  65 selected for substitution.
     Equation name is 'TRANSCOSTINDEX'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     FOBCIF (equation number  68)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 24.

 ==================================================
 +25+
 ++> Task  25 - Substituting out variable 'atmfsd'
 ==================================================


  >> Equation number  66 selected for substitution.
     Equation name is 'TRANSTECHANGE'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     TRANS_DEMAND (equation number  63)

 To simplify the 'atm' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) C00274(m)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(r,REG,SUM(s,REG,VTMUSESHR(m,i,r,s))))


 To simplify the 'atf' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) C00275(m,i)

  equal to the following expression: 
 
          SUM(r,REG,SUM(s,REG,VTMUSESHR(m,i,r,s)))


 To simplify the 'ats' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00276(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,VTMUSESHR(m,i,r,s)))


 To simplify the 'atd' part of equation 'TRANS_DEMAND', we will set
 
          (ALL,m,MARG_COMM) (ALL,s,REG) C00277(m,s)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(r,REG,VTMUSESHR(m,i,r,s)))

     FOBCIF (equation number  68)

 To simplify the 'atf' part of equation 'FOBCIF', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) (ALL,s,REG) C00278(i,r,s)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

     EV_DECOMPOSITION (equation number 150)

 To simplify the 'atm' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00279(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,s,r)))


 To simplify the 'atf' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00280(i,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,s,r)))


 To simplify the 'ats' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00281(s,r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(i,TRAD_COMM,-0.01   * EVSCALFACT(r) * VTMFSD(m,i,

          s,r)))


 To simplify the 'atd' part of equation 'EV_DECOMPOSITION', we will set
 
          (ALL,r,REG) C00282(r)

  equal to the following expression: 
 
          SUM(m,MARG_COMM,SUM(i,TRAD_COMM,SUM(s,REG,-0.01   * EVSCALFACT(r) * 

          VTMFSD(m,i,s,r))))

     CONT_EV_techr (equation number 184)
     CONT_EV_tech_atrr (equation number 193)

 To simplify the 'atm' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00283(m,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(i,TRAD_COMM,SUM(s,REG,VTMFSD(m,i,s,r)))


 To simplify the 'atf' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00284(i,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(s,REG,VTMFSD(m,i,s,r)))


 To simplify the 'ats' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00285(s,r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(i,TRAD_COMM,VTMFSD(m,i,

          s,r)))


 To simplify the 'atd' part of equation 'CONT_EV_tech_atrr', we will set
 
          (ALL,r,REG) C00286(r)

  equal to the following expression: 
 
          -0.01   * EVSCALFACT(r) * SUM(m,MARG_COMM,SUM(i,TRAD_COMM,SUM(s,REG,

          VTMFSD(m,i,s,r))))

     CONT_EV_tech_afmfdsd (equation number 194)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 25.

 ==================================================
 +26+
 ++> Task  26 - Substituting out variable 'pcif'
 ==================================================


  >> Equation number  68 selected for substitution.
     Equation name is 'FOBCIF'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------

     DPRICEIMP (equation number  58)

 To simplify the 'atm' part of equation 'DPRICEIMP', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00287(m,i,s)

  equal to the following expression: 
 
          SUM(k,REG,MSHRS(i,k,s) * TRNSHR(i,k,s) * VTFSD_MSH(m,i,k,s))


 To simplify the 'atf' part of equation 'DPRICEIMP', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00288(i,s)

  equal to the following expression: 
 
          SUM(k,REG,MSHRS(i,k,s) * C00278(i,k,s))


 To simplify the 'pt' part of equation 'DPRICEIMP', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00289(m,i,s)

  equal to the following expression: 
 
          SUM(k,REG,-MSHRS(i,k,s) * TRNSHR(i,k,s) * VTFSD_MSH(m,i,k,s))

     IMPORTDEMAND (equation number  60)
     TIMPRATIO (equation number  61)

 To simplify the 'tm' part of equation 'TIMPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00290(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,VIMS(i,s,r))


 To simplify the 'atm' part of equation 'TIMPRATIO', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00291(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r) * TRNSHR(i,s,r) * 

          VTFSD_MSH(m,i,s,r)))


 To simplify the 'atf' part of equation 'TIMPRATIO', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00292(i,r)

  equal to the following expression: 
 
          -SUM(s,REG,-MTAX(i,s,r) * C00278(i,s,r))


 To simplify the 'ats' part of equation 'TIMPRATIO', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00293(s,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-MTAX(i,s,r) * C00278(i,s,r))


 To simplify the 'atd' part of equation 'TIMPRATIO', we will set
 
          (ALL,r,REG) C00294(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(s,REG,-MTAX(i,s,r) * C00278(i,s,r)))


 To simplify the 'pt' part of equation 'TIMPRATIO', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00295(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(s,REG,MTAX(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

     REGDEMPRICE (equation number  98)

 To simplify the 'atm' part of equation 'REGDEMPRICE', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00296(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(k,REG,-VIWS(i,k,r) * TRNSHR(i,k,r) * 

          VTFSD_MSH(m,i,k,r)))


 To simplify the 'atf' part of equation 'REGDEMPRICE', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00297(i,r)

  equal to the following expression: 
 
          -SUM(k,REG,-VIWS(i,k,r) * C00278(i,k,r))


 To simplify the 'ats' part of equation 'REGDEMPRICE', we will set
 
          (ALL,k,REG) (ALL,r,REG) C00298(k,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,-VIWS(i,k,r) * C00278(i,k,r))


 To simplify the 'atd' part of equation 'REGDEMPRICE', we will set
 
          (ALL,r,REG) C00299(r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(k,REG,-VIWS(i,k,r) * C00278(i,k,r)))


 To simplify the 'pt' part of equation 'REGDEMPRICE', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00300(m,r)

  equal to the following expression: 
 
          -SUM(i,TRAD_COMM,SUM(k,REG,VIWS(i,k,r) * TRNSHR(i,k,r) * VTFSD_MSH(m,

          i,k,r)))

     VGDP_r (equation number 100)

 To simplify the 'atm' part of equation 'VGDP_r', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00301(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,-VIWS(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))


 To simplify the 'atf' part of equation 'VGDP_r', we will set
 
          (ALL,i,TRAD_COMM) (ALL,r,REG) C00302(i,r)

  equal to the following expression: 
 
          SUM(s,REG,-VIWS(i,s,r) * C00278(i,s,r))


 To simplify the 'ats' part of equation 'VGDP_r', we will set
 
          (ALL,s,REG) (ALL,r,REG) C00303(s,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,-VIWS(i,s,r) * C00278(i,s,r))


 To simplify the 'atd' part of equation 'VGDP_r', we will set
 
          (ALL,r,REG) C00304(r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,-VIWS(i,s,r) * C00278(i,s,r)))


 To simplify the 'pt' part of equation 'VGDP_r', we will set
 
          (ALL,m,MARG_COMM) (ALL,r,REG) C00305(m,r)

  equal to the following expression: 
 
          SUM(i,TRAD_COMM,SUM(s,REG,VIWS(i,s,r) * TRNSHR(i,s,r) * VTFSD_MSH(m,

          i,s,r)))

     PGDP_r (equation number 101)
     VREGIM_is (equation number 109)

 To simplify the 'atm' part of equation 'VREGIM_is', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00306(m,i,s)

  equal to the following expression: 
 
          -SUM(r,REG,-VIWS(i,r,s) * TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))


 To simplify the 'atf' part of equation 'VREGIM_is', we will set
 
          (ALL,i,TRAD_COMM) (ALL,s,REG) C00307(i,s)

  equal to the following expression: 
 
          -SUM(r,REG,-VIWS(i,r,s) * C00278(i,r,s))


 To simplify the 'pt' part of equation 'VREGIM_is', we will set
 
          (ALL,m,MARG_COMM) (ALL,i,TRAD_COMM) (ALL,s,REG) C00308(m,i,s)

  equal to the following expression: 
 
          -SUM(r,REG,VIWS(i,r,s) * TRNSHR(i,r,s) * VTFSD_MSH(m,i,r,s))

     PREGIM_is (equation number 119)

 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 26.

 ==================================================
 +27+
 ++> Task  27 - Substituting out variable 'compvalad'
 ==================================================


  >> Equation number 103 selected for substitution.
     Equation name is 'COMPVALADEQ'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 27.

 ==================================================
 +28+
 ++> Task  28 - Substituting out variable 'CNTqor'
 ==================================================


  >> Equation number 154 selected for substitution.
     Equation name is 'CONT_EV_qor'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 28.

 ==================================================
 +29+
 ++> Task  29 - Substituting out variable 'CNTqoir'
 ==================================================


  >> Equation number 155 selected for substitution.
     Equation name is 'CONT_EV_qoir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 29.

 ==================================================
 +30+
 ++> Task  30 - Substituting out variable 'CNTqfer'
 ==================================================


  >> Equation number 156 selected for substitution.
     Equation name is 'CONT_EV_qfer'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 30.

 ==================================================
 +31+
 ++> Task  31 - Substituting out variable 'CNTqfeir'
 ==================================================


  >> Equation number 157 selected for substitution.
     Equation name is 'CONT_EV_qfeir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 31.

 ==================================================
 +32+
 ++> Task  32 - Substituting out variable 'CNTqfeijr'
 ==================================================


  >> Equation number 158 selected for substitution.
     Equation name is 'CONT_EV_qfeijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 32.

 ==================================================
 +33+
 ++> Task  33 - Substituting out variable 'CNTqfmr'
 ==================================================


  >> Equation number 159 selected for substitution.
     Equation name is 'CONT_EV_qfmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 33.

 ==================================================
 +34+
 ++> Task  34 - Substituting out variable 'CNTqfmir'
 ==================================================


  >> Equation number 160 selected for substitution.
     Equation name is 'CONT_EV_qfmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 34.

 ==================================================
 +35+
 ++> Task  35 - Substituting out variable 'CNTqfmijr'
 ==================================================


  >> Equation number 161 selected for substitution.
     Equation name is 'CONT_EV_qfmijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 35.

 ==================================================
 +36+
 ++> Task  36 - Substituting out variable 'CNTqfdr'
 ==================================================


  >> Equation number 162 selected for substitution.
     Equation name is 'CONT_EV_qfdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 36.

 ==================================================
 +37+
 ++> Task  37 - Substituting out variable 'CNTqfdir'
 ==================================================


  >> Equation number 163 selected for substitution.
     Equation name is 'CONT_EV_qfdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 37.

 ==================================================
 +38+
 ++> Task  38 - Substituting out variable 'CNTqfdijr'
 ==================================================


  >> Equation number 164 selected for substitution.
     Equation name is 'CONT_EV_qfdijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 38.

 ==================================================
 +39+
 ++> Task  39 - Substituting out variable 'CNTqpmr'
 ==================================================


  >> Equation number 165 selected for substitution.
     Equation name is 'CONT_EV_qpmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 39.

 ==================================================
 +40+
 ++> Task  40 - Substituting out variable 'CNTqpmir'
 ==================================================


  >> Equation number 166 selected for substitution.
     Equation name is 'CONT_EV_qpmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 40.

 ==================================================
 +41+
 ++> Task  41 - Substituting out variable 'CNTqpdr'
 ==================================================


  >> Equation number 167 selected for substitution.
     Equation name is 'CONT_EV_qpdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 41.

 ==================================================
 +42+
 ++> Task  42 - Substituting out variable 'CNTqpdir'
 ==================================================


  >> Equation number 168 selected for substitution.
     Equation name is 'CONT_EV_qpdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 42.

 ==================================================
 +43+
 ++> Task  43 - Substituting out variable 'CNTqgmr'
 ==================================================


  >> Equation number 169 selected for substitution.
     Equation name is 'CONT_EV_qgmr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 43.

 ==================================================
 +44+
 ++> Task  44 - Substituting out variable 'CNTqgmir'
 ==================================================


  >> Equation number 170 selected for substitution.
     Equation name is 'CONT_EV_qgmir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 44.

 ==================================================
 +45+
 ++> Task  45 - Substituting out variable 'CNTqgdr'
 ==================================================


  >> Equation number 171 selected for substitution.
     Equation name is 'CONT_EV_qgdr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 45.

 ==================================================
 +46+
 ++> Task  46 - Substituting out variable 'CNTqgdir'
 ==================================================


  >> Equation number 172 selected for substitution.
     Equation name is 'CONT_EV_qgdir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 46.

 ==================================================
 +47+
 ++> Task  47 - Substituting out variable 'CNTqxsr'
 ==================================================


  >> Equation number 173 selected for substitution.
     Equation name is 'CONT_EV_qxsr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 47.

 ==================================================
 +48+
 ++> Task  48 - Substituting out variable 'CNTqxsirs'
 ==================================================


  >> Equation number 174 selected for substitution.
     Equation name is 'CONT_EV_qxsirs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 48.

 ==================================================
 +49+
 ++> Task  49 - Substituting out variable 'CNTqimr'
 ==================================================


  >> Equation number 175 selected for substitution.
     Equation name is 'CONT_EV_qimr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 49.

 ==================================================
 +50+
 ++> Task  50 - Substituting out variable 'CNTqimisr'
 ==================================================


  >> Equation number 176 selected for substitution.
     Equation name is 'CONT_EV_qimisr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 50.

 ==================================================
 +51+
 ++> Task  51 - Substituting out variable 'CNTalleffr'
 ==================================================


  >> Equation number 177 selected for substitution.
     Equation name is 'CONT_EV_alleffr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 51.

 ==================================================
 +52+
 ++> Task  52 - Substituting out variable 'CNTtotr'
 ==================================================


  >> Equation number 180 selected for substitution.
     Equation name is 'CONT_EV_totr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 52.

 ==================================================
 +53+
 ++> Task  53 - Substituting out variable 'CNTtech_aoir'
 ==================================================


  >> Equation number 186 selected for substitution.
     Equation name is 'CONT_EV_tech_aoir'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 53.

 ==================================================
 +54+
 ++> Task  54 - Substituting out variable 'CNTtech_afeijr'
 ==================================================


  >> Equation number 188 selected for substitution.
     Equation name is 'CONT_EV_tech_afeijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 54.

 ==================================================
 +55+
 ++> Task  55 - Substituting out variable 'CNTtech_avajr'
 ==================================================


  >> Equation number 190 selected for substitution.
     Equation name is 'CONT_EV_tech_avajr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 55.

 ==================================================
 +56+
 ++> Task  56 - Substituting out variable 'CNTtech_afijr'
 ==================================================


  >> Equation number 192 selected for substitution.
     Equation name is 'CONT_EV_tech_afijr'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 56.

 ==================================================
 +57+
 ++> Task  57 - Substituting out variable 'CNTtech_afmfdsd'
 ==================================================


  >> Equation number 194 selected for substitution.
     Equation name is 'CONT_EV_tech_afmfdsd'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 57.

 ==================================================
 +58+
 ++> Task  58 - Substituting out variable 'CNTtech_amsirs'
 ==================================================


  >> Equation number 196 selected for substitution.
     Equation name is 'CONT_EV_tech_amsirs'

     Coefficient of substituted variable in this equation is :
     ---------------------------------------------------------

          {1.0}

     This substitution was made in the following equations :
     -------------------------------------------------------


 This substitution was SUCCESSFUL
  and constitutes CONDENSATION ACTION number 58.

 ==================================================
 --> Summary of CONDENSATION
 ==================================================



     ============================
     List of CONDENSATION actions
     ============================

     The following  58 condensation actions were performed : 

     Action |  Brief description of action
     -------|---------------------------------------------------
            | 
         1  |  BACKSOLVE
            |  Variable 'pgov           ' (var. no.  33)
            |  was made available for backsolving
            |  using equation 'GPRICEINDEX         ' (eq. no.   1)
            | 
         2  |  BACKSOLVE
            |  Variable 'qg             ' (var. no.  53)
            |  was made available for backsolving
            |  using equation 'GOVDMNDS            ' (eq. no.   2)
            | 
         3  |  BACKSOLVE
            |  Variable 'pgd            ' (var. no.   3)
            |  was made available for backsolving
            |  using equation 'GHHDPRICE           ' (eq. no.   4)
            | 
         4  |  BACKSOLVE
            |  Variable 'pgm            ' (var. no.   6)
            |  was made available for backsolving
            |  using equation 'GHHIPRICES          ' (eq. no.   5)
            | 
         5  |  BACKSOLVE
            |  Variable 'pg             ' (var. no.  52)
            |  was made available for backsolving
            |  using equation 'GCOMPRICE           ' (eq. no.   6)
            | 
         6  |  BACKSOLVE
            |  Variable 'qgm            ' (var. no.   7)
            |  was made available for backsolving
            |  using equation 'GHHLDAGRIMP         ' (eq. no.   7)
            | 
         7  |  BACKSOLVE
            |  Variable 'qp             ' (var. no.  57)
            |  was made available for backsolving
            |  using equation 'PRIVDMNDS           ' (eq. no.  13)
            | 
         8  |  BACKSOLVE
            |  Variable 'ppd            ' (var. no.   9)
            |  was made available for backsolving
            |  using equation 'PHHDPRICE           ' (eq. no.  15)
            | 
         9  |  BACKSOLVE
            |  Variable 'ppm            ' (var. no.  11)
            |  was made available for backsolving
            |  using equation 'PHHIPRICES          ' (eq. no.  17)
            | 
        10  |  BACKSOLVE
            |  Variable 'qpm            ' (var. no.  12)
            |  was made available for backsolving
            |  using equation 'PHHLDAGRIMP         ' (eq. no.  21)
            | 
        11  |  BACKSOLVE
            |  Variable 'ao             ' (var. no.  67)
            |  was made available for backsolving
            |  using equation 'AOWORLD             ' (eq. no.  22)
            | 
        12  |  BACKSOLVE
            |  Variable 'ava            ' (var. no.  68)
            |  was made available for backsolving
            |  using equation 'AVAWORLD            ' (eq. no.  23)
            | 
        13  |  BACKSOLVE
            |  Variable 'qva            ' (var. no.  64)
            |  was made available for backsolving
            |  using equation 'VADEMAND            ' (eq. no.  24)
            | 
        14  |  BACKSOLVE
            |  Variable 'af             ' (var. no.  69)
            |  was made available for backsolving
            |  using equation 'AFWORLD             ' (eq. no.  25)
            | 
        15  |  BACKSOLVE
            |  Variable 'qf             ' (var. no.  66)
            |  was made available for backsolving
            |  using equation 'INTDEMAND           ' (eq. no.  26)
            | 
        16  |  BACKSOLVE
            |  Variable 'pfd            ' (var. no.  17)
            |  was made available for backsolving
            |  using equation 'DMNDDPRICE          ' (eq. no.  27)
            | 
        17  |  BACKSOLVE
            |  Variable 'pfm            ' (var. no.  19)
            |  was made available for backsolving
            |  using equation 'DMNDIPRICES         ' (eq. no.  28)
            | 
        18  |  BACKSOLVE
            |  Variable 'pf             ' (var. no.  65)
            |  was made available for backsolving
            |  using equation 'ICOMPRICE           ' (eq. no.  30)
            | 
        19  |  BACKSOLVE
            |  Variable 'qfm            ' (var. no.  20)
            |  was made available for backsolving
            |  using equation 'INDIMP              ' (eq. no.  31)
            | 
        20  |  BACKSOLVE
            |  Variable 'afe            ' (var. no.  70)
            |  was made available for backsolving
            |  using equation 'AFEWORLD            ' (eq. no.  35)
            | 
        21  |  BACKSOLVE
            |  Variable 'pva            ' (var. no.  63)
            |  was made available for backsolving
            |  using equation 'VAPRICE             ' (eq. no.  36)
            | 
        22  |  BACKSOLVE
            |  Variable 'pms            ' (var. no.  24)
            |  was made available for backsolving
            |  using equation 'MKTPRICES           ' (eq. no.  57)
            | 
        23  |  BACKSOLVE
            |  Variable 'qtmfsd         ' (var. no. 105)
            |  was made available for backsolving
            |  using equation 'QTRANS_MFSD         ' (eq. no.  62)
            | 
        24  |  BACKSOLVE
            |  Variable 'ptrans         ' (var. no. 112)
            |  was made available for backsolving
            |  using equation 'TRANSCOSTINDEX      ' (eq. no.  65)
            | 
        25  |  BACKSOLVE
            |  Variable 'atmfsd         ' (var. no. 106)
            |  was made available for backsolving
            |  using equation 'TRANSTECHANGE       ' (eq. no.  66)
            | 
        26  |  BACKSOLVE
            |  Variable 'pcif           ' (var. no.  26)
            |  was made available for backsolving
            |  using equation 'FOBCIF              ' (eq. no.  68)
            | 
        27  |  BACKSOLVE
            |  Variable 'compvalad      ' (var. no. 146)
            |  was made available for backsolving
            |  using equation 'COMPVALADEQ         ' (eq. no. 103)
            | 
        28  |  BACKSOLVE
            |  Variable 'CNTqor         ' (var. no. 190)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qor         ' (eq. no. 154)
            | 
        29  |  BACKSOLVE
            |  Variable 'CNTqoir        ' (var. no. 191)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qoir        ' (eq. no. 155)
            | 
        30  |  BACKSOLVE
            |  Variable 'CNTqfer        ' (var. no. 192)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfer        ' (eq. no. 156)
            | 
        31  |  BACKSOLVE
            |  Variable 'CNTqfeir       ' (var. no. 193)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfeir       ' (eq. no. 157)
            | 
        32  |  BACKSOLVE
            |  Variable 'CNTqfeijr      ' (var. no. 194)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfeijr      ' (eq. no. 158)
            | 
        33  |  BACKSOLVE
            |  Variable 'CNTqfmr        ' (var. no. 195)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmr        ' (eq. no. 159)
            | 
        34  |  BACKSOLVE
            |  Variable 'CNTqfmir       ' (var. no. 196)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmir       ' (eq. no. 160)
            | 
        35  |  BACKSOLVE
            |  Variable 'CNTqfmijr      ' (var. no. 197)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfmijr      ' (eq. no. 161)
            | 
        36  |  BACKSOLVE
            |  Variable 'CNTqfdr        ' (var. no. 198)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdr        ' (eq. no. 162)
            | 
        37  |  BACKSOLVE
            |  Variable 'CNTqfdir       ' (var. no. 199)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdir       ' (eq. no. 163)
            | 
        38  |  BACKSOLVE
            |  Variable 'CNTqfdijr      ' (var. no. 200)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qfdijr      ' (eq. no. 164)
            | 
        39  |  BACKSOLVE
            |  Variable 'CNTqpmr        ' (var. no. 201)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpmr        ' (eq. no. 165)
            | 
        40  |  BACKSOLVE
            |  Variable 'CNTqpmir       ' (var. no. 202)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpmir       ' (eq. no. 166)
            | 
        41  |  BACKSOLVE
            |  Variable 'CNTqpdr        ' (var. no. 203)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpdr        ' (eq. no. 167)
            | 
        42  |  BACKSOLVE
            |  Variable 'CNTqpdir       ' (var. no. 204)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qpdir       ' (eq. no. 168)
            | 
        43  |  BACKSOLVE
            |  Variable 'CNTqgmr        ' (var. no. 205)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgmr        ' (eq. no. 169)
            | 
        44  |  BACKSOLVE
            |  Variable 'CNTqgmir       ' (var. no. 206)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgmir       ' (eq. no. 170)
            | 
        45  |  BACKSOLVE
            |  Variable 'CNTqgdr        ' (var. no. 207)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgdr        ' (eq. no. 171)
            | 
        46  |  BACKSOLVE
            |  Variable 'CNTqgdir       ' (var. no. 208)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qgdir       ' (eq. no. 172)
            | 
        47  |  BACKSOLVE
            |  Variable 'CNTqxsr        ' (var. no. 209)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qxsr        ' (eq. no. 173)
            | 
        48  |  BACKSOLVE
            |  Variable 'CNTqxsirs      ' (var. no. 210)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qxsirs      ' (eq. no. 174)
            | 
        49  |  BACKSOLVE
            |  Variable 'CNTqimr        ' (var. no. 211)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qimr        ' (eq. no. 175)
            | 
        50  |  BACKSOLVE
            |  Variable 'CNTqimisr      ' (var. no. 212)
            |  was made available for backsolving
            |  using equation 'CONT_EV_qimisr      ' (eq. no. 176)
            | 
        51  |  BACKSOLVE
            |  Variable 'CNTalleffr     ' (var. no. 213)
            |  was made available for backsolving
            |  using equation 'CONT_EV_alleffr     ' (eq. no. 177)
            | 
        52  |  BACKSOLVE
            |  Variable 'CNTtotr        ' (var. no. 215)
            |  was made available for backsolving
            |  using equation 'CONT_EV_totr        ' (eq. no. 180)
            | 
        53  |  BACKSOLVE
            |  Variable 'CNTtech_aoir   ' (var. no. 221)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_aoir   ' (eq. no. 186)
            | 
        54  |  BACKSOLVE
            |  Variable 'CNTtech_afeijr ' (var. no. 223)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afeijr ' (eq. no. 188)
            | 
        55  |  BACKSOLVE
            |  Variable 'CNTtech_avajr  ' (var. no. 225)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_avajr  ' (eq. no. 190)
            | 
        56  |  BACKSOLVE
            |  Variable 'CNTtech_afijr  ' (var. no. 227)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afijr  ' (eq. no. 192)
            | 
        57  |  BACKSOLVE
            |  Variable 'CNTtech_afmfdsd' (var. no. 229)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_afmfdsd' (eq. no. 194)
            | 
        58  |  BACKSOLVE
            |  Variable 'CNTtech_amsirs ' (var. no. 231)
            |  was made available for backsolving
            |  using equation 'CONT_EV_tech_amsirs ' (eq. no. 196)



     =============================
     Final status of all Equations
     =============================

  Number |      Equation        | Status of equation             |  Max   
         |        name          |                                | number 
 --------|----------------------|--------------------------------|--------
         |                      |                                |        
     1   | GPRICEINDEX          | Used for BACKSOLVING           |[        10]
     2   | GOVDMNDS             | Used for BACKSOLVING           |[       100]
     3   | GOVU                 | In the condensed system        |        10
     4   | GHHDPRICE            | Used for BACKSOLVING           |[       100]
     5   | GHHIPRICES           | Used for BACKSOLVING           |[       100]
     6   | GCOMPRICE            | Used for BACKSOLVING           |[       100]
     7   | GHHLDAGRIMP          | Used for BACKSOLVING           |[       100]
     8   | GHHLDDOM             | In the condensed system        |       100
     9   | TGCRATIO             | In the condensed system        |        10
    10   | PHHLDINDEX           | In the condensed system        |        10
    11   | PRIVATEU             | In the condensed system        |        10
    12   | UTILELASPRIV         | In the condensed system        |        10
    13   | PRIVDMNDS            | Used for BACKSOLVING           |[       100]
    14   | TPDSHIFT             | In the condensed system        |       100
    15   | PHHDPRICE            | Used for BACKSOLVING           |[       100]
    16   | TPMSHIFT             | In the condensed system        |       100
    17   | PHHIPRICES           | Used for BACKSOLVING           |[       100]
    18   | TPCRATIO             | In the condensed system        |        10
    19   | PCOMPRICE            | In the condensed system        |       100
    20   | PHHLDDOM             | In the condensed system        |       100
    21   | PHHLDAGRIMP          | Used for BACKSOLVING           |[       100]
    22   | AOWORLD              | Used for BACKSOLVING           |[         0]
    23   | AVAWORLD             | Used for BACKSOLVING           |[         0]
    24   | VADEMAND             | Used for BACKSOLVING           |[         0]
    25   | AFWORLD              | Used for BACKSOLVING           |[         0]
    26   | INTDEMAND            | Used for BACKSOLVING           |[         0]
    27   | DMNDDPRICE           | Used for BACKSOLVING           |[         0]
    28   | DMNDIPRICES          | Used for BACKSOLVING           |[         0]
    29   | TIURATIO             | In the condensed system        |        10
    30   | ICOMPRICE            | Used for BACKSOLVING           |[         0]
    31   | INDIMP               | Used for BACKSOLVING           |[         0]
    32   | INDDOM               | In the condensed system        |         0
    33   | MPFACTPRICE          | In the condensed system        |         0
    34   | SPFACTPRICE          | In the condensed system        |         0
    35   | AFEWORLD             | Used for BACKSOLVING           |[         0]
    36   | VAPRICE              | Used for BACKSOLVING           |[         0]
    37   | TFURATIO             | In the condensed system        |        10
    38   | ENDWDEMAND           | In the condensed system        |         0
    39   | OUTPUTPRICES         | In the condensed system        |         0
    40   | TOUTRATIO            | In the condensed system        |        10
    41   | ZEROPROFITS          | In the condensed system        |         0
    42   | KAPSVCES             | In the condensed system        |        10
    43   | KAPRENTAL            | In the condensed system        |        10
    44   | CAPGOODS             | In the condensed system        |        10
    45   | PRCGOODS             | In the condensed system        |        10
    46   | KBEGINNING           | In the condensed system        |        10
    47   | KEND                 | In the condensed system        |        10
    48   | RORCURRENT           | In the condensed system        |        10
    49   | ROREXPECTED          | In the condensed system        |        10
    50   | BALDWIN              | In the condensed system        |        10
    51   | RORGLOBAL            | In the condensed system        |        10
    52   | GLOBALINV            | In the condensed system        |         1
    53   | PRICGDS              | In the condensed system        |         1
    54   | SAVEPRICE            | In the condensed system        |        10
    55   | EXPRICES             | In the condensed system        |      1000
    56   | TEXPRATIO            | In the condensed system        |        10
    57   | MKTPRICES            | Used for BACKSOLVING           |[      1000]
    58   | DPRICEIMP            | In the condensed system        |       100
    59   | PRICETGT             | In the condensed system        |       100
    60   | IMPORTDEMAND         | In the condensed system        |      1000
    61   | TIMPRATIO            | In the condensed system        |        10
    62   | QTRANS_MFSD          | Used for BACKSOLVING           |[     10000]
    63   | TRANS_DEMAND         | In the condensed system        |        10
    64   | PTRANSPORT           | In the condensed system        |        10
    65   | TRANSCOSTINDEX       | Used for BACKSOLVING           |[      1000]
    66   | TRANSTECHANGE        | Used for BACKSOLVING           |[     10000]
    67   | TRANSVCES            | In the condensed system        |       100
    68   | FOBCIF               | Used for BACKSOLVING           |[      1000]
    69   | FACTORINCPRICES      | In the condensed system        |        50
    70   | TINCRATIO            | In the condensed system        |        10
    71   | ENDW_PRICE           | In the condensed system        |        50
    72   | ENDW_SUPPLY          | In the condensed system        |         0
    73   | FACTORINCOME         | In the condensed system        |        10
    74   | DINDTAXRATIO         | In the condensed system        |        10
    75   | DTAXRATIO            | In the condensed system        |        10
    76   | REGIONALINCOME       | In the condensed system        |        10
    77   | DPARAV               | In the condensed system        |        10
    78   | UTILITELASTIC        | In the condensed system        |        10
    79   | PRIVCONSEXP          | In the condensed system        |        10
    80   | GOVCONSEXP           | In the condensed system        |        10
    81   | SAVING               | In the condensed system        |        10
    82   | PRICEINDEXREG        | In the condensed system        |        10
    83   | UTILITY              | In the condensed system        |        10
    84   | DISTPARSUM           | In the condensed system        |        10
    85   | MKTCLDOM             | In the condensed system        |       100
    86   | MKTCLTRD_MARG        | In the condensed system        |       100
    87   | MKTCLTRD_NMRG        | In the condensed system        |         0
    88   | MKTCLIMP             | In the condensed system        |       100
    89   | MKTCLENDWM           | In the condensed system        |         0
    90   | MKTCLENDWS           | In the condensed system        |         0
    91   | WALRAS_S             | In the condensed system        |         1
    92   | WALRAS_D             | In the condensed system        |         1
    93   | WALRAS               | In the condensed system        |         1
    94   | REALRETURN           | In the condensed system        |        50
    95   | PRIMFACTPR           | In the condensed system        |        10
    96   | PRIMFACTPRWLD        | In the condensed system        |         1
    97   | REGSUPRICE           | In the condensed system        |        10
    98   | REGDEMPRICE          | In the condensed system        |        10
    99   | TOTeq                | In the condensed system        |        10
   100   | VGDP_r               | In the condensed system        |        10
   101   | PGDP_r               | In the condensed system        |        10
   102   | QGDP_r               | In the condensed system        |        10
   103   | COMPVALADEQ          | Used for BACKSOLVING           |[         0]
   104   | VREGEX_ir_MARG       | In the condensed system        |       100
   105   | VREGEX_ir_NMRG       | In the condensed system        |         0
   106   | VREGEX_r             | In the condensed system        |        10
   107   | VWLDEX_i             | In the condensed system        |        10
   108   | VWLDEX               | In the condensed system        |         1
   109   | VREGIM_is            | In the condensed system        |       100
   110   | VREGIM_s             | In the condensed system        |        10
   111   | VWLDIM_i             | In the condensed system        |        10
   112   | VWLDOUT              | In the condensed system        |        10
   113   | VWLDOUTUSE           | In the condensed system        |        10
   114   | PREGEX_ir_MARG       | In the condensed system        |       100
   115   | PREGEX_ir_NMRG       | In the condensed system        |         0
   116   | PREGEX_r             | In the condensed system        |        10
   117   | PWLDEX_i             | In the condensed system        |        10
   118   | PWLDEX               | In the condensed system        |         1
   119   | PREGIM_is            | In the condensed system        |       100
   120   | PREGIM_s             | In the condensed system        |        10
   121   | PWLDIM_i             | In the condensed system        |        10
   122   | PWLDOUT              | In the condensed system        |        10
   123   | PWLDUSE              | In the condensed system        |        10
   124   | QREGEX_ir_MARG       | In the condensed system        |       100
   125   | QREGEX_ir_NMRG       | In the condensed system        |         0
   126   | QREGEX_r             | In the condensed system        |        10
   127   | QWLDEX_i             | In the condensed system        |        10
   128   | QWLDEX               | In the condensed system        |         1
   129   | QREGIM_is            | In the condensed system        |       100
   130   | QREGIM_s             | In the condensed system        |        10
   131   | QWLDIM_i             | In the condensed system        |        10
   132   | QWLDOUT              | In the condensed system        |        10
   133   | QWLDOUTU             | In the condensed system        |        10
   134   | TRADEBAL_i           | In the condensed system        |       100
   135   | TRADEBALANCE         | In the condensed system        |        10
   136   | DTBALRATIO           | In the condensed system        |        10
   137   | GOVUSHD              | In the condensed system        |        10
   138   | PRIVDMNDSEV          | In the condensed system        |       100
   139   | PRIVATEUEV           | In the condensed system        |        10
   140   | UTILELASPRIVEV       | In the condensed system        |        10
   141   | DPARAVEV             | In the condensed system        |        10
   142   | UTILITELASTICEV      | In the condensed system        |        10
   143   | PCONSEXPEV           | In the condensed system        |        10
   144   | GOVCONSEXPEV         | In the condensed system        |        10
   145   | SAVINGEV             | In the condensed system        |        10
   146   | SAVEUEV              | In the condensed system        |        10
   147   | INCOME_EQUIV         | In the condensed system        |        10
   148   | EVREG                | In the condensed system        |        10
   149   | EVWLD                | In the condensed system        |         1
   150   | EV_DECOMPOSITION     | In the condensed system        |        10
   151   | WORLDEV              | In the condensed system        |         1
   152   | CNT_WEV_dpar         | In the condensed system        |        10
   153   | CONT_EV_pop          | In the condensed system        |        10
   154   | CONT_EV_qor          | Used for BACKSOLVING           |[        10]
   155   | CONT_EV_qoir         | Used for BACKSOLVING           |[         0]
   156   | CONT_EV_qfer         | Used for BACKSOLVING           |[        10]
   157   | CONT_EV_qfeir        | Used for BACKSOLVING           |[        50]
   158   | CONT_EV_qfeijr       | Used for BACKSOLVING           |[         0]
   159   | CONT_EV_qfmr         | Used for BACKSOLVING           |[        10]
   160   | CONT_EV_qfmir        | Used for BACKSOLVING           |[       100]
   161   | CONT_EV_qfmijr       | Used for BACKSOLVING           |[         0]
   162   | CONT_EV_qfdr         | Used for BACKSOLVING           |[        10]
   163   | CONT_EV_qfdir        | Used for BACKSOLVING           |[       100]
   164   | CONT_EV_qfdijr       | Used for BACKSOLVING           |[         0]
   165   | CONT_EV_qpmr         | Used for BACKSOLVING           |[        10]
   166   | CONT_EV_qpmir        | Used for BACKSOLVING           |[       100]
   167   | CONT_EV_qpdr         | Used for BACKSOLVING           |[        10]
   168   | CONT_EV_qpdir        | Used for BACKSOLVING           |[       100]
   169   | CONT_EV_qgmr         | Used for BACKSOLVING           |[        10]
   170   | CONT_EV_qgmir        | Used for BACKSOLVING           |[       100]
   171   | CONT_EV_qgdr         | Used for BACKSOLVING           |[        10]
   172   | CONT_EV_qgdir        | Used for BACKSOLVING           |[       100]
   173   | CONT_EV_qxsr         | Used for BACKSOLVING           |[        10]
   174   | CONT_EV_qxsirs       | Used for BACKSOLVING           |[      1000]
   175   | CONT_EV_qimr         | Used for BACKSOLVING           |[        10]
   176   | CONT_EV_qimisr       | Used for BACKSOLVING           |[      1000]
   177   | CONT_EV_alleffr      | Used for BACKSOLVING           |[        10]
   178   | CONT_EV_alleffir_E   | In the condensed system        |        50
   179   | CONT_EV_alleffir_T   | In the condensed system        |       100
   180   | CONT_EV_totr         | Used for BACKSOLVING           |[        10]
   181   | CNT_EV_cgdsr         | In the condensed system        |        10
   182   | CONT_EV_endwr        | In the condensed system        |        10
   183   | CONT_EV_endwir       | In the condensed system        |        50
   184   | CONT_EV_techr        | In the condensed system        |        10
   185   | CONT_EV_tech_aor     | In the condensed system        |        10
   186   | CONT_EV_tech_aoir    | Used for BACKSOLVING           |[         0]
   187   | CONT_EV_tech_afer    | In the condensed system        |        10
   188   | CONT_EV_tech_afeijr  | Used for BACKSOLVING           |[         0]
   189   | CONT_EV_tech_avar    | In the condensed system        |        10
   190   | CONT_EV_tech_avajr   | Used for BACKSOLVING           |[         0]
   191   | CONT_EV_tech_afr     | In the condensed system        |        10
   192   | CONT_EV_tech_afijr   | Used for BACKSOLVING           |[         0]
   193   | CONT_EV_tech_atrr    | In the condensed system        |        10
   194   | CONT_EV_tech_afmfdsd | Used for BACKSOLVING           |[     10000]
   195   | CONT_EV_tech_amsr    | In the condensed system        |        10
   196   | CONT_EV_tech_amsirs  | Used for BACKSOLVING           |[      1000]
   197   | CONT_EV_kbr          | In the condensed system        |        10
   198   | EXPPRICE_MARG        | In the condensed system        |       100
   199   | EXPPRICE_NMRG        | In the condensed system        |         0
   200   | IMPPRICE1_MARG       | In the condensed system        |       100
   201   | IMPPRICE1_NMRG       | In the condensed system        |         0
   202   | WRLDPRICEi           | In the condensed system        |        10
   203   | WRLDPRICE            | In the condensed system        |         1
   204   | c1_irEQ              | In the condensed system        |       100
   205   | c2_irEQ              | In the condensed system        |       100
   206   | c3_irEQ              | In the condensed system        |       100
   207   | c1_rEQ               | In the condensed system        |        10
   208   | c2_rEQ               | In the condensed system        |        10
   209   | c3_rEQ               | In the condensed system        |        10
   210   | TOT2eq               | In the condensed system        |        10


 Maximum number of equations in condensed system is 5692



     =============================
     Final status of all Variables
     =============================

  Number |    Variable     | Status of variable                  |   Max  
         |      name       |                                     |  size  
 --------|-----------------|-------------------------------------|--------
         |                 |                                     |
     1   | psave           | In the condensed system             |        10
     2   | qsave           | In the condensed system             |        10
     3   | pgd             | You can BACKSOLVE for its values    |       100B
     4   | qgd             | In the condensed system             |       100
     5   | pm              | In the condensed system             |         0
     6   | pgm             | You can BACKSOLVE for its values    |       100B
     7   | qgm             | You can BACKSOLVE for its values    |       100B
     8   | pim             | In the condensed system             |       100
     9   | ppd             | You can BACKSOLVE for its values    |       100B
    10   | qpd             | In the condensed system             |       100
    11   | ppm             | You can BACKSOLVE for its values    |       100B
    12   | qpm             | You can BACKSOLVE for its values    |       100B
    13   | ps              | In the condensed system             |         0
    14   | qo              | In the condensed system             |         0
    15   | pfe             | In the condensed system             |         0
    16   | qfe             | In the condensed system             |         0
    17   | pfd             | You can BACKSOLVE for its values    |         0B
    18   | qfd             | In the condensed system             |         0
    19   | pfm             | You can BACKSOLVE for its values    |         0B
    20   | qfm             | You can BACKSOLVE for its values    |         0B
    21   | pmes            | In the condensed system             |         0
    22   | kb              | In the condensed system             |        10
    23   | pcgds           | In the condensed system             |        10
    24   | pms             | You can BACKSOLVE for its values    |      1000B
    25   | qxs             | In the condensed system             |      1000
    26   | pcif            | You can BACKSOLVE for its values    |      1000B
    27   | pfob            | In the condensed system             |      1000
    28   | qst             | In the condensed system             |       100
    29   | y               | In the condensed system             |        10
    30   | pop             | In the condensed system             |        10
    31   | qoes            | In the condensed system             |         0
    32   | endwslack       | In the condensed system             |        50
    33   | pgov            | You can BACKSOLVE for its values    |        10B
    34   | yg              | In the condensed system             |        10
    35   | ug              | In the condensed system             |        10
    36   | ppriv           | In the condensed system             |        10
    37   | uepriv          | In the condensed system             |        10
    38   | yp              | In the condensed system             |        10
    39   | up              | In the condensed system             |        10
    40   | to              | In the condensed system             |         0
    41   | qim             | In the condensed system             |       100
    42   | globalcgds      | In the condensed system             |         1
    43   | pcgdswld        | In the condensed system             |         1
    44   | del_taxrgc      | In the condensed system             |        10
    45   | del_taxrpc      | In the condensed system             |        10
    46   | del_taxriu      | In the condensed system             |        10
    47   | del_taxrfu      | In the condensed system             |        10
    48   | del_taxrout     | In the condensed system             |        10
    49   | del_taxrexp     | In the condensed system             |        10
    50   | del_taxrimp     | In the condensed system             |        10
    51   | del_taxrinc     | In the condensed system             |        10
    52   | pg              | You can BACKSOLVE for its values    |       100B
    53   | qg              | You can BACKSOLVE for its values    |       100B
    54   | tgd             | In the condensed system             |       100
    55   | tgm             | In the condensed system             |       100
    56   | pp              | In the condensed system             |       100
    57   | qp              | You can BACKSOLVE for its values    |       100B
    58   | tp              | In the condensed system             |        10
    59   | tpd             | In the condensed system             |       100
    60   | atpd            | In the condensed system             |       100
    61   | tpm             | In the condensed system             |       100
    62   | atpm            | In the condensed system             |       100
    63   | pva             | You can BACKSOLVE for its values    |         0B
    64   | qva             | You can BACKSOLVE for its values    |         0B
    65   | pf              | You can BACKSOLVE for its values    |         0B
    66   | qf              | You can BACKSOLVE for its values    |         0B
    67   | ao              | You can BACKSOLVE for its values    |         0B
    68   | ava             | You can BACKSOLVE for its values    |         0B
    69   | af              | You can BACKSOLVE for its values    |         0B
    70   | afe             | You can BACKSOLVE for its values    |         0B
    71   | ams             | In the condensed system             |      1000
    72   | aosec           | In the condensed system             |         0
    73   | aoreg           | In the condensed system             |        10
    74   | aoall           | In the condensed system             |         0
    75   | avasec          | In the condensed system             |         0
    76   | avareg          | In the condensed system             |        10
    77   | avaall          | In the condensed system             |         0
    78   | afcom           | In the condensed system             |        10
    79   | afsec           | In the condensed system             |         0
    80   | afreg           | In the condensed system             |        10
    81   | afall           | In the condensed system             |         0
    82   | tfd             | In the condensed system             |         0
    83   | tfm             | In the condensed system             |         0
    84   | tf              | In the condensed system             |         0
    85   | afecom          | In the condensed system             |         5
    86   | afesec          | In the condensed system             |         0
    87   | afereg          | In the condensed system             |        10
    88   | afeall          | In the condensed system             |         0
    89   | profitslack     | In the condensed system             |         0
    90   | rental          | In the condensed system             |        10
    91   | ke              | In the condensed system             |        10
    92   | rore            | In the condensed system             |        10
    93   | rorc            | In the condensed system             |        10
    94   | qcgds           | In the condensed system             |        10
    95   | ksvces          | In the condensed system             |        10
    96   | EXPAND          | In the condensed system             |        10
    97   | rorg            | In the condensed system             |         1
    98   | cgdslack        | In the condensed system             |        10
    99   | psaveslack      | In the condensed system             |        10
   100   | tx              | In the condensed system             |       100
   101   | txs             | In the condensed system             |      1000
   102   | tm              | In the condensed system             |       100
   103   | tms             | In the condensed system             |      1000
   104   | pr              | In the condensed system             |       100
   105   | qtmfsd          | You can BACKSOLVE for its values    |     10000B
   106   | atmfsd          | You can BACKSOLVE for its values    |     10000B
   107   | atm             | In the condensed system             |        10
   108   | atf             | In the condensed system             |        10
   109   | ats             | In the condensed system             |        10
   110   | atd             | In the condensed system             |        10
   111   | atall           | In the condensed system             |     10000
   112   | ptrans          | You can BACKSOLVE for its values    |      1000B
   113   | qtm             | In the condensed system             |        10
   114   | pt              | In the condensed system             |        10
   115   | uelas           | In the condensed system             |        10
   116   | dppriv          | In the condensed system             |        10
   117   | dpgov           | In the condensed system             |        10
   118   | dpsave          | In the condensed system             |        10
   119   | fincome         | In the condensed system             |        10
   120   | del_indtaxr     | In the condensed system             |        10
   121   | del_ttaxr       | In the condensed system             |        10
   122   | incomeslack     | In the condensed system             |        10
   123   | dpav            | In the condensed system             |        10
   124   | p               | In the condensed system             |        10
   125   | au              | In the condensed system             |        10
   126   | dpsum           | In the condensed system             |        10
   127   | u               | In the condensed system             |        10
   128   | qds             | In the condensed system             |       100
   129   | tradslack       | In the condensed system             |       100
   130   | walras_sup      | In the condensed system             |         1
   131   | walras_dem      | In the condensed system             |         1
   132   | walraslack      | In the condensed system             |         1
   133   | vxwfob          | In the condensed system             |       100
   134   | viwcif          | In the condensed system             |       100
   135   | vxwreg          | In the condensed system             |        10
   136   | viwreg          | In the condensed system             |        10
   137   | pfactreal       | In the condensed system             |        50
   138   | pfactor         | In the condensed system             |        10
   139   | pfactwld        | In the condensed system             |         1
   140   | psw             | In the condensed system             |        10
   141   | pdw             | In the condensed system             |        10
   142   | tot             | In the condensed system             |        10
   143   | vgdp            | In the condensed system             |        10
   144   | pgdp            | In the condensed system             |        10
   145   | qgdp            | In the condensed system             |        10
   146   | compvalad       | You can BACKSOLVE for its values    |         0B
   147   | pxw             | In the condensed system             |       100
   148   | vxwcom          | In the condensed system             |        10
   149   | vxwwld          | In the condensed system             |         1
   150   | viwcom          | In the condensed system             |        10
   151   | valuew          | In the condensed system             |        10
   152   | valuewu         | In the condensed system             |        10
   153   | pxwreg          | In the condensed system             |        10
   154   | pxwcom          | In the condensed system             |        10
   155   | pxwwld          | In the condensed system             |         1
   156   | piw             | In the condensed system             |       100
   157   | piwreg          | In the condensed system             |        10
   158   | piwcom          | In the condensed system             |        10
   159   | pw              | In the condensed system             |        10
   160   | pwu             | In the condensed system             |        10
   161   | qxw             | In the condensed system             |       100
   162   | qxwreg          | In the condensed system             |        10
   163   | qxwcom          | In the condensed system             |        10
   164   | qxwwld          | In the condensed system             |         1
   165   | qiw             | In the condensed system             |       100
   166   | qiwreg          | In the condensed system             |        10
   167   | qiwcom          | In the condensed system             |        10
   168   | qow             | In the condensed system             |        10
   169   | qowu            | In the condensed system             |        10
   170   | DTBALi          | In the condensed system             |       100
   171   | DTBAL           | In the condensed system             |        10
   172   | DTBALR          | In the condensed system             |        10
   173   | uelasev         | In the condensed system             |        10
   174   | ueprivev        | In the condensed system             |        10
   175   | ugev            | In the condensed system             |        10
   176   | upev            | In the condensed system             |        10
   177   | qsaveev         | In the condensed system             |        10
   178   | yev             | In the condensed system             |        10
   179   | ypev            | In the condensed system             |        10
   180   | ygev            | In the condensed system             |        10
   181   | qpev            | In the condensed system             |       100
   182   | ysaveev         | In the condensed system             |        10
   183   | dpavev          | In the condensed system             |        10
   184   | EV              | In the condensed system             |        10
   185   | WEV             | In the condensed system             |         1
   186   | EV_ALT          | In the condensed system             |        10
   187   | WEV_ALT         | In the condensed system             |         1
   188   | CNTdpar         | In the condensed system             |        10
   189   | CNTpopr         | In the condensed system             |        10
   190   | CNTqor          | You can BACKSOLVE for its values    |        10B
   191   | CNTqoir         | You can BACKSOLVE for its values    |         0B
   192   | CNTqfer         | You can BACKSOLVE for its values    |        10B
   193   | CNTqfeir        | You can BACKSOLVE for its values    |        50B
   194   | CNTqfeijr       | You can BACKSOLVE for its values    |         0B
   195   | CNTqfmr         | You can BACKSOLVE for its values    |        10B
   196   | CNTqfmir        | You can BACKSOLVE for its values    |       100B
   197   | CNTqfmijr       | You can BACKSOLVE for its values    |         0B
   198   | CNTqfdr         | You can BACKSOLVE for its values    |        10B
   199   | CNTqfdir        | You can BACKSOLVE for its values    |       100B
   200   | CNTqfdijr       | You can BACKSOLVE for its values    |         0B
   201   | CNTqpmr         | You can BACKSOLVE for its values    |        10B
   202   | CNTqpmir        | You can BACKSOLVE for its values    |       100B
   203   | CNTqpdr         | You can BACKSOLVE for its values    |        10B
   204   | CNTqpdir        | You can BACKSOLVE for its values    |       100B
   205   | CNTqgmr         | You can BACKSOLVE for its values    |        10B
   206   | CNTqgmir        | You can BACKSOLVE for its values    |       100B
   207   | CNTqgdr         | You can BACKSOLVE for its values    |        10B
   208   | CNTqgdir        | You can BACKSOLVE for its values    |       100B
   209   | CNTqxsr         | You can BACKSOLVE for its values    |        10B
   210   | CNTqxsirs       | You can BACKSOLVE for its values    |      1000B
   211   | CNTqimr         | You can BACKSOLVE for its values    |        10B
   212   | CNTqimisr       | You can BACKSOLVE for its values    |      1000B
   213   | CNTalleffr      | You can BACKSOLVE for its values    |        10B
   214   | CNTalleffir     | In the condensed system             |         0
   215   | CNTtotr         | You can BACKSOLVE for its values    |        10B
   216   | CNTcgdsr        | In the condensed system             |        10
   217   | CNTendwr        | In the condensed system             |        10
   218   | CNTendwir       | In the condensed system             |        50
   219   | CNTtechr        | In the condensed system             |        10
   220   | CNTtech_aor     | In the condensed system             |        10
   221   | CNTtech_aoir    | You can BACKSOLVE for its values    |         0B
   222   | CNTtech_afer    | In the condensed system             |        10
   223   | CNTtech_afeijr  | You can BACKSOLVE for its values    |         0B
   224   | CNTtech_avar    | In the condensed system             |        10
   225   | CNTtech_avajr   | You can BACKSOLVE for its values    |         0B
   226   | CNTtech_afr     | In the condensed system             |        10
   227   | CNTtech_afijr   | You can BACKSOLVE for its values    |         0B
   228   | CNTtech_atrr    | In the condensed system             |        10
   229   | CNTtech_afmfdsd | You can BACKSOLVE for its values    |     10000B
   230   | CNTtech_amsr    | In the condensed system             |        10
   231   | CNTtech_amsirs  | You can BACKSOLVE for its values    |      1000B
   232   | CNTkbr          | In the condensed system             |        10
   233   | px_ir           | In the condensed system             |       100
   234   | pm_ir           | In the condensed system             |       100
   235   | px_i            | In the condensed system             |        10
   236   | px_             | In the condensed system             |         1
   237   | c1_ir           | In the condensed system             |       100
   238   | c2_ir           | In the condensed system             |       100
   239   | c3_ir           | In the condensed system             |       100
   240   | c1_r            | In the condensed system             |        10
   241   | c2_r            | In the condensed system             |        10
   242   | c3_r            | In the condensed system             |        10
   243   | tot2            | In the condensed system             |        10


 Maximum number of variables in condensed system is 19268
 Maximum number of extra variables available for backsolving is 37680

 

              Summary of model
              ----------------

 There are 152 equations left in the CONDENSED model.
 0 equations have been used to SUBSTITUTE out variables.
 58 equations have been used to BACKSOLVE for variables.
 The entire model contains 210 equations.

 There are 185 variables left in the CONDENSED model.
 0 variables have been SUBSTITUTED out.
 0 variables have been OMITTED.
 You can BACKSOLVE for 58 variables.
 The entire model contains 243 variables.


 ******************************************************************************
 -3-
 -->                     Starting CODE GENERATION

 ******************************************************************************



  CODE OPTIONS CHOSEN
  -------------------


                         TABLO PORTABLE
               CODE OPTIONS   ( --> indicates those in effect )

      NEQ Do no equations           PGS Prepare output for GEMSIM
      NDS Do no displays        --> WFP Write a Fortran Program
      NWR Do no writes                    (i.e. a TABLO-generated program)
                                --> FC5 Fast Compile TG-prog under LF95
      ACC All comment lines in      NMS Don't allow simulations
             code
                                    CIN Code file name same as
                                          Information file name
                                    CDM Old option. Has no effect.
                                    NRZ No run-time reports re use of
                                           ZERODIVIDE default values
                                    NXS No "extra" statements allowed

  Select an option   :  <opt>      Deselect an option      : -<opt>
  Help for an option : ?<opt>      Help on all options     : ??
  Redisplay options  : /           Finish option selection : Carriage return

  END OF CODE OPTIONS CHOSEN
  --------------------------
  
! ( Program is 'gtapu.for'.)
 (Total number of lines of code is 206412.)

 This program
     o can create the Equations file (for the condensed system)
     o can check 2 ASSERTIONs
     o can carry out multi-step simulations

 MXGSRS = 0, MXGSIS = 0.
 MXGSLG = 0, MXGSIC = 0.

 MXGSOP = 0, MXGSIN = 0.
 MXGSRC = 0, MXGSNS=0.
! (Model Information file is 'gtapu.min'.)

 (Total number of programs written is 1.)

 *******************************************************************
 Successful completion of TABLO.
 The program is
   'gtapu.for'.

 This program
     o can create the Equations file (for the condensed system)
     o can check 2 ASSERTIONs
     o can carry out multi-step simulations

 *******************************************************************
